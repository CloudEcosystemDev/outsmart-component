{
    "title": "OpenApi",
    "description": "FORMAT: 1A\nHOST: https://www.out-smart.com/openapi/8\n\n# OutSmart\n\nOutSmart OPENApi\n\n## Changelog\n\n### API 8 \n\n+ 26-02-2020\n\t+ Added TimeSheet Hours, TimeSheet Travel, TimeSheet Expenses, Notes and Expense categories.\n\n+ 18-06-2019\n    + Projects: added adr_code, cpn_code and debtor_number_invoice\n+ 24-10-2018\n    + Added section: Advanced filters\n    + object_parts: Added advanced filters\n+ 23-10-2018\n    + Added endpoint: object_parts/changed\n    + DeleteEntity: Added object_part entity\n+ 17-10-2018\n    + Deprecated endpoint: parts\n    + object_parts: Added new fields\n+ 07-08-2018\n    + Added endpoint: invoices\n    + Added endpoint: transactions\n+ 21-06-2018\n    + Added endpoint: vehicles\n    + Added endpoint: regions\n    + DeleteEntity: Added region entity\n    + DeleteEntity: Added region entity\n\n+ 12-06-2018\n    + PostWorkorders: Added Workperiods array   \n    + PostWorkorders: Added 'MaterialType','MaterialFreeField1','MaterialFreeField2','MaterialFreeField3','MaterialFreeField4','MaterialFreeField5'\n    + PostWorkorders: Added CustomerLatitude and CustomerLongitude\n    + GetWorkorder(s): Added 'MaterialType','MaterialFreeField1','MaterialFreeField2','MaterialFreeField3','MaterialFreeField4','MaterialFreeField5'\n    + GetWorkorder(s): Added CustomerLatitude and CustomerLongitude\n    + addresses: Added adr_latitude and adr_longitude\n    + relations: Added latitude and longitude\n    + materials: Added eancode and barcode to docs\n    + materials: Added freefield1, freefield2, freefield3, freefield4, freefield5 \n    + Added endpoint: priorities\n    + Added endpoint: errors\n    + Added endpoint: solutions\n    + Added endpoint: material_types \n    + DeleteEntity: Added material_category entity\n    + DeleteEntity: Added error entity\n    + DeleteEntity: Added solution entity\n    + DeleteEntity: Added priority entity\n    + GetWorkorder(s): Added ShortWorkDescription,Comment,ErrorCode,ErrorMessage,SolutionCode,SolutionMessage,MinimumHours,RoundingAmount,PriorityCode,PriorityMessage\n    + PostWorkorders: Added ShortWorkDescription,Comment,ErrorCode,ErrorMessage,SolutionCode,SolutionMessage,MinimumHours,RoundingAmount,PriorityCode,PriorityMessage\n    + Changed Date and Time format in documentation to d-m-Y and H:i\n    \n+ 22-05-2018\n    + objects: added parameter obj_adr_code, obj_latitude, obj_longitude\n    \n+ 28-02-2018\n    + DeleteEntity: Added location entity\n    + Locations: Added POST method\n    + UpdateWorkorder: Added workstatus parameter\n\n+ 15-02-2018\n    + objects: Added obj_order\n    + objects/changed: Added obj_order\n    + Added Endpoint: object\n    + Added Endpoint: address\n    + Added Endpoint: contactperson\n    + Added Endpoint: category\n    + DeleteEntity: Added object entity\n    + DeleteEntity: Added address entity\n    + DeleteEntity: Added contactperson entity\n    + DeleteEntity: Added category entity\n    \n    \n+ 18-12-2017\n    + Added Endpoint: objects/changed\n    \n+ 22-11-2017\n    + PostWorkorders: Added CpnCode and AdrCode\n    + GetWorkorder(s): Added CpnCode and AdrCode\n    + Added Endpoint: addressess\n    + Added endpoint: contactpersons\n+ 27-09-2017\n    + PostWorkorders: Data and FileName to Attachments\n    + GetWorkorder(s): Added PdfUrl to Forms\n\n\n+ 06-04-2017\n    + obj_object: Changed  `obj_debiteur_nummer` to required\n+ 05-04-2017\n    + GetWorkorders: Added `workstatus` parameter to GET parameters\n+ 02-03-2017\n    + Response object parameter `object` renamed to `response` due to reserved keywords in certain programming languages.\n    + PostWorkorders: added WorkEndDate\n    + PostWorkorders: added WorkEndTime\n    + PostWorkorders: renamed WorkInstruction to WorkDescription\n    + PostWorkorders: added InternalWorkDescription: This description is used to internally brief the employee. This field is not visible for the customer.\n    + PostWorkorders: added WorkDeadline: This date can be added when no actual WorkDate and WorkTime are present. By setting the deadline the backoffice has the ability to prioritize unscheduled workorders\n    + PostWorkorders: added WorkDuration: This value should contain the amount of scheduled minutes for the workorder. This is used for planning (setting WorkEndDate and WorkEndTime).\n    + PostWorkorders: added WorkStatus: This status code can be selected from a list of work statusses (see new status API). The backoffice has the ability to add an extra status, for example: unable to contact customer, waiting for materials. When the employee completes the workorder and sets WorkFinished to 0  there is an option to select the reason, for example: bad weather conditions, customer not on location.\n    + PostWorkorders: added PickupPlanning: Pickup planning will be used in the future to give the employees an option to pick their own workorders from a batch.\n    + PostWorkorders: added WebPlanning: Web planning will be used in the future to give the customer an option to select their own WorkDate and WorkTime.\n    + GetWorkorder(s): added WorkEndDate, WorkEndTime, InternalWorkDescription, WorkDeadline, WorkDuration, WorkStatus, PickupPlanning and WebPlanning\n    + GetWorkorder(s): added Forms\n    + GetWorkorder(s): added Archived to documentation\n    + GetWorkorder(s): removed JobNr\n    + GetWorkorder(s): renamed `photos` to `Photos`\n    + GetWorkorder(s): renamed `workperiods` to `Workperiods`\n    + GetWorkorder(s): renamed `materials` to `Materials`\n    + GetWorkorder(s): renamed `documents` to `Documents`  \n    + PostWorkorders: added Forms\n    + PostWorkorders: added Employees: Relation between workorder and employees will be visible in planbord.\n    + PostWorkorders: added WorkObjects\n    + Added endpoint: forms\n    + Added endpoint: suppliers\n    + Added endpoint: objects\n    + Added endpoint: parts\n    + Added endpoint: object_parts\n    + Added endpoint: categories\n    + Added endpoint: material_categories\n    + Added endpoint: worktypes\n    + Added endpoint: paymentsmethods\n    + Added endpoint: workstatusses\n    + Response codes: added 1900, 1901, 2000, 2001, 2100, 2101, 2200, 2201, 2300, 2301, 2400, 2401, 2500, 2501, 2600, 2601, 2700, 2701, 2800, 2801 \n    + relations: `email` changed to not required\n    + added Workorder status section\n    + added API workflow section\n\n+ 01-03-2017\n    + Initial release\n    \n\n## Authentication\n\nEach request should contain two GET parameters containing the customer and software token.\n\n+ Parameters\n    + token\n    + software_token  \n\nA token is registered to a WorkOrderApp customer who registered a license for an external software package. A software token is generated by WorkOrderApp and connected to a single external software package. When a request is executed we check if the external software packages connected to the token are matched.\n\n## Request\n\nEach request should be executed on the HTTPS endpoint. HTTP is not allowed and will result in an error. \n\n## Response\n\nEach request results in a JSON object with the following parameters:\n  \n- code: `1001` (number) - The response code of the executed request,\n- messages:  (array[string]) - Array containing detailed messages of the executed request,\n- response: (object) - Response object  \n\nFollowing code can occur in a response: \n\n| Code | Meaning                                                                                                                                   |\n|------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| 200  | Request successfully executed.                                                                                                            |\n| 1000 | The URL being called is not containing an endpoint.                                                                                       |\n| 1001 | The endpoint being provided is unknown on our side.                                                                                       |\n| 1002 | Request is missing the GET parameter: token.                                                                                              |\n| 1003 | Request is missing the GET parameter: software_token.                                                                                     |\n| 1004 | Client token provided is unauthorized to execute this request.                                                                            |\n| 1005 | Software token provided is unauthorized to execute this request. Either the token is not correct or it's not matched to the client token. |\n| 1006 | All endpoints should use https.                                                                                                           |\n| 1007 | A general uncaught error occured. Please let WorkorderApp know.                                                                           |\n| 1008 | The server did not receive a message body.                                                                                                |\n| 1009 | The server did receive a message body but was unable to parse this to a valid JSON array or object.                                       |\n| 1100 | The insert or update of an employee failed.                                                                                               |\n| 1101 | A required field is missing in this request.                                                                                              |\n| 1200 | The insert or update of a material row failed.                                                                                            |\n| 1201 | A required field is missing in this request.                                                                                              |\n| 1300 | The insert or update of a relation failed.                                                                                                |\n| 1301 | A required field is missing in this request.                                                                                              |\n| 1400 | No location data found for this customer.                                                                                                 |\n| 1500 | Workorder not found by given criteria.                                                                                                    |\n| 1501 | Posted workorder is missing a required field.                                                                                             |\n| 1502 | Update workorder request is missing update data.                                                                                          |\n| 1503 | No data changed.                                                                                                                          |\n| 1504 | There was problem parsing the data being added.                                                                                           |\n| 1600 | Delete of an entity failed.   \n| 1700 | The insert or update of an project failed.                                                                                               |\n| 1701 | A required field is missing or date is invalid in this request.                                                                                           |\n| 1800 | The insert or update of a hourtype  failed.                                                                                                |\n| 1801 | A required field is missing, active is not 1 or 0 or price cannot be parsed in this request.                                                                                              |\n| 1900 | The insert or update of an object failed.                                                                                               |\n| 1901 | A required field is missing.                                                                                              |\n| 2000 | The insert or update of a supplier failed.                                                                                               |\n| 2001 | A required field is missing.                                                                                              |\n| 2100 | The insert or update of a part failed.                                                                                               |\n| 2101 | A required field is missing.                                                                                              |\n| 2200 | The insert or update of an object part failed.                                                                                               |\n| 2201 | A required field is missing.                                                                                              |\n| 2300 | The insert or update of a form failed.                                                                                               |\n| 2301 | A required field is missing.                                                                                              |\n| 2400 | The insert or update of a category failed.                                                                                               |\n| 2401 | A required field is missing.                                                                                              |\n| 2500 | The insert or update of a material category failed.                                                                                               |\n| 2501 | A required field is missing.                                                                                              |\n| 2600 | The insert or update of a worktype failed.                                                                                               |\n| 2601 | A required field is missing                                                                                              |\n| 2700 | The insert or update of a payment method failed.                                                                                               |\n| 2701 | A required field is missing.                                                                                              |\n| 2800 | The insert or update of a workstatus failed.                                                                                               |\n| 2801 | A required field is missing.                                                                                              |\n\n### Example JSON\n\n+ Body\n\n        {\n          \"code\": 1001,\n          \"messages\": [],\n          \"response\": null\n        }\n\n## Workorder status\n\nA workorder status can be one of the following:\n\n| Status        | Description                                                                                           |\n|---------------|-------------------------------------------------------------------------------------------------------|\n| Klaargezet    | Workorder is created and ready to be fetched on a device (if an employee is selected) .               |\n| Opgehaald     | Workorder is fetched on a device and employee can complete it.                                        | \n| Compleet      | Workorder is completed and set to backoffice. Workorder is now ready to be administratively handled.  |\n| Afgehandeld   | Workorder is administratively handled.                                                                | \n\n## API workflow\n\n+ Steps\n    + Sync required entities to WorkorderApp\n    + Add workorders through `PostWorkorders` API\n    + Update workorders through `UpdateWorkorder` API\n    + Fetch workorders through `GetWorkorders` with status Compleet. Add update_status=false to endpoint to prevent changing the status to Afgehandeld directly.\n    + For each workorder with status Compleet process it.\n    + If process is successfully completed call `GetWorkorder` API with update_status=true. The workorder status is now changed to Afgehandeld and will not be shown in next `GetWorkorders` call.\n    + If an error occurs notify the user and act correspondingly.\n\n## Advanced filters\n\n\nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1&operator=gt\nAdding multiple filters: &key[]=key1&value[]=value1&operator[]=eq&key[]=key2&value[]=value2&operator[]=gt\n\nFollowing operators are allowed:\n| Operator | Description                 |\n|----------|-----------------------------|\n| li       | Like (%)                    |\n| eq       | Equal (=)                   |\n| ne       | Not equal (!=)              |\n| gt       | Greather than (>)           |\n| ge       | Greather than or equal (>=) |\n| lt       | Less than  (<)              |\n| le       | Less than or equal (<=)     |\n \n \n \n## employees [/employees/{?token,software_token}]\n\nThis api is used to get or edit employees in WorkorderApp. \n\nEach employee record can contain the following data:\n\n| Parameter  | Required | Type (size)   |\n|------------|----------|---------------|\n| firstname  | Y        | Varchar (255) |\n| lastname   | Y        | Varchar (255) |\n| number     | Y        | Varchar (255) |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add employees [POST]\n\n+ Request Correct employee data posted. `response` will contain the amount of employees synced with WorkOrderApp (application/json)\n\n    + Body\n            \n            [{\"firstname\":\"Jan\",\"lastname\":\"Klaassen\",\"number\":\"123\"},{\"firstname\":\"Katrien\",\"lastname\":\"Klaassen\",\"number\":\"129\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 2\n            }\n  \n+ Request Required value missing. (application/json)\n\n    + Body\n    \n            [{\"lastname\":\"Klaassen\",\"number\":\"123\"},{\"firstname\":\"Katrien\",\"lastname\":\"Klaassen\",\"number\":\"129\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1101,\n              \"messages\": [\n                \"Required field missing: firstname\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n            \n            [{\"firstname\"\":\"Jan\",\"lastname\":\"Klaassen\",\"number\":\"123\"},{\"firstname\":\"Katrien\",\"lastname\":\"Klaassen\",\"number\":\"129\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get employees [GET]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [{\"firstname\":\"Jan\",\"lastname\":\"Klaassen\",\"number\":\"123\",\"active\":\"1\"},{\"firstname\":\"Katrien\",\"lastname\":\"Klaassen\",\"number\":\"129\",\"active\":\"1\"}]\n            }\n  \n         \n## materials [/materials/{?token,software_token}]\n\nThis api is used to sync materials with WorkorderApp.\n\nEach material record can contain the following data:\n\n| Parameter    | Required | Type (size)   |\n|--------------|----------|---------------|\n| code         | Y        | Varchar (255) |\n| description  | Y        | Text (64kb)   |\n| price        | Y        | Decimal       |\n| unit         | Y        | Varchar (255) |\n| eancode      | N        | Varchar (55)  |\n| barcode      | N        | Varchar (55)  |\n| freefield1   | N        | Varchar (255) |\n| freefield2   | N        | Varchar (255) |\n| freefield3   | N        | Varchar (255) |\n| freefield4   | N        | Varchar (255) |\n| freefield5   | N        | Varchar (255) |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add materials [POST]\n\n+ Request Correct material data posted. `response` will contain the amount of materials synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"code\":\"00001\",\"description\":\"Omschrijving 1\",\"price\":\"4,55\",\"unit\":\"M2\",\"eancode\":\"\",\"barcode\":\"\",\"freefield1\":\"\",\"freefield2\":\"\",\"freefield3\":\"\",\"freefield4\":\"\",\"freefield5\":\"\"},{\"code\":\"00012\",\"description\":\"Omschrijving 2\",\"price\":\"2,50\",\"unit\":\"M2\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 2\n            }\n  \n+ Request Required value missing. (application/json)\n\n    + Body\n    \n            [{\"description\":\"Omschrijving 1\",\"price\":\"4,55\",\"unit\":\"M2\"},{\"code\":\"00012\",\"description\":\"Omschrijving 2\",\"price\":\"2,50\",\"unit\":\"M2\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1201,\n              \"messages\": [\n                \"Required field missing: code\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n            \n            [{\"code\"\":\"00001\",\"description\":\"Omschrijving 1\",\"price\":\"4,55\",\"unit\":\"M2\"},{\"code\":\"00012\",\"description\":\"Omschrijving 2\",\"price\":\"2,50\",\"unit\":\"M2\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n            \n### Get materials [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\":  [{\"code\":\"00001\",\"description\":\"Omschrijving 1\",\"price\":\"4,55\",\"unit\":\"M2\"},{\"code\":\"00012\",\"description\":\"Omschrijving 2\",\"price\":\"2,50\",\"unit\":\"M2\"}]\n            }\n\n       \n## categories [/categories/{?token,software_token}]\n\nThis api is used to categories with WorkorderApp.\n\nEach category record can contain the following data:\n\n| Parameter                 | Description                                   | Required | Type (size)   |\n|---------------------------|-----------------------------------------------|----------|---------------|\n| cat_code                  | Category code                                 | Y        | Varchar (255) |\n| cat_cat_code              | Parent category code part                     | N        | Varchar (255) |\n| cat_name                  | Category name                                 | Y        | Varchar (255) |\n| cat_image                 | Url of the image. POST: An external url should be provided.  GET: You will receive a workorderapp url.     | N        | Varchar (255)      |\n| cat_display               | Indication if the category should be displayed| Y        | Int (10)      |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add categories [POST]\n\n\n+ Request Correct categories data posted. `response` will contain the amount of categories synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"cat_code\": \"001\",\n                  \"cat_name\": \"Ijzerwaren\",\n                  \"cat_display\": \"1\",\n                  \"cat_cat_code\": \"\"\n                  \"cat_image\": \"\"\n                },\n                {\n                  \"cat_code\": \"001-002\",\n                  \"cat_name\": \"Schroefjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                  \"cat_image\": \"\"\n                },\n                {\n                  \"cat_code\": \"001-003\",\n                  \"cat_name\": \"Boutjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                  \"cat_image\": \"\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":3}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            [\n                {\n                  \"cat_name\": \"Ijzerwaren\",\n                  \"cat_display\": \"1\",\n                  \"cat_cat_code\": \"\"\n                  \"cat_image\": \"\"\n                },\n                {\n                  \"cat_code\": \"001-002\",\n                  \"cat_name\": \"Schroefjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                  \"cat_image\": \"\"\n                },\n                {\n                  \"cat_code\": \"001-003\",\n                  \"cat_name\": \"Boutjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                  \"cat_image\": \"\"\n                }\n            ]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 2401,\n              \"messages\": [\n                \"Required field missing: cat_code\"\n              ],\n              \"response\": null\n            } \n            \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"cat_code\"\": \"001\",\n                  \"cat_name\": \"Ijzerwaren\",\n                  \"cat_display\": \"1\",\n                  \"cat_cat_code\": \"\"\n                  \"cat_image\": \"\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get categories [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"cat_code\": \"001\",\n                  \"cat_name\": \"Ijzerwaren\",\n                  \"cat_display\": \"1\",\n                  \"cat_cat_code\": \"\"\n                },\n                {\n                  \"cat_code\": \"001-002\",\n                  \"cat_name\": \"Schroefjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                },\n                {\n                  \"cat_code\": \"001-003\",\n                  \"cat_name\": \"Boutjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                }\n              ]\n            }\n\n## category [/category/?token={token}&software_token={software_token}&key={key}&value={value}]\n\nThis api is used to fetch category based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2\n\n### Get categories by filter [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n               \"response\": [\n                {\n                  \"cat_code\": \"001\",\n                  \"cat_name\": \"Ijzerwaren\",\n                  \"cat_display\": \"1\",\n                  \"cat_cat_code\": \"\"\n                },\n                {\n                  \"cat_code\": \"001-002\",\n                  \"cat_name\": \"Schroefjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                },\n                {\n                  \"cat_code\": \"001-003\",\n                  \"cat_name\": \"Boutjes\",\n                  \"cat_display\": \"0\",\n                  \"cat_cat_code\": \"001\"\n                }\n              ]\n            }\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + key (array,optional) ... Filter column, can be any of the allowed parameters.\n    + value (array,optional) ... Filter value.\n\n   \n## material_categories [/material_categories/{?token,software_token}]\n\nThis api is used to sync material categories with WorkorderApp.\n\nEach material_categories record can contain the following data:\n\n| Parameter                 | Description                                   | Required | Type (size)   |\n|---------------------------|-----------------------------------------------|----------|---------------|\n| mct_mat_code              | Material code                                 | Y        | Varchar (255) |\n| mct_cat_code              | Category code                                 | Y        | Varchar (255) |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add material categories [POST]\n\n\n+ Request Correct categories data posted. `response` will contain the amount of material categories synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"mct_mat_code\": \"001\",\n                  \"mct_cat_code\": \"7\"\n                },\n                {\n                  \"mct_mat_code\": \"001\",\n                  \"mct_cat_code\": \"8\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            [\n                {\n                  \"mct_mat_code\": \"001\"\n                },\n                {\n                  \"mct_mat_code\": \"001\",\n                  \"mct_cat_code\": \"8\"\n                }\n            ]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 2501,\n              \"messages\": [\n                \"Required field missing: mct_cat_code\"\n              ],\n              \"response\": null\n            }\n            \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"mct_mat_code\"\": \"001\",\n                  \"mct_cat_code\": \"7\"\n                },\n                {\n                  \"mct_mat_code\": \"001\",\n                  \"mct_cat_code\": \"8\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get material categories [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"mct_mat_code\": \"001\",\n                  \"mct_cat_code\": \"7\"\n                }\n              ]\n            }\n\n## relations [/relations/{?token,software_token}]\n\nThis api is used to sync external contacts with WorkorderApp.\n\nEach relation record can contain the following data:\n\n| Parameter        | Required | Type (size)   |\n|------------------|----------|---------------|\n| name             | Y        | Varchar (255) |\n| debtor_number    | Y        | Varchar (255) |\n| contact          | N        | Varchar (255) |\n| phone_number     | N        | Varchar (255) |\n| email            | N        | Varchar (255) |\n| email_workorder  | N        | Varchar (255) |\n| street           | Y        | Varchar (255) |\n| house_number     | N        | Varchar (255) |\n| postal_code      | Y        | Varchar (255) |\n| city             | Y        | Varchar (255) |\n| remark           | N        | Text (64kb)   |\n| latitude         | N        | Float (10,6)  |\n| longitude        | N        | Float (10,6)  |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add relations [POST]\n\n\n+ Request Correct relation data posted. `response` will contain the amount of relations synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"name\":\"Naam B.V.\",\"debtor_number\":\"14233Aaa\",\"contact\":\"Dhr. Piet Klaassen\",\"phone_number\":\"0761625345\",\"email\":\"vb@example.nl\",\"email_workorder\":\"vb@example.nl\",\"street\":\"Beatrixlaan\",\"house_number\":\"132\",\"postal_code\":\"1234AB\",\"city\":\"Utrecht\",\"remark\":\"Let op met parkeren hier.\"},{\"name\":\"Naam2 BV\",\"debtor_number\":\"152346\",\"contact\":\"Dhr. Example\",\"phone_number\":\"0761654637\",\"email\":\"vb@example2.nl\",\"email_workorder\":\"vb@example2.nl\",\"street\":\"Clauslaan\",\"house_number\":\"54\",\"postal_code\":\"1234AX\",\"city\":\"Amsterdam\",\"remark\":\"Let op met parkeren hier.\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 2\n            }\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n\n            [{\"debtor_number\":\"14233Aaa\",\"contact\":\"Dhr. Piet Klaassen\",\"phone_number\":\"0761625345\",\"email\":\"vb@example.nl\",\"email_workorder\":\"vb@example.nl\",\"street\":\"Beatrixlaan\",\"house_number\":\"132\",\"postal_code\":\"1234AB\",\"city\":\"Utrecht\",\"remark\":\"Let op met parkeren hier.\"},{\"name\":\"Naam2 BV\",\"debtor_number\":\"152346\",\"contact\":\"Dhr. Example\",\"phone_number\":\"0761654637\",\"email\":\"vb@example2.nl\",\"email_workorder\":\"vb@example2.nl\",\"street\":\"Clauslaan\",\"house_number\":\"54\",\"postal_code\":\"1234AX\",\"city\":\"Amsterdam\",\"remark\":\"Let op met parkeren hier.\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1301,\n              \"messages\": [\n                \"Required field missing: name\"\n              ],\n              \"response\": null\n            }\n  \n              \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"name\"\":\"Naam B.V.\",\"debtor_number\":\"14233Aaa\",\"contact\":\"Dhr. Piet Klaassen\",\"phone_number\":\"0761625345\",\"email\":\"vb@example.nl\",\"email_workorder\":\"vb@example.nl\",\"street\":\"Beatrixlaan\",\"house_number\":\"132\",\"postal_code\":\"1234AB\",\"city\":\"Utrecht\",\"remark\":\"Let op met parkeren hier.\"},{\"name\":\"Naam2 BV\",\"debtor_number\":\"152346\",\"contact\":\"Dhr. Example\",\"phone_number\":\"0761654637\",\"email\":\"vb@example2.nl\",\"email_workorder\":\"vb@example2.nl\",\"street\":\"Clauslaan\",\"house_number\":\"54\",\"postal_code\":\"1234AX\",\"city\":\"Amsterdam\",\"remark\":\"Let op met parkeren hier.\"}]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get relations [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [{\"name\":\"Naam B.V.\",\"debtor_number\":\"14233Aaa\",\"contact\":\"Dhr. Piet Klaassen\",\"phone_number\":\"0761625345\",\"email\":\"vb@example.nl\",\"email_workorder\":\"vb@example.nl\",\"street\":\"Beatrixlaan\",\"house_number\":\"132\",\"postal_code\":\"1234AB\",\"city\":\"Utrecht\",\"remark\":\"Let op met parkeren hier.\",\"latitude\":null,\"longitude\":null},{\"name\":\"Naam2 BV\",\"debtor_number\":\"152346\",\"contact\":\"Dhr. Example\",\"phone_number\":\"0761654637\",\"email\":\"vb@example2.nl\",\"email_workorder\":\"vb@example2.nl\",\"street\":\"Clauslaan\",\"house_number\":\"54\",\"postal_code\":\"1234AX\",\"city\":\"Amsterdam\",\"remark\":\"Let op met parkeren hier.\",\"latitude\":null,\"longitude\":null}]\n            }\n           \n## projects [/projects/{?token,software_token}]\n\nThis api is used to sync external projects with WorkorderApp.\n\nEach project record can contain the following data:\n\n| Parameter        | Required | Type (size)     |\n|------------------|----------|-----------------|\n| code             | Y        | Varchar (255)   |\n| code_ext         | N        | Varchar (255)   |\n| debtor_number    | Y        | Varchar (255)   |\n| adr_code         | N        | Varchar (255)   |\n| cpn_code                    | N        | Varchar (255)   |\n| debtor_number_invoice       | N        | Varchar (255)   |\n| status           | Y        | Varchar (255)   |\n| name             | Y        | Varchar (255)   |\n| description      | N        | Text            |\n| progress         | N        | Integer         |\n| date_start       | Y        | Varchar (255)   |\n| date_end         | N        | Varchar (255)   |\n| active           | N        | Integer (1 or 0)|\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add projects [POST]\n\n\n+ Request Correct projects data posted. `response` will contain the amount of projects synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"code\":\"N001\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"Nieuw\",\"name\":\"Project op nacalculatiebasis\",\"description\":\"Dit project zal op nacalculatiebasis worden gefactureerd. Tarief voor dit project is 100 eur per uur. Inkopen worden met een opslag van 10% doorgefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"},{\"code\":\"P002\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"Nieuw\",\"name\":\"Opdracht met voorschot\",\"description\":\"Project is begroot op 100 uren en wordt tegen vaste prijs van 10.000 eur gefactureerd. 50% zal vooruit worden gefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 2\n            }\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n\n            [{\"code\":\"N001\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"\",\"name\":\"Project op nacalculatiebasis\",\"description\":\"Dit project zal op nacalculatiebasis worden gefactureerd. Tarief voor dit project is 100 eur per uur. Inkopen worden met een opslag van 10% doorgefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"},{\"code\":\"P002\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"Nieuw\",\"name\":\"Opdracht met voorschot\",\"description\":\"Project is begroot op 100 uren en wordt tegen vaste prijs van 10.000 eur gefactureerd. 50% zal vooruit worden gefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1701,\n              \"messages\": [\n                \"Required field missing: status\"\n              ],\n              \"response\": null\n            }\n  \n              \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"code\"\":\"N001\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"Nieuw\",\"name\":\"Project op nacalculatiebasis\",\"description\":\"Dit project zal op nacalculatiebasis worden gefactureerd. Tarief voor dit project is 100 eur per uur. Inkopen worden met een opslag van 10% doorgefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"},{\"code\":\"P002\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"Nieuw\",\"name\":\"Opdracht met voorschot\",\"description\":\"Project is begroot op 100 uren en wordt tegen vaste prijs van 10.000 eur gefactureerd. 50% zal vooruit worden gefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get projects [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [{\"code\":\"N001\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"Nieuw\",\"name\":\"Project op nacalculatiebasis\",\"description\":\"Dit project zal op nacalculatiebasis worden gefactureerd. Tarief voor dit project is 100 eur per uur. Inkopen worden met een opslag van 10% doorgefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"},{\"code\":\"P002\",\"code_ext\":\"\",\"debtor_number\":\"3\",\"adr_code\": \"5\",\"cpn_code\": \"\",\"debtor_number_invoice\": null,\"status\":\"Nieuw\",\"name\":\"Opdracht met voorschot\",\"description\":\"Project is begroot op 100 uren en wordt tegen vaste prijs van 10.000 eur gefactureerd. 50% zal vooruit worden gefactureerd.\",\"progress\":\"0\",\"date_start\":\"2013-10-01\",\"date_end\":null,\"active\":\"1\"}]\n            }\n\n## hourtypes [/hourtypes/{?token,software_token}]\n\nThis api is used to sync external hourtypes with WorkorderApp.\n\nEach hourtype record can contain the following data:\n\n| Parameter        | Required | Type (size)         |\n|------------------|----------|---------------------|\n| code             | Y        | Varchar (255)       |\n| name             | Y        | Varchar (255)       |\n| cost_booking     | Y        | Integer (1 or 0)    |\n| sale_booking     | Y        | Integer (1 or 0)    |\n| sale_price       | Y        | Decimal (> 0)       |\n| cost_price       | N        | Decimal (> 0)       | \n| active           | N        | Integer (1 or 0)    |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add hourtypes [POST]\n\n\n+ Request Correct hourtypes data posted. `response` will contain the amount of hourtypes synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"code\":\"001\",\"name\":\"Normale uren\",\"cost_booking\":\"0\",\"sale_booking\":\"0\",\"sale_price\":\"50.00\",\"cost_price\":\"25.00\",\"active\":\"1\"},{\"code\":\"ZK\",\"name\":\"Ziekte\",\"cost_booking\":\"1\",\"sale_booking\":\"1\",\"sale_price\":\"0.00\",\"cost_price\":\"0.00\",\"active\":\"1\"}]            \n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 2\n            }\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n\n            [{\"name\":\"Normale uren\",\"cost_booking\":\"0\",\"sale_booking\":\"0\",\"sale_price\":\"50.00\",\"cost_price\":\"25.00\",\"active\":\"1\"},{\"code\":\"ZK\",\"name\":\"Ziekte\",\"cost_booking\":\"1\",\"sale_booking\":\"1\",\"sale_price\":\"0.00\",\"cost_price\":\"0.00\",\"active\":\"1\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1801,\n              \"messages\": [\n                \"Required field missing: code\"\n              ],\n              \"response\": null\n            }\n  \n              \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"code\"\":\"001\",\"name\":\"Normale uren\",\"cost_booking\":\"0\",\"sale_booking\":\"0\",\"sale_price\":\"50.00\",\"cost_price\":\"25.00\",\"active\":\"1\"},{\"code\":\"ZK\",\"name\":\"Ziekte\",\"cost_booking\":\"1\",\"sale_booking\":\"1\",\"sale_price\":\"0.00\",\"cost_price\":\"0.00\",\"active\":\"1\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get hourtypes [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [{\"code\":\"001\",\"name\":\"Normale uren\",\"cost_booking\":\"0\",\"sale_booking\":\"0\",\"sale_price\":\"50.00\",\"cost_price\":\"25.00\",\"active\":\"1\"},{\"code\":\"ZK\",\"name\":\"Ziekte\",\"cost_booking\":\"1\",\"sale_booking\":\"1\",\"sale_price\":\"0.00\",\"cost_price\":\"0.00\",\"active\":\"1\"}]\n            }\n         \n## forms [/forms/{?token,software_token}]\n\nThis api is used to sync external forms with WorkorderApp.\n\nEach form record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| name                      | Name of the form                                                           | Y        | Varchar (255) |\n| data                      | JSON data of the form                                                                 | N        | Text (64kb) |\n| template                  | HTML template to display data in PDF                                                                   | N        | Text (64kb) |\n\nThe `data` parameters contains a JSON encoded representation of the form. The main element is called `fields` and contains an array of JSON objects representing a `field`.\nEach field contains the following data:\n\n| Parameter     | Description                                               |\n|---------------|-----------------------------------------------------------| \n| label         | The label of the field.                                   |  \n| field_type    | The Type of the field. Can be `text`, `checkboxes`, `radio` , `dropdown` or `signature`.\n| required      | This field indicates if the field is required to complete. Text: Field is valid a value is filled. Checkboxes: Field is valid when all the boxes are checked. Radio: Field is valid when a option is checked. Dropdown: Field is valid when a option is selected. Signature: Field is valid when a signature is set |\n| cid           | Unique indentification of the field.                      |\n| field_options | Array containing field options. See description below.    | \n\n\nEach field_options contains the following data:\n\n| Parameter     | Description                                                                                   |\n|---------------|-----------------------------------------------------------------------------------------------| \n| options       | The options of the field. Used in `checkboxes`, `radio` , `dropdown`. See decription below    | \n| value         | Value added in `text` field or base64 encoded image in `signature` field.                     |      \n\n \nEach options contains the following data:\n\n| Parameter     | Description                                                                       |\n|---------------|-----------------------------------------------------------------------------------| \n| checked       | Indicated if options is selected. Used in `checkboxes`, `radio` , `dropdown`.     | \n| label         | Label for the option                                                              |      \n\n+ Sample JSON\n    + Text:` {\n      \"label\": \"Serienummer\",\n      \"field_type\": \"text\",\n      \"required\": true,\n      \"field_options\": {\n        \"size\": \"small\",\n        \"value\": \"\"\n      },\n      \"cid\": \"c6\"\n    }` \n    + Radio: ` {\n      \"label\": \"Type pomp\",\n      \"field_type\": \"radio\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"type A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type B\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type C\",\n            \"checked\": false\n          }\n        ]\n      },\n      \"cid\": \"c2\"\n    }`\n    + Checkboxes: ` {\n      \"label\": \"Type pomp\",\n      \"field_type\": \"checkboxes\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"type A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type B\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type C\",\n            \"checked\": false\n          }\n        ]\n      },\n      \"cid\": \"c2\"\n    }`\n    + Dropdown: ` {\n      \"label\": \"Dropdown\",\n      \"field_type\": \"dropdown\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"B\",\n            \"checked\": false\n          }\n        ],\n        \"include_blank_option\": false\n      },\n      \"cid\": \"c10\"\n    }`\n    + Signature: `{\n      \"cid\": \"c5\",\n      \"field_options\": {\n        \"value\": \"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\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW9D/A4B7ViPrMDeYAAAAAElF\\nTkSuQmCC\\n\"\n      },\n      \"field_type\": \"signature\",\n      \"label\": \"Naamloos\",\n      \"required\": true\n    }`\n  \n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add forms [POST]\n\n\n+ Request Correct object data posted. `response` will contain the amount of forms synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"name\":\"Checklist\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type zonnepaneel\\\",\\\"field_type\\\":\\\"radio\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"a\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"b\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"c\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"}]}\",\"template\":\"\"},{\"name\":\"Controle lijst\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Jaartal\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Staat van het huis goed\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"Ja\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Nee\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Weet ik niet\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c6\\\"}]}\",\"template\":\"\"},{\"name\":\"Eigen form\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type pomp\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"type A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type B\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type C\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Serienummer\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c6\\\"},{\\\"label\\\":\\\"Dropdown\\\",\\\"field_type\\\":\\\"dropdown\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"B\\\",\\\"checked\\\":false}],\\\"include_blank_option\\\":false},\\\"cid\\\":\\\"c10\\\"}]}\",\"template\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 3\n            }\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n\n            [{\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type zonnepaneel\\\",\\\"field_type\\\":\\\"radio\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"a\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"b\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"c\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"}]}\",\"template\":\"\"},{\"name\":\"Controle lijst\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Jaartal\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Staat van het huis goed\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"Ja\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Nee\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Weet ik niet\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c6\\\"}]}\",\"template\":\"\"},{\"name\":\"Eigen form\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type pomp\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"type A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type B\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type C\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Serienummer\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c6\\\"},{\\\"label\\\":\\\"Dropdown\\\",\\\"field_type\\\":\\\"dropdown\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"B\\\",\\\"checked\\\":false}],\\\"include_blank_option\\\":false},\\\"cid\\\":\\\"c10\\\"}]}\",\"template\":\"\"}]\n\n+ Response 200 (application/json)\n \"\n    + Body\n\n            {\"code\":2301,\"messages\":[\"Required field missing: name\"],\"response\":null}\n              \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type zonnepaneel\\\",\\\"field_type\\\":\\\"radio\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"a\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"b\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"c\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"}]}\",\"template\":\"\"},{\"name\":\"Controle lijst\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Jaartal\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Staat van het huis goed\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"Ja\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Nee\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Weet ik niet\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c6\\\"}]}\",\"template\":\"\"},{\"name\":\"Eigen form\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type pomp\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"type A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type B\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type C\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Serienummer\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c6\\\"},{\\\"label\\\":\\\"Dropdown\\\",\\\"field_type\\\":\\\"dropdown\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"B\\\",\\\"checked\\\":false}],\\\"include_blank_option\\\":false},\\\"cid\\\":\\\"c10\\\"}]}\",\"template\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get forms [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"name\":\"Checklist\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type zonnepaneel\\\",\\\"field_type\\\":\\\"radio\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"a\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"b\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"c\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"}]}\",\"template\":\"\"},{\"name\":\"Controle lijst\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Jaartal\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Staat van het huis goed\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"Ja\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Nee\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"Weet ik niet\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c6\\\"}]}\",\"template\":\"\"},{\"name\":\"Eigen form\",\"data\":\"{\\\"fields\\\":[{\\\"label\\\":\\\"Type pomp\\\",\\\"field_type\\\":\\\"checkboxes\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"type A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type B\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"type C\\\",\\\"checked\\\":false}]},\\\"cid\\\":\\\"c2\\\"},{\\\"label\\\":\\\"Serienummer\\\",\\\"field_type\\\":\\\"text\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"size\\\":\\\"small\\\",\\\"value\\\":\\\"\\\"},\\\"cid\\\":\\\"c6\\\"},{\\\"label\\\":\\\"Dropdown\\\",\\\"field_type\\\":\\\"dropdown\\\",\\\"required\\\":true,\\\"field_options\\\":{\\\"options\\\":[{\\\"label\\\":\\\"A\\\",\\\"checked\\\":false},{\\\"label\\\":\\\"B\\\",\\\"checked\\\":false}],\\\"include_blank_option\\\":false},\\\"cid\\\":\\\"c10\\\"}]}\",\"template\":\"\"}]}\n\n## suppliers [/suppliers/{?token,software_token}]\n\nThis api is used to sync suppliers with WorkorderApp.\n\nEach supplier record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| sup_code                  | Unique code of the supplier. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| sup_name                  | Supplier name                                                                                                             | Y        | Varchar (255) |\n| sup_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255)      |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add suppliers [POST]\n\n\n+ Request Correct supplier data posted. `response` will contain the amount of suppliers synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"sup_code\":\"001\",\"sup_name\":\"Pirelli\",\"sup_image\":\"\"},{\"sup_code\":\"002\",\"sup_name\":\"Volkswagen\",\"sup_image\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 2\n            }\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n\n            [{\"sup_name\":\"Pirelli\",\"sup_image\":\"\"},{\"sup_code\":\"002\",\"sup_name\":\"Volkswagen\",\"sup_image\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 2001,\n              \"messages\": [\n                \"Required field missing: sup_code\"\n              ],\n              \"response\": null\n            }\n  \n              \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"sup_code\"\": \"001\",\"sup_name\": \"Pirelli\",\"sup_image\":\"\"},{\"sup_code\": \"002\",\"sup_name\": \"Volkswagen\",\"sup_image\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get suppliers [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"sup_code\": \"001\",\n                  \"sup_name\": \"Pirelli\",\n                  \"sup_image\":\"\"\n                },\n                {\n                  \"sup_code\": \"002\",\n                  \"sup_name\": \"Volkswagen\",\n                  \"sup_image\":\"\"\n                }\n              ]\n            }\n                  \n            \n## objects [/objects/{?token,software_token}]\n\nThis api is used to sync objects with WorkorderApp.\n\nEach object record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| obj_code                  | Unique code of the object. Used as reference for other entities                                                           | Y        | Varchar (255) |\n| obj_sup_code              | Supplier code. Used as reference to supplier entity                                                                       | N        | Varchar (255) |\n| obj_debiteur_nummer       | Debtor number. Used as reference to customer clients.                                                                     | Y        | Varchar (255) |\n| obj_adr_code              | Address code. Used as a reference to the addres of a customer client.                                                     | N        | Varchar (255) |\n| obj_obj_code              | Parent object code.                                                                                                       | N        | Varchar (255) |\n| obj_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255) |\n| obj_description           | Description of the object                                                                                                 | Y        | Varchar (255) |\n| obj_price                 | Price of the object                                                                                                       | N        | Decimal (7,2) |\n| obj_floor_level           | Floor level of the object                                                                                                 | N        | Int (10)      |\n| obj_location              | Textual description of the location of the object                                                                         | N        | Varchar (255) |\n| obj_latitude              | Latitude of the location of the object                                                                                    | N        | Float (10,6)  |\n| obj_longitude             | Longitude of the location of the object                                                                                   | N        | Float (10,6)  |\n| obj_type                  | Type                                                                                                                      | N        | Varchar (255) |\n| obj_model                 | Model                                                                                                                     | N        | Varchar (255) |\n| obj_brand                 | Brand                                                                                                                     | N        | Varchar (255) |\n| obj_date_warranty_expires | Expiration date of the warranty                                                                                           | N        | Varchar (255) |\n| obj_serialnumber          | Serialnumber of the object                                                                                                | N        | Varchar (255) |\n| obj_date_last_inspection  | Date of last inspection                                                                                                   | N        | Varchar (255) |\n| obj_date_installation     | Date of installation                                                                                                      | N        | Varchar (255) |\n| obj_freefield_1           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_2           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_3           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_4           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_5           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_6           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_7           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_8           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_9           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_10          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_11          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_12          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_13          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_14          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_15          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_16          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_17          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_18          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_19          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_20          |                                                                                                                           | N        | Varchar (255) |\n| obj_order                 | Sort order of an object                                                                                                   | N        | Int (10)      |\n| obj_created               | Timestamp of creating                                                                                                     | N        | DateTime      |\n| obj_modified              | Timestamp of modifying                                                                                                    | N        | DateTime      |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add object [POST]\n\n\n+ Request Correct object data posted. `response` will contain the amount of objects synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"obj_code\":\"Object 22323\",\"obj_sup_code\":\"gfgd\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"ghd\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 2\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"sdfds\",\"obj_date_warranty_expires\":\"2017-03-01\",\"obj_serialnumber\":\"dsfs\",\"obj_date_last_inspection\":\"2017-03-01\",\"obj_date_installation\":\"2017-03-01\",\"obj_freefield_1\":\"Merk x\",\"obj_freefield_2\":\"Model y \",\"obj_freefield_3\":\"11-12-2016\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"12\",\"obj_freefield_20\":\"\",\"obj_order\":\"\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 1\n            }\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n\n            [{\"obj_sup_code\":\"gfgd\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"ghd\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 2\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"sdfds\",\"obj_date_warranty_expires\":\"2017-03-01\",\"obj_serialnumber\":\"dsfs\",\"obj_date_last_inspection\":\"2017-03-01\",\"obj_date_installation\":\"2017-03-01\",\"obj_freefield_1\":\"Merk x\",\"obj_freefield_2\":\"Model y \",\"obj_freefield_3\":\"11-12-2016\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"12\",\"obj_freefield_20\":\"\",\"obj_order\":\"\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1901,\n              \"messages\": [\n                \"Required field missing: obj_code\"\n              ],\n              \"response\": null\n            }\n  \n              \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"obj_code\"\":\"Object 22323\",\"obj_sup_code\":\"gfgd\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"ghd\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 2\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"sdfds\",\"obj_date_warranty_expires\":\"2017-03-01\",\"obj_serialnumber\":\"dsfs\",\"obj_date_last_inspection\":\"2017-03-01\",\"obj_date_installation\":\"2017-03-01\",\"obj_freefield_1\":\"Merk x\",\"obj_freefield_2\":\"Model y \",\"obj_freefield_3\":\"11-12-2016\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"12\",\"obj_freefield_20\":\"\",\"obj_order\":\"\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get objects [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [{\"obj_code\":\"Object 2\",\"obj_sup_code\":\"gfgd\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"ghd\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 2\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"sdfds\",\"obj_date_warranty_expires\":\"2017-03-01\",\"obj_serialnumber\":\"dsfs\",\"obj_date_last_inspection\":\"2017-03-01\",\"obj_date_installation\":\"2017-03-01\",\"obj_freefield_1\":\"Merk x\",\"obj_freefield_2\":\"Model y \",\"obj_freefield_3\":\"11-12-2016\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"12\",\"obj_freefield_20\":\"\",\"obj_created\":\"0000-00-00 00:00:00\",\"obj_modified\":\"2017-03-02 11:10:44\"},{\"obj_code\":\"Object 1\",\"obj_sup_code\":\"\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 1\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"\",\"obj_date_warranty_expires\":\"\",\"obj_serialnumber\":\"\",\"obj_date_last_inspection\":\"\",\"obj_date_installation\":\"\",\"obj_freefield_1\":\"\",\"obj_freefield_2\":\"\",\"obj_freefield_3\":\"\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"\",\"obj_freefield_20\":\"\",\"obj_order\":\"\",\"obj_created\":\"0000-00-00 00:00:00\",\"obj_modified\":\"0000-00-00 00:00:00\"}]\n            }\n## objects/changed [/objects/changed/{?token,software_token,obj_code}]\n\nThis api is used to fetch changed objects. A change can be made from the app. Once the information is processed the api can be called with the obj_code parameter. The changed indicator will be set to 0 so the record won't be shown again.\n\n### Get changed objects [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [{\"obj_code\":\"Object 2\",\"obj_sup_code\":\"gfgd\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"ghd\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 2\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"sdfds\",\"obj_date_warranty_expires\":\"2017-03-01\",\"obj_serialnumber\":\"dsfs\",\"obj_date_last_inspection\":\"2017-03-01\",\"obj_date_installation\":\"2017-03-01\",\"obj_freefield_1\":\"Merk x\",\"obj_freefield_2\":\"Model y \",\"obj_freefield_3\":\"11-12-2016\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"12\",\"obj_freefield_20\":\"\",\"obj_created\":\"0000-00-00 00:00:00\",\"obj_modified\":\"2017-03-02 11:10:44\"},{\"obj_code\":\"Object 1\",\"obj_sup_code\":\"\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 1\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"\",\"obj_date_warranty_expires\":\"\",\"obj_serialnumber\":\"\",\"obj_date_last_inspection\":\"\",\"obj_date_installation\":\"\",\"obj_freefield_1\":\"\",\"obj_freefield_2\":\"\",\"obj_freefield_3\":\"\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"\",\"obj_freefield_20\":\"\",\"obj_order\":\"\",\"obj_created\":\"0000-00-00 00:00:00\",\"obj_modified\":\"0000-00-00 00:00:00\"}]\n            }\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + obj_code (string,optional) ... Code of the object that is succesfully updated in the external software.\n\n## object [/object/?token={token}&software_token={software_token}&key={key}&value={value}]\n\nThis api is used to fetch objects based on a filter. Filters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2\n\n### Get objects by filter [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [{\"obj_code\":\"Object 2\",\"obj_sup_code\":\"gfgd\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"ghd\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 2\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"sdfds\",\"obj_date_warranty_expires\":\"2017-03-01\",\"obj_serialnumber\":\"dsfs\",\"obj_date_last_inspection\":\"2017-03-01\",\"obj_date_installation\":\"2017-03-01\",\"obj_freefield_1\":\"Merk x\",\"obj_freefield_2\":\"Model y \",\"obj_freefield_3\":\"11-12-2016\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"12\",\"obj_freefield_20\":\"\",\"obj_created\":\"0000-00-00 00:00:00\",\"obj_modified\":\"2017-03-02 11:10:44\"},{\"obj_code\":\"Object 1\",\"obj_sup_code\":\"\",\"obj_debiteur_nummer\":\"4_548a427a-45e8-4f05-9eff-36c8dd742942\",\"obj_adr_code\":\"\",\"obj_obj_code\":\"\",\"obj_image\":\"no-image.png\",\"obj_description\":\"Object 1\",\"obj_price\":\"0.00\",\"obj_floor_level\":\"0\",\"obj_location\":\"\",\"obj_latitude\":null,\"obj_longitude\":null,\"obj_type\":\"\",\"obj_model\":\"\",\"obj_brand\":\"\",\"obj_date_warranty_expires\":\"\",\"obj_serialnumber\":\"\",\"obj_date_last_inspection\":\"\",\"obj_date_installation\":\"\",\"obj_freefield_1\":\"\",\"obj_freefield_2\":\"\",\"obj_freefield_3\":\"\",\"obj_freefield_4\":\"\",\"obj_freefield_5\":\"\",\"obj_freefield_6\":\"\",\"obj_freefield_7\":\"\",\"obj_freefield_8\":\"\",\"obj_freefield_9\":\"\",\"obj_freefield_10\":\"\",\"obj_freefield_11\":\"\",\"obj_freefield_12\":\"\",\"obj_freefield_13\":\"\",\"obj_freefield_14\":\"\",\"obj_freefield_15\":\"\",\"obj_freefield_16\":\"\",\"obj_freefield_17\":\"\",\"obj_freefield_18\":\"\",\"obj_freefield_19\":\"\",\"obj_freefield_20\":\"\",\"obj_order\":\"\",\"obj_created\":\"0000-00-00 00:00:00\",\"obj_modified\":\"0000-00-00 00:00:00\"}]\n            }\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + key (array,optional) ... Filter column, can be any of the allowed parameters.\n    + value (array,optional) ... Filter value.\n\n## parts - DEPRECATED [/parts/{?token,software_token}]\n\nThis api is now deprecated. Use materials to register the parts of certain objects.\n\n\nThis api is used to sync parts with WorkorderApp.\n\nEach part record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| prt_code                  | Unique code of the parts. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| prt_name                  | Part name/description name                                                                                                             | Y        | Varchar (255) |\n| prt_sup_code              | Supplier code                                                                                                             | Y        | Varchar (255) |\n| prt_value                 | Value of a parts                                                                                                             | Y        | Varchar (255) |\n| prt_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.     | N        | Varchar (255)      |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add parts [POST]\n\n\n+ Request Correct parts data posted. `response` will contain the amount of parts synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"prt_code\":\"PRT001\",\"prt_name\":\"Remschijf\",\"prt_sup_code\":\"001\",\"prt_value\":\"80.00\",\"prt_image\":\"\"}]\n\n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":1}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            [{\"prt_name\":\"Remschijf\",\"prt_sup_code\":\"001\",\"prt_value\":\"80.00\",\"prt_image\":\"\"}]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":2101,\"messages\":[\"Required field missing: prt_code\"],\"response\":null}\n              \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"prt_code\"\":\"PRT001\",\"prt_name\":\"Remschijf\",\"prt_sup_code\":\"001\",\"prt_value\":\"80.00\",\"prt_image\":\"\"}]            \n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get parts [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"prt_code\": \"PRT001\",\n                  \"prt_name\": \"Remschijf\",\n                  \"prt_sup_code\": \"001\",\n                  \"prt_value\": \"80.00\",\n                  \"prt_image\": \"\"\n                }\n              ]\n            }\n            \n## object_parts [/object_parts/{?token,software_token}]\n\nThis api is used to sync object parts with WorkorderApp.\n\nThe result can be filtered by using the advanced filter. As described in the introduction section. Allowed columns: `opr_obj_code` `opr_prt_code` `opr_serial_number`\n\n\nEach object_part record can contain the following data:\n\n| Parameter                         | Description                                           | Required | Type (size)   |\n|-----------------------------------|-------------------------------------------------------|----------|---------------|\n| opr_obj_code                      | Object code                                           | Y        | Varchar (255) |\n| opr_prt_code                      | Object part (Artikelcode from items in materials)     | Y        | Varchar (255) |\n| opr_serial_number                 | Serial number of parts used in object                 | N        | Varchar (255) |\n| opr_description                   | Description of a part                                 | N        | Varchar (255) |\n| opr_amount                        | Amount of parts used in object                        | Y        | Int (10)      |\n| opr_timestamp_installation        | Date of installing (Y-m-d)                            | N        | Date       |\n| opr_warranty_months               | Amount of months, used to calculate expiration date.  | N        | Int (10)      |\n| opr_timestamp_warranty_expires    | Warranty expiration date, automatically calculated based on installation date and the warranty months    | N        | Varchar (255)      |\n| val_value_1                       | Freefield value 1                                     | N        | Varchar (255)      |\n| val_value_2  - val_value_20       | Freefield value 2  till 20                            | N        | Varchar (255)      |\n \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add object parts [POST]\n\n\n+ Request Correct object parts data posted. `response` will contain the amount of objects synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [\n                {\n                    \"opr_obj_code\": \"Object 1\",\n                    \"opr_prt_code\": \"001\",\n                    \"opr_serial_number\": \"65644456\",\n                    \"opr_description\" :\"\",\n                    \"opr_timestamp_installation\": \"2018-10-11\",\n                    \"opr_warranty_months\": \"24\",\n                    \"opr_amount\": \"4\",\n                    \"val_value_1\": \"Free field 1 value\",\n                    \"val_value_2\": \"Free field 1 value\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":1}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            [\n                {\n                    \"opr_prt_code\": \"001\",\n                    \"opr_amount\": \"4\"\n                }\n            ]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 2201,\n              \"messages\": [\n                \"Required field missing: opr_obj_code\"\n              ],\n              \"response\": null\n            }  \n            \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"opr_obj_code\"\": \"Object 1\",\n                  \"opr_prt_code\": \"001\",\n                  \"opr_amount\": \"4\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get object parts [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                 {\n                    \"opr_obj_code\": \"Object 1\",\n                    \"opr_prt_code\": \"001\",\n                    \"opr_serial_number\": \"65644456\",\n                    \"opr_description\": \"\",\n                    \"opr_timestamp_installation\": \"2018-10-11\",\n                    \"opr_warranty_months\": \"24\",\n                    \"opr_timestamp_warranty_expires\": \"2020-10-11\",\n                    \"opr_amount\": \"4\",\n                    \"val_value_1\": \"Free field 1 value\",\n                    \"val_value_2\": \"Free field 1 value\"\n                    \"val_value_3\": null,\n                    \"val_value_4\": null,\n                    \"val_value_5\": null,\n                    \"val_value_6\": null,\n                    \"val_value_7\": null,\n                    \"val_value_8\": null,\n                    \"val_value_9\": null,\n                    \"val_value_10\": null,\n                    \"val_value_11\": null,\n                    \"val_value_12\": null,\n                    \"val_value_13\": null,\n                    \"val_value_14\": null,\n                    \"val_value_15\": null,\n                    \"val_value_16\": null,\n                    \"val_value_17\": null,\n                    \"val_value_18\": null,\n                    \"val_value_19\": null,\n                    \"val_value_20\": null\n                }\n              ]\n            }\n\n## object_parts/changed [/object_parts/changed/{?token,software_token,opr_timestamp_mutate}]\n\nThis api is used to fetch changed object_parts. A change can be made from the app. Use the object_parts to pass a timestamp Y-m-d H:i:s to only show records mutated after that timestamp.\n\n\n### Get changed objects [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                 {\n                    \"opr_obj_code\": \"Object 1\",\n                    \"opr_prt_code\": \"001\",\n                    \"opr_serial_number\": \"65644456\",\n                    \"opr_description\": \"\",\n                    \"opr_timestamp_installation\": \"2018-10-11\",\n                    \"opr_warranty_months\": \"24\",\n                    \"opr_timestamp_warranty_expires\": \"2020-10-11\",\n                    \"opr_amount\": \"4\",\n                    \"val_value_1\": \"Free field 1 value\",\n                    \"val_value_2\": \"Free field 1 value\"\n                    \"val_value_3\": null,\n                    \"val_value_4\": null,\n                    \"val_value_5\": null,\n                    \"val_value_6\": null,\n                    \"val_value_7\": null,\n                    \"val_value_8\": null,\n                    \"val_value_9\": null,\n                    \"val_value_10\": null,\n                    \"val_value_11\": null,\n                    \"val_value_12\": null,\n                    \"val_value_13\": null,\n                    \"val_value_14\": null,\n                    \"val_value_15\": null,\n                    \"val_value_16\": null,\n                    \"val_value_17\": null,\n                    \"val_value_18\": null,\n                    \"val_value_19\": null,\n                    \"val_value_20\": null\n                }\n              ]\n            }\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + opr_timestamp_mutate (timestamp,optional) ... Timestamp in Y-m-d H:i:s format.  tware.\n\n     \n## PostWorkorders [/PostWorkorders/{?token,software_token}]\n\nThis api is used to post one or more workorders to WorkorderApp.  \n\nA workorder can contain the following data:\n\n| Parameter                    | Detail                                                                                                     | Required | Type (size)   |\n|------------------------------|------------------------------------------------------------------------------------------------------------|----------|---------------|\n| WorkorderNo                  | Unique number from ERP/CRM                                                                                 | Yes      | Varchar (255) |\n| ProjectNr                    | Internal Project number                                                                                    | No       | Varchar (255) |\n| ExternProjectNr              | External Project number                                                                                    | No       | Varchar (255) |\n| CustomerName                 | Customer name                                                                                              | Yes      | Varchar (255) |\n| CustomerDebtorNr             | Customer Debtor number                                                                                     | Yes      | Varchar (255) |\n| CustomerStreet               | Customer street                                                                                            | Yes      | Varchar (255) |\n| CustomerStreetNo             | Customer street number                                                                                     | No       | Varchar (255) |\n| CustomerEmail                | Customer Email                                                                                             | No       | Varchar (255) |\n| CustomerZIP                  | Customer zip code                                                                                          | Yes      | Varchar (255) |\n| CustomerCity                 | Customer city                                                                                              | Yes      | Varchar (255) |\n| CustomerContactPerson        | Customer contact person                                                                                    | Yes      | Varchar (255) |\n| CustomerPhone                | Customer phone number                                                                                      | No       | Varchar (255) |\n| CustomerRemark               | Customer remark                                                                                            | No       | Text (64kb)   |\n| CustomerLatitude             | Latitude of work location, used for navigation and to display on maps.                                     | No       | Float(10,6)   |\n| CustomerLongitude            | Longitude of work location, used for navigation and to display on maps.                                    | No       | Float(10,6)   |\n| CustomerNameInvoice          | Invoice customer name                                                                                      | Yes      | Varchar (255) |\n| CustomerDebtorNrInvoice      | Invoice customer debtor number                                                                             | Yes      | Varchar (255) |\n| CustomerStreetInvoice        | Invoice customer street name                                                                               | Yes      | Varchar (255) |\n| CustomerStreetNoInvoice      | Invoice customer street number                                                                             | No       | Varchar (255) |\n| CustomerEmailInvoice         | Invoice customer email                                                                                     | No       | Varchar (255) |\n| CustomerZIPInvoice           | Invoice customer zip code                                                                                  | Yes      | Varchar (255) |\n| CustomerCityInvoice          | Invoice customer city                                                                                      | Yes      | Varchar (255) |\n| CustomerContactPersonInvoice | Invoice customer contact person                                                                            | Yes      | Varchar (255) |\n| CustomerPhoneInvoice         | Invoice customer phone number                                                                              | No       | Varchar (255) |\n| CustomerRemarkInvoice        | Invoice customer remark                                                                                    | No       | Text (64kb)   |\n| TypeOfWork                   | Installatie, Garantie, Levering, Onderhoud, Project, Regie, Reparatie,  Service, Storing, Verkoop, Verhuur | Yes      | Varchar (255) |\n| WorkDescription              | Work description of the workorder. Visible for customer when signing and when receiving the PDF.           | No       | Text (64kb)   |\n| InternalWorkDescription      | Internal work description of the workorder. Only visible for the employee                                  | No       | Text (64kb)   |\n| PaymentMethod                | niet van toepassing, op rekening, contact voldaan, pin betaling, conform offerte                           | Yes      | Varchar (255) |\n| EmployeeNr                   | Employee Number                                                                                            | No       | Varchar (255) |\n| WorkDate                     | Scheduled date for work (d-m-Y)                                                                            | No       | Varchar (255) |\n| WorkTime                     | Scheduled time for work (H:i)                                                                              | No       | Varchar (255) |\n| WorkEndDate                  | Scheduled end date for work (d-m-Y)                                                                        | No       | Varchar (255) |\n| WorkEndTime                  | Scheduled end time for work (H:i)                                                                          | No       | Varchar (255) |\n| WorkDeadline                 | Scheduled deadline for the workorder.                                                                      | No       | Varchar (255) |\n| WorkDuration                 | Duration of the workorder (in minutes). Used to fill WorkEndDate and WorkEndTime based on WorkDate and WorkTime.        | No       | Integer   |\n| WorkStatus                   | Internal work status code. Can be added through status API.                                                | No       | Varchar (255) |\n| PickupPlanning               | Indication if the work order should be added to batch to be picked up. Value should be 0 or 1.             | No       | Integer       |\n| WebPlanning                  | Indication if webplanning is enabled for this order.                                                       | No       | Integer       |\n| CpnCode                      | Contact person code                                                                                        | No       | Varchar (255) |\n| AdrCode                      | Address code                                                                                               | No       | Varchar (255) |\n| ShortWorkDescription         | Short work description. For example 1 line to show in an overview                                          | No       | Varchar (255) |\n| Comment                      | Additional field for the employee to leave their comment                                                   | No       | Varchar (255) |\n| ErrorCode                    | Selected code as added in the errors API                                                                   | No       | Varchar (255) |\n| ErrorMessage                 | Message corresponding to the selected Error, can be changed by the employee                                | No       | Varchar (255) |\n| SolutionCode                 | Selected code as added in the solutions API                                                                | No       | Varchar (255) |\n| SolutionMessage              | Message corresponding to the selected Solution, can be changed by the employee                             | No       | Varchar (255) |\n| PriorityCode                 | Selected code as added in the priorities API                                                               | No       | Varchar (255) |\n| PriorityMessage              | Message corresponding to the selected Priority, can be changed by the employee                             | No       | Varchar (255) |\n| MinimumHours                 | Minimum amount of hours that the customer should sign for. For example: The customer should always sign for 2 hours. If the employee only registers 25 minutes the customer still gets to see 2 hours.                | No       | Decimal (7,2) |\n| RoundingAmount               | Amount of minutes that the total time should be rounded to. For exammple: Your company only works with amounts of 30 minutes. If the user only registers 40 minutes the customer will have to sign for 60 minutes.                | No       | Varchar (255) |\n| Attachments                  | An array containing multiple files. See specification below.                                               | No       | Array         |\n| Materials                    | An array containing material rows. See specification below.                                                | No       | Array         |\n| Workperiods                  | An array containing workperiod rows. See specification below.                                              | No       | Array         |\n| Forms                        | Array of forms. Each row contains Name, Data and ObjectCode                                                | No       | Array         |\n| Employees                    | Array of employee numbers.                                                                                 | No       | Array         |\n| WorkObjects                  | Array of objects codes.                                                                                    | No       | Array         |\n \nAttachments specification\n\n| Parameter | Detail                                                                                        | Required | Type (size)   |\n|-----------|-----------------------------------------------------------------------------------------------|----------|---------------|\n| File      | URL of the attachment file. This has to be an existing file. The file is saved on our server. | No       | Varchar (255) |\n| Data      | Base64 encoded file data.                                                                     | No       | Base64        |\n| FileName  | Filename of the Base64 encoded data.                                                          | No       | Varchar (255) |\n\nAn attachment can be added by providing a valid URL or by providing Base64 encoded data and filename.\n\n\nMaterial specification\n\n| Parameter     | Detail                                                             | Required | Type          |\n|---------------|--------------------------------------------------------------------|----------|---------------|\n| MaterialCode  | Article number, code or barcode of this material. Example: A786878 | Yes      | Varchar (255) |\n| MaterialNr    | Amount of this material used. Example: 1                           | Yes      | Decimal       |\n| MaterialPrice | Price of this material. Example: 0,00                              | Yes      | Decimal       |\n| MaterialName  | Material name and/or description. Example: Kleinmateriaal          | Yes      | Varchar (255) |\n| MaterialUnit  | Unit of this material. Example: M2                                 | No       | Varchar (255) |\n| MaterialType  | User defined material type                                         | No       | Varchar (255) |\n| MaterialFreeField1  | User defined field 1                                         | No       | Varchar (255) |\n| MaterialFreeField2  | User defined field 2                                         | No       | Varchar (255) |\n| MaterialFreeField3  | User defined field 3                                         | No       | Varchar (255) |\n| MaterialFreeField4  | User defined field 4                                         | No       | Varchar (255) |\n| MaterialFreeField5  | User defined field 5                                         | No       | Varchar (255) |\n \n \n\nWorkperiod specification\n\n| Parameter     | Detail                                                    | Required  | Type          |\n|---------------|-----------------------------------------------------------|-----------|---------------|\n| WorkDate      | Date specified in d-m-Y                                   | Yes       | Varchar (255) |\n| BeginTime     | Time specified in H:i                                     | Yes       | Varchar (255) |\n| EndTime       | Time specified in H:i                                     | Yes       | Varchar (255) |\n| Break         | Break time in minutes                                     | No        | Int (11)      |\n| TotalTime     | Sum of EndTime - BeginTime - Break formatted in H:i       | Yes       | Varchar (255) |\n| Travel        | Travel distance                                           | No        | Int (11)      |\n| WorkRemark    | Work remark                                               | No        | Text          |\n| HourType      | Hour type code                                            | No        | Varchar (55)  |\n| EmployeeNr    | Employee nunber                                           | No        | Varchar (55)  |\n\nExample array:\n``` json\n\"Workperiods\": [\n    {\n        \"BeginTime\": \"08:30\",\n        \"TotalTime\": \"03:45\",\n        \"WorkRemark\": \"\",\n        \"WorkDate\": \"26-09-2013\",\n        \"EndTime\": \"12:15\",\n        \"Travel\": \"1\",\n        \"EmployeeNr\":\"11\",\n        \"HourType\":\"001\"\n    }\n] \n```\n\n\nForms specification\n\n| Parameter     | Detail                                                                                                                                | Required | Type          |\n|---------------|---------------------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| Name          | Name of the form. Will be visible to employee and used to search for data.                                                            | Yes      | Varchar (255) |\n| Data          | JSON data of the Form elements. See forms API for description. When this is empty we will use the name to lookup a predefined form.   | No      | Text (64kb)    |\n| ObjectCode    | Object connected to the form. We will search our list of object for the corresponding object.                                         | No      | Varchar (255)  | \n\n### Post workorders [POST]\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n+ Request Correct list of workorders posted. `response` will contain a list of added workorder where each row has the row_id of the added workorder (application/json)\n\n    + Body\n            \n            [\n              {\n                \"WorkorderNo\": \"AB756X\",\n                \"ProjectNr\": \"001\",\n                \"ExternProjectNr\": \"EX01\",\n                \"CustomerName\": \"Yoran van Arragon\",\n                \"CustomerDebtorNr\": \"A985785\",\n                \"CustomerStreet\": \"Adres\",\n                \"CustomerStreetNo\": \"5\",\n                \"CustomerEmail\": \"yoran.arragon@provide.nl\",\n                \"CustomerZIP\": \"3454de\",\n                \"CustomerCity\": \"De Meern\",\n                \"CustomerContactPerson\": \"Yoran van Arragon\",\n                \"CustomerPhone\": \"0646321418\",\n                \"CustomerRemark\": \"Geen opmerking\",\n                \"CustomerLatitude\": null,\n                \"CustomerLongitude\": null,\n                \"CustomerNameInvoice\": \"John Doe\",\n                \"CustomerDebtorNrInvoice\": \"B985785\",\n                \"CustomerStreetInvoice\": \"De Dompelaar\",\n                \"CustomerStreetNoInvoice\": \"1-D\",\n                \"CustomerEmailInvoice\": \"john.doe@example.com\",\n                \"CustomerZIPInvoice\": \"3454WJ\",\n                \"CustomerCityInvoice\": \"Amsterdam\",\n                \"CustomerContactPersonInvoice\": \"John Doe\",\n                \"CustomerPhoneInvoice\": \"0611111111\",\n                \"CustomerRemarkInvoice\": \"Geen\",\n                \"TypeOfWork\": \"Installatie\",\n                \"WorkDescription\": \"Verschillende werkzaamheden\",\n                \"PaymentMethod\": \"niet van toepassing\",\n                \"EmployeeNr\": \"123\",\n                \"WorkDate\": \"11-06-2013\",\n                \"WorkTime\": \"10:30\",\n                \"WorkEndDate\": \"11-06-2013\",\n                \"WorkEndTime\": \"12:30\",\n                \"InternalWorkDescription\": \"\",\n                \"WorkDuration\": \"0\",\n                \"WorkStatus\": \"\",\n                \"WorkDeadline\": \"\",\n                \"PickupPlanning\": \"0\",\n                \"WebPlanning\": \"0\", \n                \"CpnCode\": \"\", \n                \"AdrCode\": \"\", \n                \"ShortWorkDescription\": \"\",\n                \"Comment\": \"\",\n                \"ErrorCode\": \"\",\n                \"ErrorMessage\": \"\",\n                \"SolutionCode\": \"\",\n                \"SolutionMessage\": \"\",\n                \"MinimumHours\": \"0.00\",\n                \"RoundingAmount\": \"0.00\",\n                \"Attachments\": [\n                    {\n                    \"File\": \"https://www.werkbonapp.nl/uploads/documents/1389703238_test.pdf\"\n                    },\n                    {\n                    \"File\": \"https://www.werkbonapp.nl/uploads/documents/201410031416_test.xlsx\"\n                    }\n                ],\n                \"Materials\": [\n                    {\n                        \"MaterialCode\": \"A786878\",\n                        \"MaterialNr\": \"1\",\n                        \"MaterialPrice\": \"0,00\",\n                        \"MaterialName\": \"Kleinmateriaal\",\n                        \"MaterialUnit\": \"M2\",\n                        \"MaterialType\": null,\n                        \"MaterialFreeField1\": null,\n                        \"MaterialFreeField2\": null,\n                        \"MaterialFreeField3\": null,\n                        \"MaterialFreeField4\": null,\n                        \"MaterialFreeField5\": null\n                    }\n                ]\n              },\n              {\n                \"WorkorderNo\": \"AB756X1\",\n                \"ProjectNr\": \"0011\",\n                \"ExternProjectNr\": \"EX011\",\n                \"CustomerName\": \"Yoran van Arragon1\",\n                \"CustomerDebtorNr\": \"A9857851\",\n                \"CustomerStreet\": \"Adres1\",\n                \"CustomerStreetNo\": \"51\",\n                \"CustomerEmail\": \"yoran.arragon@provide.nl1\",\n                \"CustomerZIP\": \"3454de1\",\n                \"CustomerCity\": \"De Meern1\",\n                \"CustomerContactPerson\": \"Yoran van Arragon1\",\n                \"CustomerPhone\": \"06463214181\",\n                \"CustomerRemark\": \"Geen opmerking1\",\n                \"CustomerNameInvoice\": \"John Doe1\",\n                \"CustomerDebtorNrInvoice\": \"B9857851\",\n                \"CustomerStreetInvoice\": \"De Dompelaar1\",\n                \"CustomerStreetNoInvoice\": \"1-D1\",\n                \"CustomerEmailInvoice\": \"john.doe@example.com1\",\n                \"CustomerZIPInvoice\": \"3454WJ1\",\n                \"CustomerCityInvoice\": \"Amsterdam1\",\n                \"CustomerContactPersonInvoice\": \"John Doe1\",\n                \"CustomerPhoneInvoice\": \"06111111111\",\n                \"CustomerRemarkInvoice\": \"Geen1\",\n                \"TypeOfWork\": \"Installatie1\",\n                \"WorkDescription\": \"Verschillende werkzaamheden1\",\n                \"PaymentMethod\": \"niet van toepassing1\",\n                \"EmployeeNr\": \"1231\",\n                \"WorkDate\": \"11-06-2011\",\n                \"WorkTime\": \"10:30\",\n                \"WorkEndDate\": \"11-06-2011\",\n                \"WorkEndTime\": \"11:30\",\n                \"InternalWorkDescription\": \"\",\n                \"WorkDuration\": \"0\",\n                \"WorkStatus\": \"\",\n                \"WorkDeadline\": \"\",\n                \"PickupPlanning\": \"0\",\n                \"WebPlanning\": \"0\", \n                \"CpnCode\": \"\", \n                \"AdrCode\": \"\", \n                \"WorkObjects\":[\n                    \"OBJ001\",\n                    \"OBJ002\"\n                ],\n                \"Employees\":[\n                    \"1232\"\n                ]\n              }\n            ]           \n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"workorder_no\": \"AB756X\"\n                  \"row_id\": 169824,\n                },\n                {\n                  \"workorder_no\": \"AB756X1\"\n                  \"row_id\": 169825,\n                }\n              ]\n            }\n\n\n+ Request Correct workorder posted including Forms (application/json)\n\n    + Body\n            \n            [\n              {\n                \"WorkorderNo\": \"AB756X1\",\n                \"ProjectNr\": \"0011\",\n                \"ExternProjectNr\": \"EX011\",\n                \"CustomerName\": \"Yoran van Arragon1\",\n                \"CustomerDebtorNr\": \"A9857851\",\n                \"CustomerStreet\": \"Adres1\",\n                \"CustomerStreetNo\": \"51\",\n                \"CustomerEmail\": \"yoran.arragon@provide.nl1\",\n                \"CustomerZIP\": \"3454de1\",\n                \"CustomerCity\": \"De Meern1\",\n                \"CustomerContactPerson\": \"Yoran van Arragon1\",\n                \"CustomerPhone\": \"06463214181\",\n                \"CustomerRemark\": \"Geen opmerking1\",\n                \"CustomerNameInvoice\": \"John Doe1\",\n                \"CustomerDebtorNrInvoice\": \"B9857851\",\n                \"CustomerStreetInvoice\": \"De Dompelaar1\",\n                \"CustomerStreetNoInvoice\": \"1-D1\",\n                \"CustomerEmailInvoice\": \"john.doe@example.com1\",\n                \"CustomerZIPInvoice\": \"3454WJ1\",\n                \"CustomerCityInvoice\": \"Amsterdam1\",\n                \"CustomerContactPersonInvoice\": \"John Doe1\",\n                \"CustomerPhoneInvoice\": \"06111111111\",\n                \"CustomerRemarkInvoice\": \"Geen1\",\n                \"TypeOfWork\": \"Installatie1\",\n                \"WorkDescription\": \"Verschillende werkzaamheden1\",\n                \"PaymentMethod\": \"niet van toepassing1\",\n                \"EmployeeNr\": \"1231\",\n                \"WorkDate\": \"11-06-2011\",\n                \"WorkTime\": \"10:30\",\n                \"WorkEndDate\": \"11-06-2011\",\n                \"WorkEndTime\": \"11:30\",\n                \"InternalWorkDescription\": \"\",\n                \"WorkDuration\": \"0\",\n                \"WorkStatus\": \"\",\n                \"WorkDeadline\": \"\",\n                \"PickupPlanning\": \"0\",\n                \"WebPlanning\": \"0\", \n                \"CpnCode\": \"\", \n                \"AdrCode\": \"\", \n                \"Forms\":[\n                    {\n                        \"Name\": \"Form 1\",\n                        \"Data\": \"\",\n                        \"ObjectCode\": \"\"\n                        \n                    } \n                ] \n              }\n            ]           \n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [ \n                {\n                  \"workorder_no\": \"AB756X1\"\n                  \"row_id\": 169825,\n                }\n              ]\n            }\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n            \n            [\n              {\n                \"ProjectNr\": \"0011\",\n                \"ExternProjectNr\": \"EX011\",\n                \"CustomerName\": \"Yoran van Arragon1\",\n                \"CustomerDebtorNr\": \"A9857851\",\n                \"CustomerStreet\": \"Adres1\", \n                \"CustomerEmail\": \"john.doe@example.com1\",\n                \"CustomerEmailInvoice\": \"john.doe@example.com1\",\n                \"CustomerZIPInvoice\": \"3454WJ1\",\n                \"CustomerCityInvoice\": \"Amsterdam1\",\n                \"CustomerContactPersonInvoice\": \"John Doe1\",\n                \"CustomerPhoneInvoice\": \"06111111111\",\n                \"CustomerRemarkInvoice\": \"Geen1\",\n                \"TypeOfWork\": \"Installatie1\",\n                \"WorkDescription\": \"Verschillende werkzaamheden1\",\n                \"PaymentMethod\": \"niet van toepassing1\",\n                \"EmployeeNr\": \"1231\",\n                \"WorkDate\": \"11-06-2011\",\n                \"WorkTime\": \"10:31\"\n              }\n            ]            \n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1501,\n              \"messages\": [\n                \"Required field missing: WorkorderNo\",\n                \"Required field missing: CustomerZIP\",\n                \"Required field missing: CustomerCity\",\n                \"Required field missing: CustomerContactPerson\",\n                \"Required field missing: CustomerNameInvoice\",\n                \"Required field missing: CustomerDebtorNrInvoice\",\n                \"Required field missing: CustomerStreetInvoice\",\n              ],\n              \"response\": null\n            }\n\n## UpdateWorkorder [/UpdateWorkorder/{?token,software_token,row_id,workorder_no,workdate,worktime,employee_nr,workstatus}]\n\nThis API is used to update an existing workorder. The row_id of workorder_no can be used to identify the specific workorder. \n\n### Update an existing workorder [GET]\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + row_id (int,required) ... WorkorderApp row id returned when POSTing a workorder\n    + workorder_no (string,required) ... External software workorder number. Added when using the PostWorkorder api\n    + workdate (string,required, `05-03-2016`) ... New workdate for this worksheet. Format : d-m-Y\n    + worktime (string,required,`16:45`) ...  New worktime for this worksheet. Format: H:i\n    + employee_nr (string,required, `67`) ... New employee nr for this worksheet. An employee with this number must exist.\n    + workstatus (string,optional, `001`) ... New workstatus for this worksheet.\n\n+ Request Request with specified parameters having correct values (application/json)\n   \n+ Response 200 (application/json)\n   \n   + Body\n            \n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": null\n            }\n\n\n+ Request Request with parameters having incorrect values (application/json)\n   \n+ Response 200 (application/json)\n   \n   + Body\n            \n            {\n              \"code\": 1504,\n              \"messages\": [\n                \"Date invalid. Format: 20-02-2016\",\n                \"Time invalid. Format: 07:08\",\n                \"Employee not updated\"\n              ],\n              \"response\": null\n            }\n            \n+ Request Request with unknown worksheet based on row_id or workorder_no  (application/json)\n   \n+ Response 200 (application/json)\n   \n   + Body\n            \n            {\n              \"code\": 1500,\n              \"messages\": [],\n              \"response\": null\n            }\n## GetWorkorder [/GetWorkorder/{?token,software_token,row_id,workorder_no,update_status}]\n\nThis api is used to get a single workorder from WorkorderApp. Either row_id or workorder_no is required as input parameter.\n\n### Get workorder [GET]\n\n\nA workorder contains the following data:\n\n| Parameter                    | Detail                                                                                                    |\n|------------------------------|-----------------------------------------------------------------------------------------------------------|\n| Id                           | WBA database unique row number                                                                            |\n| WorkorderNo                  | Unique number originated from ERP/CRM                                                                     |\n| Order Nr                     | Unique Workorder number created in tablet app                                                             |\n| WorkDate                     | Scheduled date for work (d-m-Y)                                                                      |\n| WorkTime                     | Scheduled time for work (H:i)                                                                           |\n| WorkEndDate                  | Scheduled end date for work (d-m-Y)                                                                  |\n| WorkEndTime                  | Scheduled end time for work (H:i)                                                                       |\n| ProjectNr                    | Internal Project number                                                                                   |\n| ExternProjectNr              | External Project number                                                                                   |\n| CustomerName                 | Customer name                                                                                             |\n| CustomerDebtorNr             | Customer debtor number                                                                                    |\n| CustomerStreet               | Customer street                                                                                           |\n| CustomerStreetNo             | Customer street number                                                                                    |\n| CustomerEmail                | Customer Email                                                                                            |\n| CustomerZIP                  | Customer zip code                                                                                         |\n| CustomerCity                 | Customer city                                                                                             |\n| CustomerContactPerson        | Customer contact person                                                                                   |\n| CustomerPhone                | Customer phone number                                                                                     |\n| CustomerRemark               | Customer remark                                                                                           |\n| CustomerNameInvoice          | Invoice customer name                                                                                     |\n| CustomerDebtorNrInvoice      | Invoice customer debtor number                                                                            |\n| CustomerStreetInvoice        | Invoice customer street name                                                                              |\n| CustomerStreetNoInvoice      | Invoice customer street number                                                                            |\n| CustomerEmailInvoice         | Invoice customer email                                                                                    |\n| CustomerZIPInvoice           | Invoice customer zip code                                                                                 |\n| CustomerCityInvoice          | Invoice customer city                                                                                     |\n| CustomerContactPersonInvoice | Invoice customer contact person                                                                           |\n| CustomerPhoneInvoice         | Invoice customer phone number                                                                             |\n| CustomerRemarkInvoice        | Invoice customer remark                                                                                   |\n| TypeOfWork                   | Installatie, Garantie, Levering, Onderhoud, Project, Regie, Reparatie,Service, Storing, Verkoop, Verhuur  |\n| WorkDescription              | Work description of executed work                                                                         |\n| WorkInstruction              | Work instructions from ERP / CRM (future use)                                                             |\n| PaymentMethod                | niet van toepassing, op rekening, contact voldaan, pin betaling, conform offerte                          |\n| CreationDate                 | Date time of creation of workorder in WBA backoffice                                                      |\n| EmployeeNr                   | Employee Number                                                                                           |\n| Signature                    | Signature file name                                                                                       |\n| SignatureUrl                 | Url to download/open signature image                                                                      |\n| PdfUrl                       | Url to download/open PDF                                                                                  |\n| WordUrl                      | Url to download/open Word document                                                                        |\n| WorksheetCode                | Unique code to use when retrieving a document                                                             |\n| Status                       | Status of the workorder                                                                                   |\n| WorkFinished                 | Indication if the work is finished. When the value is 1 the employee marked the work ready in the tablet. |\n| Archived                     | Indication if the workorder is archived                                                                   |\n| Photos                       | Array of photo objects (URL's)                                                                            |\n| Workperiods                  | Array of Workperiods                                                                                      |\n| Materials                    | Array of used materials (MaterialNr is amount of materials)                                               |\n| Documents                    | Array of file names                                                                                       |\n| Forms                        | Array of forms. Each row contains Name, Data and ObjectCode                                               |\n| Employees                    | Array of employee numbers.                                                                                |\n| WorkObjects                  | Array of objects codes.                                                                                          |\n \n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + row_id (string,required) ... Unique row id received when using the PostWorkorders API \n    + workorder_no (string,required) ... Unique WorkorderNo that was posted in the PostWorkorders API\n    + update_status (boolean, `true`) ... true (default) updates all fetched workorders to status Afgehandeld. false will not update the status.\n\n+ Response 200 (application/json)\n \n    + Body \n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": \n                    {\n                        \"id\": \"1919\",\n                        \"WorkorderNo\": \"AB756X\",\n                        \"OrderNr\": \"3BCE7228843\",\n                        \"WorkDate\": \"11-06-2013\",\n                        \"WorkTime\": \"10:30\",\n                        \"WorkEndDate\": \"11-06-2013\",\n                        \"WorkEndTime\": \"12:30\",\n                        \"ProjectNr\": \"001\",\n                        \"ExternProjectNr\": \"EX01\",\n                        \"CustomerName\": \"Yoran van Arragon\",\n                        \"CustomerDebtorNr\": \"A985785\",\n                        \"CustomerStreet\": \"Adres\",\n                        \"CustomerStreetNo\": \"5\",\n                        \"CustomerEmail\": \"yoran.arragon@provide.nl\",\n                        \"CustomerZIP\": \"3454de\",\n                        \"CustomerCity\": \"De Meern\",\n                        \"CustomerContactPerson\": \"Yoran van Arragon\",\n                        \"CustomerPhone\": \"0646321418\",\n                        \"CustomerRemark\": \"Geen opmerking\",\n                        \"CustomerNameInvoice\": \"John Doe\",\n                        \"CustomerDebtorNrInvoice\": \"B985785\",\n                        \"CustomerStreetInvoice\": \"De Dompelaar\",\n                        \"CustomerStreetNoInvoice\": \"1-D\",\n                        \"CustomerEmailInvoice\": \"john.doe@example.com\",\n                        \"CustomerZIPInvoice\": \"3454WJ\",\n                        \"CustomerCityInvoice\": \"Amsterdam\",\n                        \"CustomerContactPersonInvoice\": \"John Doe\",\n                        \"CustomerPhoneInvoice\": \"0611111111\",\n                        \"CustomerRemarkInvoice\": \"Geen\",\n                        \"TypeOfWork\": \"Installatie\",\n                        \"WorkDescription\": \"Verschillende werkzaamheden\",\n                        \"PaymentMethod\": \"niet van toepassing\",\n                        \"CreationDate\": \"2013-06-11 02:51\",\n                        \"Archived\": \"0\",\n                        \"EmployeeNr\": \"\",\n                        \"Signature\": \"553b6a0b3ace6c.png\",\n                        \"SignatureUrl\": \"http://www.werkbonapp.nl/uploads/handtekeningen/553b6a0b3ace6c.png\",\n                        \"PdfUrl\": \"http://www.werkbonapp.nl/mailpdf.php?action=display&sheet_id=6201090a4cf6e501f9f0d7a1c75c584d\",\n                        \"WordUrl\": \"http://www.werkbonapp.nl/mailpdf.php?action=word&sheet_id=6201090a4cf6e501f9f0d7a1c75c584d\",\n                        \"WorksheetCode\":\"6201090a4cf6e501f9f0d7a1c75c584d\",\n                        \"status\": \"Klaargezet\",\n                        \"WorkFinished\": \"1\",\n                        \"InternalWorkDescription\": \"\",\n                        \"WorkDuration\": \"0\",\n                        \"WorkStatus\": \"\",\n                        \"WorkDeadline\": \"\",\n                        \"PickupPlanning\": \"0\",\n                        \"WebPlanning\": \"0\", \n                        \"CpnCode\": \"\", \n                        \"AdrCode\": \"\", \n                        \"Photos\": [\n                            {\n                                \"image\": \"http://www.werkbonapp.nl/werkbonimages/url.png\",\n                                \"title\": \"WorkOrderImage_4\"\n                            }\n                        ],\n                        \"Workperiods\": [\n                            {\n                                \"BeginTime\": \"08:30\",\n                                \"TotalTime\": \"03:45\",\n                                \"WorkRemark\": \"\",\n                                \"WorkDate\": \"26-09-2013\",\n                                \"EndTime\": \"12:15\",\n                                \"Travel\": \"1\",\n                                \"EmployeeNr\":\"11\",\n                                \"HourType\":\"001\"\n                            }\n                        ],\n                        \"Materials\": [\n                            {\n                                \"MaterialCode\": \"A786878\",\n                                \"MaterialTotalPrice\": \"0,00\",\n                                \"MaterialNr\": \"1\",\n                                \"MaterialPrice\": \"0,00\",\n                                \"MaterialName\": \"Kleinmateriaal\"\n                                \"MaterialUnit\": \"M2\",\n                                \"MaterialType\": null,\n                                \"MaterialFreeField1\": null,\n                                \"MaterialFreeField2\": null,\n                                \"MaterialFreeField3\": null,\n                                \"MaterialFreeField4\": null,\n                                \"MaterialFreeField5\": null\n                            }\n                        ],  \n                        \"Documents\": [\n                            {\n                            \"http://www.werkbonapp.nl/uploads/documents/1389703238_test.pdf\",\n                            \"http://www.werkbonapp.nl/uploads/documents/201410031416_test.xlsx\"\n                            }\n                        ],\n                        \"Forms\":[],\n                        \"WorkObjects\":[]\n                    }\n            }\n## GetWorkorders [/GetWorkorders/{?token,software_token,status,update_status,workstatus}]\n\nThis api is used to get a list of workorders from WorkorderApp.\n\n### Get workorders [GET]\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + status (string, required, `Alle`) ... Status of the workorders that need to be fetched. Possible values: `Alle` , `Opgehaald`, `Klaargezet`, `Compleet` of `Afgehandeld`.\n    + update_status (boolean, `true`) ... true (default) updates all fetched workorders to status Afgehandeld. false will not update the status.\n    + workstatus (string, optional, `001`) ... An extra filter to only receive workorders given a certain workstatus.\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                    {\n                        \"id\": \"1919\",\n                        \"WorkorderNo\": \"AB756X\",\n                        \"OrderNr\": \"3BCE7228843\",\n                        \"WorkDate\": \"11-06-2013\",\n                        \"WorkTime\": \"10:30\",\n                        \"WorkEndDate\": \"\",\n                        \"WorkEndTime\": \"\",\n                        \"ProjectNr\": \"001\",\n                        \"ExternProjectNr\": \"EX01\",\n                        \"CustomerName\": \"Yoran van Arragon\",\n                        \"CustomerDebtorNr\": \"A985785\",\n                        \"CustomerStreet\": \"Adres\",\n                        \"CustomerStreetNo\": \"5\",\n                        \"CustomerEmail\": \"yoran.arragon@provide.nl\",\n                        \"CustomerZIP\": \"3454de\",\n                        \"CustomerCity\": \"De Meern\",\n                        \"CustomerContactPerson\": \"Yoran van Arragon\",\n                        \"CustomerPhone\": \"0646321418\",\n                        \"CustomerRemark\": \"Geen opmerking\",\n                        \"CustomerNameInvoice\": \"John Doe\",\n                        \"CustomerDebtorNrInvoice\": \"B985785\",\n                        \"CustomerStreetInvoice\": \"De Dompelaar\",\n                        \"CustomerStreetNoInvoice\": \"1-D\",\n                        \"CustomerEmailInvoice\": \"john.doe@example.com\",\n                        \"CustomerZIPInvoice\": \"3454WJ\",\n                        \"CustomerCityInvoice\": \"Amsterdam\",\n                        \"CustomerContactPersonInvoice\": \"John Doe\",\n                        \"CustomerPhoneInvoice\": \"0611111111\",\n                        \"CustomerRemarkInvoice\": \"Geen\",\n                        \"TypeOfWork\": \"Installatie\",\n                        \"WorkDescription\": \"Verschillende werkzaamheden\",\n                        \"PaymentMethod\": \"niet van toepassing\",\n                        \"CreationDate\": \"2013-06-11 02:51\",\n                        \"EmployeeNr\": \"\",\n                        \"Archived\": \"0\",\n                        \"Signature\": \"553b6a0b3ace6c.png\",\n                        \"SignatureUrl\": \"http://www.werkbonapp.nl/uploads/handtekeningen/553b6a0b3ace6c.png\",\n                        \"PdfUrl\": \"http://www.werkbonapp.nl/mailpdf.php?action=display&sheet_id=6201090a4cf6e501f9f0d7a1c75c584d\",\n                        \"WordUrl\": \"http://www.werkbonapp.nl/mailpdf.php?action=word&sheet_id=6201090a4cf6e501f9f0d7a1c75c584d\",\n                        \"WorksheetCode\":\"6201090a4cf6e501f9f0d7a1c75c584d\",\n                        \"status\": \"Klaargezet\",\n                        \"WorkFinished\": \"1\",\n                        \"InternalWorkDescription\": \"\",\n                        \"WorkDuration\": \"0\",\n                        \"WorkStatus\": \"\",\n                        \"WorkDeadline\": \"\",\n                        \"PickupPlanning\": \"0\",\n                        \"WebPlanning\": \"0\", \n                        \"CpnCode\": \"\", \n                        \"AdrCode\": \"\", \n                        \"Photos\": [\n                            {\n                                \"image\": \"http://www.werkbonapp.nl/werkbonimages/url.png\",\n                                \"title\": \"WorkOrderImage_4\"\n                            }\n                        ],\n                        \"Workperiods\": [\n                            {\n                                \"BeginTime\": \"08:30\",\n                                \"TotalTime\": \"03:45\",\n                                \"WorkRemark\": \"\",\n                                \"WorkDate\": \"26-09-2013\",\n                                \"EndTime\": \"12:15\",\n                                \"Travel\": \"1\",\n                                \"EmployeeNr\":\"\",\n                                \"HourType\":\"\"\n                            }\n                        ],\n                        \"Materials\": [\n                            {\n                                \"MaterialCode\": \"A786878\",\n                                \"MaterialTotalPrice\": \"0,00\",\n                                \"MaterialNr\": \"1\",\n                                \"MaterialPrice\": \"0,00\",\n                                \"MaterialName\": \"Kleinmateriaal\"\n                                \"MaterialUnit\": \"M2\",\n                                \"MaterialType\": null,\n                                \"MaterialFreeField1\": null,\n                                \"MaterialFreeField2\": null,\n                                \"MaterialFreeField3\": null,\n                                \"MaterialFreeField4\": null,\n                                \"MaterialFreeField5\": null\n                            }\n                        ],  \n                        \"Documents\": [\n                            {\n                            \"http://www.werkbonapp.nl/uploads/documents/1389703238_test.pdf\",\n                            \"http://www.werkbonapp.nl/uploads/documents/201410031416_test.xlsx\"\n                            }\n                        ],\n                        \"Forms\":[],\n                        \"WorkObjects\":[]\n                    }\n                ]\n            }\n            \n\n            \n## DeleteEntity [/DeleteEntity/{?token,software_token,delete_all,entity,key,value}]\n\nThis API is used to delete an entity from WorkorderApp.\n\nAllowed keys for each entity:\n\n| Entity                                  | Key           | Description                                                                               |\n|-----------------------------------------|---------------|-------------------------------------------------------------------------------------------|\n| workorder, employee, material, relation | db_row        | Row id of the entity                                                                      |\n| workorder                               | workorder_no  | External workorder number added when using the PostWorkorders API.                        |\n| workorder                               | order_no      | Order number given in the PostWorkorders API or added by the employee in the application. |\n| employee                                | number        | Employee number added in the when using the employees POST method.                            |\n| material                                | code          | Material code added in the when using the materials POST method.                              |\n| material                                | description   | Material description added in the when using the materials POST method.                       |\n| relation                                | name          | Company/relation name added when using the relations POST method.                             |\n| relation                                | debtor_number | Debtor number added when using the relations POST method.                                |\n| project                                 | code          | Code added when using the projects POST method.                                |\n| hourtype                                | code          | Code added when using the hourtype POST method.                                |\n| category                                | code          | Code added when using the categories POST method.                                |\n| address                                 | code          | Code added when using the addresses POST method.                                |\n| contactperson                           | code          | Code added when using the contactpersons POST method.                                |\n| object                                  | code          | Code added when using the objects POST method.                                |\n| location                                | identifier    | Identifier added when using the locations POST method.                                |\n| material_category                       | mct_mat_code  | Material code added when using the material_categories POST method.                                |\n| material_category                       | mct_cat_code  | Category code added when using the material_categories POST method.                                |\n| error                                   | code          | Code added when using the errors POST method.                                |\n| priority                                | code          | Code added when using the priorities POST method.                                |\n| solution                                | code          | Code added when using the solutions POST method.                                |\n| region                                | code          | Code added when using the regions POST method.                                |\n| vehicle                                | license_plate          | License plate added when using the vehicles POST method.                                |\n| object_part                                | obj_code          | Object code when added with the POST method.                                |\n| object_part                                | prt_code          | Part code when added with the POST method.                                |\n| object_part                                | serial_number          | Serial number when added with the POST method.                                |\n\nSince object_part uses composite primary key it is allowed to add keys and values as an array:\n&delete_all=false&entity=object_part&key[]=prt_code&value[]=0010&key[]=obj_code&value[]=2\n\n### Delete an entity [GET]\n\nobject will contain the amount of affected rows.\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + delete_all (boolean,required, `false`) ... true or false\n    + entity (string,required, `workorder`) ... workorder, employee, material, relation, project or hourtype\n    + key (string,required, `workorder_no`) ... A key that is allowed for the given entity.\n    + value (string,required,`AB756X`) ...  Value of the given key\n\n+ Request Correct request(application/json) \n\n+ Response 200 (application/json)\n   \n   + Body\n             \n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 1\n            }\n            \n+ Request Request with wrong entity (application/json) \n\n+ Response 200 (application/json)\n   \n   + Body \n            \n            {\n              \"code\": 1600,\n              \"messages\": [\n                \"Entity: materials not found\"\n              ],\n              \"response\": null\n            }\n\n\n+ Request Request with wrong key for entity (application/json) \n\n+ Response 200 (application/json)\n   \n   + Body \n            \n            {\n              \"code\": 1600,\n              \"messages\": [\n                \"Key: codes not allowed for entity: material\"\n              ],\n              \"response\": null\n            }\n\n+ Request Request with delete all true while entity is workorder (application/json) \n\n+ Response 200 (application/json)\n   \n   + Body \n   \n            {\n              \"code\": 1600,\n              \"messages\": [\n                \"Delete all not allowed on Workorder entity\"\n              ],\n              \"response\": null\n            }\n            \n+ Request Request with delete all true while entity is relation (application/json) \n\n+ Response 200 (application/json)\n   \n   + Body\n   \n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": 60\n            }\n\n## locations [/locations/{?token,software_token}]\n\nThis api is used to get the locations of connected devices from WorkorderApp or post locations for certain identifiers. An identifier can be anything, for example employee nr or license plate. When posting a location the type should be specified. \n\nPost data should contain an array with objects containing the following parameters:\n\n\n| Parameter                 | Description                                                       | \n|---------------------------|-------------------------------------------------------------------|  \n| lat                       | Latitude                                                          |  \n| long                      | Longitude                                                         |  \n| identifier                | Unique identifier, for example employee number or license plate.  |  \n| type                      | 0 for employee, 1 for car                                         |  \n\n\n### Get location [GET]\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n+ Request Request with location data present.(application/json)\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"customer_id\": \"1205\",\n                  \"lat\": \"50.827024870303866\",\n                  \"long\": \"6.018792792566475\",\n                  \"employee_nr\": \"123\",\n                  \"last_seen\": \"2016-04-06 11:30:00\"\n                }\n              ]\n            }\n            \n+ Request Request with no location data present.(application/json)\n\n+ Response 200 (application/json)\n \n    + Body        \n            \n            {\n              \"code\": 1400,\n              \"messages\": [],\n              \"response\": null\n            }\n            \n### Post locations [POST]\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n\n+ Request Locations data posted. `response` will contain the amount of locations updated/inserted into WorkOrderApp (application/json)\n\n    + Body\n    \n            [  \n                {  \n                    \"lat\":\"52.1175835\",\n                    \"long\":\"5.0364392\",\n                    \"identifier\":\"EMP001\",\n                    \"type\":\"0\"\n                },\n                {  \n                    \"lat\":\"52.1175835\",\n                    \"long\":\"5.0364392\",\n                    \"identifier\":\"44-FPS-2\",\n                    \"type\":\"1\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n\n\n## worktypes [/worktypes/{?token,software_token}]\n\nThis api is used to sync  worktypes with WorkorderApp.\n\nEach worktype record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| wrt_name                  | Name                              | Y        | Varchar (255) |\n| wrt_description           | Description                       | Y        | Varchar (255) |\n| wrt_default_minutes       | Default minutes used for planning | Y        | Int (10) |\n| wrt_active                | Indicates if worktype is active   | Y        | Int (10)      |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add worktypes [POST]\n\n\n+ Request Worktypes data posted. `response` will contain the amount of worktypes synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"wrt_name\": \"Garantie\",\n                  \"wrt_description\": \"Garantie werkzaamheden\",\n                  \"wrt_default_minutes\": \"60\",\n                  \"wrt_active\": \"1\"\n                },\n                {\n                  \"wrt_name\": \"Installatie\",\n                  \"wrt_description\": \"Installatie werkzaamheden\",\n                  \"wrt_default_minutes\": \"720\",\n                  \"wrt_active\": \"1\"\n                }\n            ] \n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [\n                {\n                  \"wrt_description\": \"Garantie werkzaamheden\",\n                  \"wrt_default_minutes\": \"60\",\n                  \"wrt_active\": \"1\"\n                },\n                {\n                  \"wrt_name\": \"Installatie\",\n                  \"wrt_description\": \"Installatie werkzaamheden\",\n                  \"wrt_default_minutes\": \"720\",\n                  \"wrt_active\": \"1\"\n                }\n            ] \n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 2601,\n              \"messages\": [\n                \"Required field missing: wrt_name\"\n              ],\n              \"response\": null\n            }  \n            \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"wrt_name\"\": \"Garantie\",\n                  \"wrt_description\": \"Garantie werkzaamheden\",\n                  \"wrt_default_minutes\": \"60\",\n                  \"wrt_active\": \"1\"\n                },\n                {\n                  \"wrt_name\": \"Installatie\",\n                  \"wrt_description\": \"Installatie werkzaamheden\",\n                  \"wrt_default_minutes\": \"720\",\n                  \"wrt_active\": \"1\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get worktypes [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"wrt_name\": \"Garantie\",\n                  \"wrt_description\": \"Garantie werkzaamheden\",\n                  \"wrt_default_minutes\": \"60\",\n                  \"wrt_active\": \"1\"\n                },\n                {\n                  \"wrt_name\": \"Installatie\",\n                  \"wrt_description\": \"Installatie werkzaamheden\",\n                  \"wrt_default_minutes\": \"720\",\n                  \"wrt_active\": \"1\"\n                }\n              ]\n            }\n\n\n\n\n## paymentmethods [/paymentmethods/{?token,software_token}]\n\nThis api is used to sync paymentmethods with WorkorderApp.\n\nEach paymentmethods record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| pmd_description           | Description                       | Y        | Varchar (255) | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add paymentmethods [POST]\n\n\n+ Request Paymentmethods data posted. `response` will contain the amount of paymentmethods synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"pmd_description\": \"Cash\"\n                },\n                {\n                  \"pmd_description\": \"Pin\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n    \n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"pmd_description\"\": \"Cash\"\n                },\n                {\n                  \"pmd_description\": \"Pin\"\n                }\n              ]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get paymentmethods [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"pmd_description\": \"Cash\"\n                },\n                {\n                  \"pmd_description\": \"Pin\"\n                }\n              ]\n            }\n\n\n        \n        \n        \n\n## priorities [/priorities/{?token,software_token}]\n\nThis api is used to sync priorities with WorkorderApp.\n\nEach priority record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the priority. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the priority should be visible in the app                             | N        | Integer (11)  | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add priorities [POST]\n\n\n+ Request priorities data posted. `response` will contain the amount of priorities synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"code\":\"10\",\"description\":\"High\",\"app_enabled\":\"0\"},{\"code\":\"1\",\"description\":\"Low\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [{\"code\":\"10\",\"app_enabled\":\"0\"},{\"code\":\"1\",\"description\":\"Low\",\"app_enabled\":\"0\"}]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1051,\"messages\":[\"Required field missing: description\"],\"response\":null}\n\n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"code\":\"10\"\",\"app_enabled\":\"0\"},{\"code\":\"1\",\"description\":\"Low\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1008,\"messages\":[\"Unable to fetch body\"],\"response\":null}\n            \n### Get priorities [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"code\":\"10\",\"description\":\"High\",\"app_enabled\":\"0\"},{\"code\":\"1\",\"description\":\"Low\",\"app_enabled\":\"1\"}]}\n            \n\n## errors [/errors/{?token,software_token}]\n\nThis api is used to sync errors with WorkorderApp.\n\nEach error record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the error. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the error should be visible in the app                             | N        | Integer (11)  | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add errors [POST]\n\n\n+ Request errors data posted. `response` will contain the amount of errors synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"code\":\"GENERAL\",\"description\":\"General error\",\"app_enabled\":\"0\"},{\"code\":\"MECHANICAL\",\"description\":\"Mechanical error\",\"app_enabled\":\"0\"},{\"code\":\"SOFTWARE\",\"description\":\"Software error\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":3}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [{\"code\":\"GENERAL\",\"app_enabled\":\"0\"},{\"code\":\"MECHANICAL\",\"description\":\"Mechanical error\",\"app_enabled\":\"0\"},{\"code\":\"SOFTWARE\",\"description\":\"Software error\",\"app_enabled\":\"0\"}]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1051,\"messages\":[\"Required field missing: description\"],\"response\":null}\n\n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"code\":\"GENERAL\"\",\"description\":\"General error\",\"app_enabled\":\"0\"},{\"code\":\"MECHANICAL\",\"description\":\"Mechanical error\",\"app_enabled\":\"0\"},{\"code\":\"SOFTWARE\",\"description\":\"Software error\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1008,\"messages\":[\"Unable to fetch body\"],\"response\":null}\n\n### Get errors [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"code\":\"GENERAL\",\"description\":\"General error\",\"app_enabled\":\"0\"},{\"code\":\"MECHANICAL\",\"description\":\"Mechanical error\",\"app_enabled\":\"0\"},{\"code\":\"SOFTWARE\",\"description\":\"Software error\",\"app_enabled\":\"0\"}]}\n\n## solutions [/solutions/{?token,software_token}]\n\nThis api is used to sync solutions with WorkorderApp.\n\nEach solution record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the solution. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the solution should be visible in the app                             | N        | Integer (11)  | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add solutions [POST]\n\n\n+ Request solutions data posted. `response` will contain the amount of solutions synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"code\":\"HARD_RESET\",\"description\":\"Hard reset\",\"app_enabled\":\"0\"},{\"code\":\"SOFT_RESET\",\"description\":\"Soft reset\",\"app_enabled\":\"0\"},{\"code\":\"Update\",\"description\":\"Update\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":3}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [{\"code\":\"HARD_RESET\",\"app_enabled\":\"0\"},{\"code\":\"SOFT_RESET\",\"description\":\"Soft reset\",\"app_enabled\":\"0\"},{\"code\":\"Update\",\"description\":\"Update\",\"app_enabled\":\"0\"}]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1051,\"messages\":[\"Required field missing: description\"],\"response\":null}\n\n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"code\":\"HARD_RESET\"\",\"description\":\"Hard reset\",\"app_enabled\":\"0\"},{\"code\":\"SOFT_RESET\",\"description\":\"Soft reset\",\"app_enabled\":\"0\"},{\"code\":\"Update\",\"description\":\"Update\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1008,\"messages\":[\"Unable to fetch body\"],\"response\":null}\n\n### Get solutions [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"code\":\"HARD_RESET\",\"description\":\"Hard reset\",\"app_enabled\":\"0\"},{\"code\":\"SOFT_RESET\",\"description\":\"Soft reset\",\"app_enabled\":\"0\"},{\"code\":\"Update\",\"description\":\"Update\",\"app_enabled\":\"0\"}]}\n\n\n## regions [/regions/{?token,software_token}]\n\nThis api is used to sync regions with WorkorderApp.\n\nEach region record can contain the following data:\n\n| Parameter                 | Description               | Required | Type (size)   |\n|---------------------------|---------------------------|----------|---------------|\n| reg_code                  | Unique code               | Y        | Varchar (255) | \n| reg_name                  | Name of the region.       | Y        | Varchar (255) | \n| reg_zip_start             | Zip start of the region.  | N        | Integer (11) | \n| reg_zip_end               | Zip end of the region.    | N        | Integer (11) | \n| reg_city                  | City of the region.       | N        | Varchar (255) | \n| reg_country               | Country of the region.    | N        | Varchar (255) | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add regions [POST]\n\n\n+ Request solutions data posted. `response` will contain the amount of solutions synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"reg_code\":\"1\",\"reg_name\":\"Utrecht 32-33\",\"reg_zip_start\":\"3200\",\"reg_zip_end\":\"3500\",\"reg_city\":\"\",\"reg_country\":\"\"},{\"reg_code\":\"2\",\"reg_name\":\"Utrecht\",\"reg_zip_start\":\"0\",\"reg_zip_end\":\"0\",\"reg_city\":\"Utrecht\",\"reg_country\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [{\"reg_name\":\"Utrecht 32-33\",\"reg_zip_start\":\"3200\",\"reg_zip_end\":\"3500\",\"reg_city\":\"\",\"reg_country\":\"\"},{\"reg_code\":\"2\",\"reg_name\":\"Utrecht\",\"reg_zip_start\":\"0\",\"reg_zip_end\":\"0\",\"reg_city\":\"Utrecht\",\"reg_country\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1051,\"messages\":[\"Required field missing: reg_code\"],\"response\":null}\n\n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"reg_code\"\":\"1\",\"reg_name\":\"Utrecht 32-33\",\"reg_zip_start\":\"3200\",\"reg_zip_end\":\"3500\",\"reg_city\":\"\",\"reg_country\":\"\"},{\"reg_code\":\"2\",\"reg_name\":\"Utrecht\",\"reg_zip_start\":\"0\",\"reg_zip_end\":\"0\",\"reg_city\":\"Utrecht\",\"reg_country\":\"\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1008,\"messages\":[\"Unable to fetch body\"],\"response\":null}\n\n### Get regions [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"reg_code\":\"1\",\"reg_name\":\"Utrecht 32-33\",\"reg_zip_start\":\"3200\",\"reg_zip_end\":\"3500\",\"reg_city\":\"\",\"reg_country\":\"\"},{\"reg_code\":\"2\",\"reg_name\":\"Utrecht\",\"reg_zip_start\":\"0\",\"reg_zip_end\":\"0\",\"reg_city\":\"Utrecht\",\"reg_country\":\"\"}]}\n            \n            \n## vehicles [/vehicles/{?token,software_token}]\n\nThis api is used to sync vehicles with WorkorderApp.\n\nEach vehicle record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| veh_license_plate         | Unique  license plate                                                                 | Y        | Varchar (255) | \n| veh_title               | Title of the vehicle | Y        | Varchar (255) | \n| veh_brand               | Brand of the vehicle  | N        | Varchar (255) | \n| veh_model               |  Model of the vehicle| N        | Varchar (255) | \n| veh_type               | Type of the vehicle. | N        | Varchar (255) | \n| veh_image               | Url of the image . POST: An external url should be provided.  GET: You will receive a workorderapp url.    | Y        |   | \n| veh_driver               | Driver of the vehicle. This us a reference to the employee number | N        | Varchar (255) | \n| veh_driving               | Indication if the vehicle is driving. When the value is set to 1 it will be shown in the planbord. | N        | Integer (11) | \n| veh_active               | Indication if the vehicle is active                             | N        | Integer (11)  | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add vehicles [POST]\n\n\n+ Request solutions data posted. `response` will contain the amount of solutions synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"veh_license_plate\":\"GN054H\",\"veh_title\":\"Golf GTE\",\"veh_brand\":\"Volkswagen\",\"veh_model\":\"Golf\",\"veh_type\":\"GTE\",\"veh_driver\":\"13\",\"veh_driving\":\"1\",\"veh_active\":\"1\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":1}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [{\"veh_title\":\"Golf GTE\",\"veh_brand\":\"Volkswagen\",\"veh_model\":\"Golf\",\"veh_type\":\"GTE\",\"veh_driver\":\"13\",\"veh_driving\":\"1\",\"veh_active\":\"1\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1051,\"messages\":[\"Required field missing: veh_license_plate\"],\"response\":null}\n\n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"veh_license_plate\":\"GN054H\",\"veh_title\":\"Golf GTE\",\"veh_brand\":\"Volkswagen\",\"veh_model\":\"Golf\",\"veh_type\":\"GTE\",\"veh_driver\":\"13\",\"veh_driving\":\"1\",\"veh_active\":\"1\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1008,\"messages\":[\"Unable to fetch body\"],\"response\":null}\n\n### Get vehicles [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"veh_license_plate\":\"GN054H\",\"veh_title\":\"Golf GTE\",\"veh_image\":\"https:\\/\\/www.wba-werkbonapp.nl\\/files\\/3bc5037d3987d6710de4c34e7481ca9cb072a61a73cc2e8f6a94e8f16986f1f7\\/cfeff9cb262b39015bb079f9845ce917566cf8415bc88a357dfcb5ca120fe738a9a462326ee251764293f4a4e0341d25b665f0f0bd4f128917a7a3454ea574de6e43fc686ba0975cd0b59f0f7d571c194233a4443112f37714e291d607d9bbd8\\/cc40a5f5ba28212f2e0ce6336ee211335791ab7126538cb93d954848eb263f14\\/51fd23f6accc6e933b732cb5330dfbee3931b23cfc3e258dc10620b28ae03210\\/a0631a2843cd949e574754dd9b4b08894b8a031c8856ea08700c051f48ecfa80fade41486bd3b34119c623eab7304aaee1203ace9e669cae2b2aefa232b1192a\\/4611bb0557e5077b4f0c0d74ba442f1d52b8a565f6240d9e79e0e804a576b36b8371a6576d1db0517cb93c59f4b96a94f79942bbac94666d61d00ad332b2ff9d\\/bf60a587b82325aea37899075b2c03f153ad6f687418c1de3c09ddfcf1ad859f\\/1529056261_images.jpg\",\"veh_brand\":\"Volkswagen\",\"veh_model\":\"Golf\",\"veh_type\":\"GTE\",\"veh_driver\":\"13\",\"veh_driving\":\"1\",\"veh_active\":\"1\"}]}          \n\n## material_types [/material_types/{?token,software_token}]\n\nThis api is used to sync material types with WorkorderApp.\n\nEach material type record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the material type.  | Y        | Varchar (255) | \n| app_enabled               | Indication if the material type should be visible in the app                             | N        | Integer (11)  | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add material_types [POST]\n\n\n+ Request material_types data posted. `response` will contain the amount of material_types synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [{\"code\":\"DELIVERY\",\"description\":\"Delivery\",\"app_enabled\":\"0\"},{\"code\":\"ORDER\",\"description\":\"Order\",\"app_enabled\":\"0\"},{\"code\":\"PICKUP\",\"description\":\"Pick-up\",\"app_enabled\":\"0\"},{\"code\":\"USAGE\",\"description\":\"Usage\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":4}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [{\"code\":\"DELIVERY\",\"app_enabled\":\"0\"},{\"code\":\"ORDER\",\"description\":\"Order\",\"app_enabled\":\"0\"},{\"code\":\"PICKUP\",\"description\":\"Pick-up\",\"app_enabled\":\"0\"},{\"code\":\"USAGE\",\"description\":\"Usage\",\"app_enabled\":\"0\"}]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1051,\"messages\":[\"Required field missing: description\"],\"response\":null}\n\n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [{\"code\":\"DELIVERY\"\",\"description\":\"Delivery\",\"app_enabled\":\"0\"},{\"code\":\"ORDER\",\"description\":\"Order\",\"app_enabled\":\"0\"},{\"code\":\"PICKUP\",\"description\":\"Pick-up\",\"app_enabled\":\"0\"},{\"code\":\"USAGE\",\"description\":\"Usage\",\"app_enabled\":\"0\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1009,\"messages\":[\"Unable to parse body\"],\"response\":null}\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":1008,\"messages\":[\"Unable to fetch body\"],\"response\":null}\n\n### Get material_types [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"code\":\"DELIVERY\",\"description\":\"Delivery\",\"app_enabled\":\"0\"},{\"code\":\"ORDER\",\"description\":\"Order\",\"app_enabled\":\"0\"},{\"code\":\"PICKUP\",\"description\":\"Pick-up\",\"app_enabled\":\"0\"},{\"code\":\"USAGE\",\"description\":\"Usage\",\"app_enabled\":\"0\"}]}\n                                                \n## workstatusses [/workstatusses/{?token,software_token}]\n\nThis api is used to sync workstatusses with WorkorderApp.\n\nEach workstatusses record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| sta_code                  | Code                              | Y        | Varchar (255) | \n| sta_name                  | Name                              | Y        | Varchar (255) | \n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add workstatusses [POST]\n\n\n+ Request workstatusses data posted. `response` will contain the amount of statusses synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"sta_code\": \"002\",\n                  \"sta_name\": \"In progress\"\n                },\n                {\n                  \"sta_code\": \"001\",\n                  \"sta_name\": \"Waiting for customer\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n            \n+ Request Required value missing. (application/json)\n\n    + Body\n        \n            \n            [\n                {\n                  \"sta_name\": \"In progress\"\n                },\n                {\n                  \"sta_code\": \"001\",\n                  \"sta_name\": \"Waiting for customer\"\n                }\n              ]\n        \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 2501,\n              \"messages\": [\n                \"Required field missing: sta_code\"\n              ],\n              \"response\": null\n            }\n\n+ Request Unparsable JSON body posted (application/json)\n\n    + Body\n    \n            [\n                {\n                  \"sta_code\"\": \"002\",\n                  \"sta_name\": \"In progress\"\n                },\n                {\n                  \"sta_code\": \"001\",\n                  \"sta_name\": \"Waiting for customer\"\n                }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1009,\n              \"messages\": [\n                \"Unable to parse body\"\n              ],\n              \"response\": null\n            }\n  \n+ Request Empty body posted (application/json)\n\n    + Body\n            \n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 1008,\n              \"messages\": [\n                \"Unable to fetch body\"\n              ],\n              \"response\": null\n            }\n\n### Get workstatusses [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\": [\n                {\n                  \"sta_code\": \"002\",\n                  \"sta_name\": \"In progress\"\n                },\n                {\n                  \"sta_code\": \"001\",\n                  \"sta_name\": \"Waiting for customer\"\n                }\n              ] \n            }\n            \n            \n## addresses [/addresses/{?token,software_token}]\n\nThis api is used to sync addresses with WorkorderApp. An address should always be related to a certain client and can have a main contact person associated with it.\n`adr_code` is used as a unique reference to either insert or update the address. \n\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| adr_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| adr_code                  | Unique code of the address. Used as reference in the workorder.             | Y        | Varchar (255) |\n| adr_cpn_code              | Contact person code of the address                                          | N        | Varchar (255) |\n| adr_line_1                | Address line. Usually street and number.                                    | Y        | Varchar (255) |\n| adr_zip                   | Zipcode of the address                                                      | Y        | Varchar (255) |\n| adr_city                  | City of the adress                                                          | Y        | Varchar (255) |\n| adr_country               | Country of the address                                                      | N        | Varchar (255) |\n| adr_remark                | Remark of the address                                                       | N        | Varchar (255) |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add addresses [POST]\n\n\n+ Request addresses data posted. `response` will contain the amount of addresses synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [ \n                  { \n                     \"adr_debtor_nr\":\"2082092\",\n                     \"adr_code\":\"1\",\n                     \"adr_cpn_code\":\"3\",\n                     \"adr_line_1\":\"Zonnebaan 9\",\n                     \"adr_zip\":\"3542 AA\",\n                     \"adr_city\":\"Utrecht\",\n                     \"adr_country\":\"Nederland\",\n                     \"adr_remark\":\"Crediteurenadministratie\"\n                  },\n                  { \n                     \"adr_debtor_nr\":\"82\",\n                     \"adr_code\":\"2\",\n                     \"adr_cpn_code\":\"3\",\n                     \"adr_line_1\":\"Zonnebaan 22\",\n                     \"adr_zip\":\"3542 EE\",\n                     \"adr_city\":\"Utrecht\",\n                     \"adr_country\":\"Nederland\",\n                     \"adr_remark\":\"\"\n                  }\n               ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}\n             \n\n### Get addresses [GET]\n\n\n+ Response 200 (application/json)\n \n    + Body\n\n            { \n               \"code\":200,\n               \"messages\":[ \n\n               ],\n               \"response\":[ \n                  { \n                     \"adr_debtor_nr\":\"2082092\",\n                     \"adr_code\":\"1\",\n                     \"adr_cpn_code\":\"3\",\n                     \"adr_line_1\":\"Zonnebaan 9\",\n                     \"adr_zip\":\"3542 AA\",\n                     \"adr_city\":\"Utrecht\",\n                     \"adr_country\":\"Nederland\",\n                     \"adr_remark\":\"Crediteurenadministratie\"\n                  },\n                  { \n                     \"adr_debtor_nr\":\"82\",\n                     \"adr_code\":\"2\",\n                     \"adr_cpn_code\":\"3\",\n                     \"adr_line_1\":\"Zonnebaan 22\",\n                     \"adr_zip\":\"3542 EE\",\n                     \"adr_city\":\"Utrecht\",\n                     \"adr_country\":\"Nederland\",\n                     \"adr_remark\":\"\"\n                  }\n               ]\n            }\n\n## address [/address/?token={token}&software_token={software_token}&key={key}&value={value}]\n\nThis api is used to fetch addresses based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2\n\n### Get objects by filter [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n               \"response\":[ \n                  { \n                     \"adr_debtor_nr\":\"2082092\",\n                     \"adr_code\":\"1\",\n                     \"adr_cpn_code\":\"3\",\n                     \"adr_line_1\":\"Zonnebaan 9\",\n                     \"adr_zip\":\"3542 AA\",\n                     \"adr_city\":\"Utrecht\",\n                     \"adr_country\":\"Nederland\",\n                     \"adr_remark\":\"Crediteurenadministratie\"\n                  },\n                  { \n                     \"adr_debtor_nr\":\"82\",\n                     \"adr_code\":\"2\",\n                     \"adr_cpn_code\":\"3\",\n                     \"adr_line_1\":\"Zonnebaan 22\",\n                     \"adr_zip\":\"3542 EE\",\n                     \"adr_city\":\"Utrecht\",\n                     \"adr_country\":\"Nederland\",\n                     \"adr_remark\":\"\"\n                  }\n               ]\n            }\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + key (array,optional) ... Filter column, can be any of the allowed parameters.\n    + value (array,optional) ... Filter value.\n\n## contactpersons [/contactpersons/{?token,software_token}]\n\nThis api is used to sync contact persons with WorkorderApp. A contact person should always be related to a certain client.\n`cpn_code` is used as a unique reference to either insert or update the address. \n\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| cpn_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| cpn_code                  | Unique code of the contact person. Used as reference in the workorder.      | Y        | Varchar (255) |\n| cpn_name                  | Name of the contact person.                                                 | Y        | Varchar (255) |\n| cpn_phone                 | Phone of the contact person.                                                | N        | Varchar (255) |\n| cpn_email                 | Email of the contact person.                                                | N        | Varchar (255) |\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n\n### Add contact persons [POST]\n\n\n+ Request contact persons data posted. `response` will contain the amount of contact persons synced with WorkOrderApp (application/json)\n\n    + Body\n    \n            [ \n              { \n                \"cpn_debtor_nr\":\"82\",\n                \"cpn_code\":\"1\",\n                \"cpn_name\":\"Hans\",\n                \"cpn_phone\":\"020 2298144\",\n                \"cpn_email\":\"email@email.com\"\n              }\n            ]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":1}\n             \n### Get contact persons [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            { \n               \"code\":200,\n               \"messages\":[ \n    \n               ],\n               \"response\":[ \n                  { \n                    \"cpn_debtor_nr\":\"82\",\n                    \"cpn_code\":\"1\",\n                    \"cpn_name\":\"Hans\",\n                    \"cpn_phone\":\"020 2298144\",\n                    \"cpn_email\":\"email@email.com\"\n                  }\n               ]\n            }\n\n## contactperson [/contactperson/?token={token}&software_token={software_token}&key={key}&value={value}]\n\nThis api is used to fetch contactpersons based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2\n\n### Get objects by filter [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\n              \"code\": 200,\n              \"messages\": [],\n              \"response\":[ \n                  { \n                    \"cpn_debtor_nr\":\"82\",\n                    \"cpn_code\":\"1\",\n                    \"cpn_name\":\"Hans\",\n                    \"cpn_phone\":\"020 2298144\",\n                    \"cpn_email\":\"email@email.com\"\n                  }\n               ]\n            }\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + key (array,optional) ... Filter column, can be any of the allowed parameters.\n    + value (array,optional) ... Filter value.\n\n\n          \n## invoices [/invoices/?token={token}&software_token={software_token}&key={key}&value={value}&operator={operator}]\n\nThis api is used to fetch generated invoices from WorkorderApp.  \n\nThe result can be filtered by using the advanced filter. As described in the introduction section.\n\n| Parameter                 | Description                                                                                           |\n|---------------------------|-------------------------------------------------------------------------------------------------------|\n| inv_id                    | Unique invoice ID  number of the invoice                                                              |\n| inv_worksheet_id          | Worksheet ID that is used to generate this invoice                                                    |\n| inv_quo_id                | Quotation ID that is used to generate this invoice                                                    |\n| inv_inv_id                | Parent invoice ID. Used when creating a credit invoice.                                               |\n| inv_type                  | Invoice type, can be DEBIT, CREDIT, CONCEPT_DEBIT or CONCEPT_CREDIT                                   |\n| inv_currency_code         | ISO 4217 currency code                                                                                |\n| inv_currency_symbol       | Currency symbol shown in the UI                                                                       |\n| inv_description           | Description of the invoice                                                                            |\n| inv_invoice_debtor_nr     | Debtor number of the assigned relation                                                                |\n| inv_invoice_debtor_name   | Debtor name of the assigned relation                                                                  |\n| inv_invoice_debtor_email  | Debtor e-mail of the assigned relation                                                                |\n| inv_number_numeric        | Invoice number numeric value                                                                          |\n| inv_number_formatted      | Pretty formatted invoice number                                                                       |\n| inv_status                | Invoice status, can be OPEN, PAYED, OVERDUE, REMINDER_1, REMINDER_2, REMINDER_3 or ...                |\n| inv_reference             | Reference, example purchase order number workorder number                                             |\n| inv_date                  | Invoice date                                                                                          |\n| inv_due_date              | Invoice due date                                                                                      |\n| inv_due_days              | Amount of due days. This days are added to the inv_date to calculate the inv_due_date.                |\n| inv_terms                 | Terms shown in the footer of the PDF.                                                                 |\n| inv_header                | Header shown on top of the PDF.                                                                       |\n| inv_amount                | Total amount including VAT.                                                                           |\n| inv_amount_excl           | Total amount excluding VAT.                                                                           |\n| inv_balance               | Total amounts of the transactions registered to this invoice.                                         |\n| inv_user_create           | User who created this invoice                                                                         |\n| inv_user_mutate           | User who mutated this invoice                                                                         |\n| inv_user_send             | User who marked this invoice as send.                                                                 |\n| inv_timestamp_create      | Timestamp of creation                                                                                 |\n| inv_timestamp_mutate      | Timestamp of mutating                                                                                 |\n| inv_timestamp_payed       | Timestamp when the invoice was marked as payed (inv_amount equal to inv_balance)                      |\n| inv_timestamp_send        | Timestamp of marking the invoice as send.                                                             |\n| iln_lines                 | Array of invoice lines.                                                                               |\n| invoice_debtor            | Invoice debtor.                                                                                       |\n| pdf                       | Temporary PDF url.                                                                                    |\n| ubl                       | Temporary ubl 2.0 url.                                                                                |\n    \n\nInvoice line parameters\n\n| Parameter             | Description                                      |\n|-----------------------|--------------------------------------------------|\n| iln_id                | Line ID                                          |\n| iln_inv_id            | Invoice Id                                       |\n| iln_order             | Position of the line                             |\n| iln_material_code     | Material code                                    |\n| iln_material_hourtype | Hourtype code                                    |\n| iln_description       | Line description                                 |\n| iln_amount            | Line amount                                      |\n| iln_price             | Item price                                       |\n| iln_vat_percentage    | Vat percentage                                   |\n| iln_discount          | Discount percentage                              |\n| iln_total             | Total price excluding vat and discount           |\n| iln_total_discount    | Calculated discount amount                       |\n| iln_total_vat         | Calculated vat amount                            |\n| iln_total_excl        | Total price excluding vat and including discount |\n| iln_total_incl        | Total price including vat and including discount |\n\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + key (string, optional, `inv_number_formatted`) ... Key that is matched to the value by the operator\n    + value (integer, optional, `2018-00005`) ... value that is matched to the key by the operator \n    + operator (string, optional, `gt`) ... Operator used to compare the value the key \n    \n### Get invoice [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"inv_id\":\"164\",\"inv_worksheet_id\":null,\"inv_quo_id\":null,\"inv_inv_id\":null,\"inv_type\":\"DEBIT\",\"inv_currency_code\":\"EUR\",\"inv_currency_symbol\":\"\\u20ac\",\"inv_description\":\"\",\"inv_invoice_debtor_nr\":\"1010101010228\",\"inv_invoice_debtor_name\":\"van Arragon Bouw\",\"inv_invoice_debtor_email\":\"yoran122@hotmail.com\",\"inv_number_numeric\":\"1\",\"inv_number_formatted\":\"2018-00001\",\"inv_status\":\"REMINDER_1\",\"inv_reference\":\"\",\"inv_date\":\"2018-07-31\",\"inv_due_date\":\"2018-08-14\",\"inv_due_days\":\"14\",\"inv_terms\":\"<p>We verzoeken u vriendelijk het bovenstaande bedrag voor 2018-08-14 te voldoen op onze bankrekening onder vermelding van het factuurnummer 2018-00001.<\\/p>\\r\\n\",\"inv_header\":\"<p>PTS<br \\/>\\r\\nMandenmakerslaan 58<br \\/>\\r\\n3454DE, De meern<br \\/>\\r\\nNederland<br \\/>\\r\\nKvk: 4243234478<br \\/>\\r\\nBtw: NL012356278.b01<\\/p>\\r\\n\",\"inv_amount\":\"43.56\",\"inv_amount_excl\":\"36.00\",\"inv_balance\":\"0.00\",\"inv_user_create\":\"Provide\",\"inv_user_mutate\":\"\",\"inv_user_send\":\"Provide\",\"inv_timestamp_create\":\"2018-07-31 07:49:44\",\"inv_timestamp_mutate\":null,\"inv_timestamp_payed\":null,\"inv_timestamp_send\":\"2018-07-31 07:49:56\",\"iln_lines\":[{\"iln_id\":\"1883\",\"iln_inv_id\":\"164\",\"iln_order\":\"0\",\"iln_material_code\":\"00000001\",\"iln_material_hourtype\":null,\"iln_description\":\"test kostenplaats\",\"iln_amount\":\"2.00\",\"iln_price\":\"20.00\",\"iln_vat_percentage\":\"21.00\",\"iln_discount\":\"10.00\",\"iln_total\":\"40.00\",\"iln_total_discount\":\"4.00\",\"iln_total_vat\":\"7.56\",\"iln_total_excl\":\"36.00\",\"iln_total_incl\":\"43.56\"}],\"invoice_debtor\":{\"ind_name\":\"van Arragon Bouw\",\"ind_debiteur_number\":\"1010101010228\",\"ind_street\":\"Amerikalaan 639\",\"ind_zip\":\"3526VZ\",\"ind_city\":\"Utrecht\",\"ind_country\":\"\",\"ind_contact\":\"yoran van ar\",\"ind_phone\":\"0646321418\",\"ind_email\":\"yoran122@hotmail.com\"},\"pdf\":\"https:\\/\\/www.wba-werkbonapp.nl\\/files\\/2ba6c8fd4294926531464e1b73ada1856ffb659bc6904fd7bff9e4932eaece0c\\/36c5b230e0ff666199f8fbd0b9e1d5be505da32f70520c2dfcb0a06ade001908db7c1d0900c9fb01bed3e0e6354f5aeb4b1ecfa573ce5c6f7b476ebd12e024bc0efd2e450df745ce3118d0413340522c86ad5acfca017e61a7ed31a69b2cf9ee\\/72ae615104118cbf6549d19046cdc56c65a5a42f10edd21e914cd95394d2d594\\/608a7ba4894f913f1a218122617194c7f700b19238ff1e23b435aebeaabe977d\\/92ad26aa8ff0f6c286a2f69e7b4d48ced1bc599b6eef2fe14dbb1cd8743ad3f0688610e69788f4e7c823713a0abfeeebb69d6383442fc934544512bba5e6bdeb\\/7431a2d509c15d3cebd10ef377f9bde83f1640cf8b5129615c61bbbcb07d5757\\/272cf7f4892038a4c839d737a63e19ba814b2a649d443e36031eead31e0942bc4d3ee859b1d802210696c7e9db4e8882b1c79aaa4eea87b81d9cd83d90d5888ed6bbc11f432763e9e3bfd6ab350d6a6257830e2d3e9e8fae50317f363830d0c18afc2448eb4d24d9fa753f39effa2701058892d0191b6ac4aa1c5a68f40a9c44eefe275eb378df6a45c7262898879444c6daaacc0f27984ce62a2b552fd04910d0206a977590eca758e035562905f91efe4cc456ac5232dce0d0e31d9c4521292ea486307c50eb4e2d2510df8b5a1b7e41cd584aa3c710024ef1faf6b4d4c78fad5aaa098a03f7b0dfe4d27f18167f7e24ffd9055f6f26aa2bd7518b74946dbc\\/invoicepdf.php\",\"ubl\":\"https:\\/\\/www.wba-werkbonapp.nl\\/files\\/f059865c12c1c91bc0bd2fba97d622502076304c9a7cbb322638f96b52aa3e89\\/570bf48bebda4a3881a08a020c74793cc924ccdcbe62d6bdd5024bb765517490db7c1d0900c9fb01bed3e0e6354f5aeb4b1ecfa573ce5c6f7b476ebd12e024bc0efd2e450df745ce3118d0413340522c86ad5acfca017e61a7ed31a69b2cf9ee\\/b9cbbbd12b330a8e7dd7d46c1513a2671ccee2d2c0716cf953e2e6751d28e8e5\\/605fee22609e1a401e420d9cc0707a925930e24cf5f06e19b82ae4372af36e32\\/60c21fd4c1b746ec723f513373bf61121936d3642b8ab7ea3566487db874d8db688610e69788f4e7c823713a0abfeeebb69d6383442fc934544512bba5e6bdeb\\/6e4f99f1dd601ad5b1e27234105dd2d6fbcce86d70a188968b87685813516f37\\/0dc9bf292d736d2d2a5e22a8c1e92b52538579e38ca0ce8f1d260d06e96750ba4d3ee859b1d802210696c7e9db4e8882b1c79aaa4eea87b81d9cd83d90d5888e80fbda037c5eeb269a3dfb68c2d51f778e9bea26e746bd6e48f82ecc5d14b1dfc3e0c512b2036a02115e1f96a68ec47f45dcaec870fdbcaad0ba540db0cd8cf8e15fec4d19b194bd220c523a9f7524a4a4e8e3c5133b07d80f822c8aac04dea2bffff201bfea5a480474f5a393f166d16e1c8ae033f285503d45b1a24acedd90b6dbf0eb15c3ed460b2fc9f98865707939e90ed8ff8511d7978930d7b21b147e\\/invoicepdf.php\"}]}\n                 \n## transactions [/transactions/?token={token}&software_token={software_token}&key={key}&value={value}&value={value}&operator={operator}44]\n\nThis api is used to fetch a single generated invoice from WorkorderApp.  \n\nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1&operator=gt\nAdding multiple filters: &key[]=key1&value[]=value1&operator[]=eq&key[]=key2&value[]=value2&operator[]=gt\n\nFollowing operators are allowed:\n| Operator | Description                 |\n|----------|-----------------------------|\n| li       | Like (%)                    |\n| eq       | Equal (=)                   |\n| ne       | Not equal (!=)              |\n| gt       | Greather than (>)           |\n| ge       | Greather than or equal (>=) |\n| lt       | Less than  (<)              |\n| le       | Less than or equal (<=)     |\n \n\nTransaction parameters. The invoice id of a transaction transaction can be empty if a transaction is not assigned to an invoice. Once it is assigned the balance of the invoice will be adjusted.\n\n| Paramter                    | Description                                | Type         |\n|-----------------------------|--------------------------------------------|--------------|\n| int_inv_id                  | Invoice ID                                 | int(11)      |\n| int_transaction_id          | Transaction ID                             | varchar(255) |\n| int_external_transaction_id | External Transaction ID                    | varchar(255) |\n| int_description             | Transaction Description                    | varchar(255) |\n| int_amount                  | Transaction amount                         | decimal(7,2) |\n| int_type                    | Transaction type                           | varchar(255) |\n| int_type_description        | Transaction type description               | varchar(255) |\n| int_status                  | Transaction status,NEW or PROCESSED        | varchar(55)  |\n| int_user                    | User/entity who registered the transaction | varchar(255) |\n| int_timestamp               | Timestamp registered                       | timestamp    |\n\n\n+ Parameters\n    + token (string,required ,`0f24d1e07c8609c0fb111fbcc168f9aaa`) ... WorkorderApp customer token\n    + software_token (string,required , `c316c4532fa7cccdcd572491d9552f80945a51366`) ... WorkorderApp external software token\n    + key (string, optional, `int_transaction_id`) ... Key that is matched to the value by the operator\n    + value (integer, optional, `0000009CSD572CE75E21119`) ... value that is matched to the key by the operator \n    + operator (string, optional, `eq`) ... Operator used to compare the value the key \n    \n### Get transactions [GET]\n\n+ Response 200 (application/json)\n \n    + Body\n\n            {\"code\":200,\"messages\":[],\"response\":[{\"int_inv_id\":null,\"int_transaction_id\":\"0000009CSD572CE75E21119\",\"int_external_transaction_id\":\"RABO1212348797128314512435\",\"int_description\":\"Bank transaction\",\"int_amount\":\"100.43\",\"int_type\":\"BANK\",\"int_type_description\":\"\",\"int_user\":\"Fremke\",\"int_timestamp\":\"2018-07-31 11:33:45\"},{\"int_inv_id\":\"164\",\"int_transaction_id\":\"0000009B601572CE75E21111\",\"int_external_transaction_id\":\"\",\"int_description\":\"Cash transaction\",\"int_amount\":\"50.00\",\"int_type\":\"CASH\",\"int_type_description\":\"\",\"int_user\":\"Femke\",\"int_timestamp\":\"2018-07-31 13:22:38\"},{\"int_inv_id\":\"164\",\"int_transaction_id\":\"0000005B601172CE75E21418\",\"int_external_transaction_id\":\"IZETTLE5415642351431123231\",\"int_description\":\"iZettle payment\",\"int_amount\":\"121.00\",\"int_type\":\"iZettle\",\"int_type_description\":\"\",\"int_user\":\"Femke\",\"int_timestamp\":\"2018-07-31 09:36:18\"}]}\n            \n     \n### Add transactions [POST]\n\n\n+ Request Transaction data posted. (application/json)\n\n    + Body\n    \n            [{\"int_inv_id\":null,\"int_transaction_id\":\"0000009CSD572CE75E21119\",\"int_external_transaction_id\":\"RABO1212348797128314512435\",\"int_description\":\"Bank transaction\",\"int_amount\":\"100.43\",\"int_type\":\"BANK\",\"int_type_description\":\"\",\"int_user\":\"Fremke\",\"int_timestamp\":\"2018-07-31 11:33:45\"},{\"int_inv_id\":\"164\",\"int_transaction_id\":\"0000009B601572CE75E21111\",\"int_external_transaction_id\":\"\",\"int_description\":\"Cash transaction\",\"int_amount\":\"50.00\",\"int_type\":\"CASH\",\"int_type_description\":\"\",\"int_user\":\"Femke\",\"int_timestamp\":\"2018-07-31 13:22:38\"},{\"int_inv_id\":\"164\",\"int_transaction_id\":\"0000005B601172CE75E21418\",\"int_external_transaction_id\":\"IZETTLE5415642351431123231\",\"int_description\":\"iZettle payment\",\"int_amount\":\"121.00\",\"int_type\":\"iZettle\",\"int_type_description\":\"\",\"int_user\":\"Femke\"}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\n                \"code\": 200,\n                \"messages\": [],\n                \"response\": [\n                    {\n                        \"int_inv_id\": null,\n                        \"int_transaction_id\": \"0000005B6962EBA840119\",\n                        \"int_external_transaction_id\": \"RABO1212348797128314512435\",\n                        \"int_description\": \"Bank transaction\",\n                        \"int_amount\": \"100.43\",\n                        \"int_type\": \"BANK\",\n                        \"int_type_description\": \"\",\n                        \"int_status\": \"PROCESSED\",\n                        \"int_user\": \"OpenAPI\",\n                        \"int_timestamp\": \"2018-07-31 11:33:45\"\n                    },\n                    {\n                        \"int_inv_id\": \"164\",\n                        \"int_transaction_id\": \"0000005B6962EBA8BD116419\",\n                        \"int_external_transaction_id\": \"\",\n                        \"int_description\": \"Cash transaction\",\n                        \"int_amount\": \"50.00\",\n                        \"int_type\": \"CASH\",\n                        \"int_type_description\": \"\",\n                        \"int_status\": \"PROCESSED\",\n                        \"int_user\": \"OpenAPI\",\n                        \"int_timestamp\": \"2018-07-31 13:22:38\"\n                    },\n                    {\n                        \"int_inv_id\": \"164\",\n                        \"int_transaction_id\": \"0000005B6962EBA9B7116419\",\n                        \"int_external_transaction_id\": \"IZETTLE5415642351431123231\",\n                        \"int_description\": \"iZettle payment\",\n                        \"int_amount\": \"121.00\",\n                        \"int_type\": \"iZettle\",\n                        \"int_type_description\": \"\",\n                        \"int_status\": \"PROCESSED\",\n                        \"int_user\": \"OpenAPI\",\n                        \"int_timestamp\": \"2018-08-07 11:14:19\"\n                    }\n                ]\n            }\n            \n            \n### Update transactions [PUT]\n\n+ Request Transaction data posted. `response` will contain the amount of transactions affected. The request should contain int_transaction_id or int_external_transaction_id as a reference to update.(application/json)\n\n    + Body\n    \n            [{\"int_transaction_id\":\"0000009CSD572CE75E21119\",\"int_inv_id\":\"164\"},{\"int_external_transaction_id\":\"IZETTLE5415642351431123231\",\"int_inv_id\":null}]\n            \n+ Response 200 (application/json)\n \n    + Body\n    \n            {\"code\":200,\"messages\":[],\"response\":2}",
    "docsUrl": "",
    "url": "http://example.com",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "http://example.com",
                    "https://www.werkbonapp.nl/openapi/8",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "Getemployees": {
            "main": "./lib/triggers/Getemployees.js",
            "title": "Get employees",
            "description": "This api is used to get or edit employees in WorkorderApp.\nEach employee record can contain the following data:\n\n| Parameter  | Required | Type (size)   |\n|------------|----------|---------------|\n| firstname  | Y        | Varchar (255) |\n| lastname   | Y        | Varchar (255) |\n| number     | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getemployees.in.json",
                "out": "./lib/schemas/Getemployees.out.json"
            }
        },
        "Getprojects": {
            "main": "./lib/triggers/Getprojects.js",
            "title": "Get projects",
            "description": "This api is used to sync external projects with WorkorderApp.\nEach project record can contain the following data:\n\n| Parameter        | Required | Type (size)     |\n|------------------|----------|-----------------|\n| code             | Y        | Varchar (255)   |\n| code_ext         | N        | Varchar (255)   |\n| debtor_number    | Y        | Varchar (255)   |\n| status           | Y        | Varchar (255)   |\n| name             | Y        | Varchar (255)   |\n| description      | N        | Text            |\n| progress         | N        | Integer         |\n| date_start       | Y        | Varchar (255)   |\n| date_end         | N        | Varchar (255)   |\n| active           | N        | Integer (1 or 0)|",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getprojects.in.json",
                "out": "./lib/schemas/Getprojects.out.json"
            }
        },
        "Getprojects1": {
            "main": "./lib/triggers/Getprojects1.js",
            "title": "Get projects",
            "description": "This api is used to sync external projects with WorkorderApp.\nEach project record can contain the following data:\n\n| Parameter        | Required | Type (size)     |\n|------------------|----------|-----------------|\n| code             | Y        | Varchar (255)   |\n| code_ext         | N        | Varchar (255)   |\n| debtor_number    | Y        | Varchar (255)   |\n| status           | Y        | Varchar (255)   |\n| name             | Y        | Varchar (255)   |\n| description      | N        | Text            |\n| progress         | N        | Integer         |\n| date_start       | Y        | Varchar (255)   |\n| date_end         | N        | Varchar (255)   |\n| active           | N        | Integer (1 or 0)|",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getprojects1.in.json",
                "out": "./lib/schemas/Getprojects1.out.json"
            }
        },
        "Gettasks": {
            "main": "./lib/triggers/Gettasks.js",
            "title": "Get tasks",
            "description": "This api is used to sync external projects with WorkorderApp.\nEach project record can contain the following data:\n\n| Parameter        | Required | Type (size)     |\n|------------------|----------|-----------------|\n| code             | Y        | Varchar (255)   |\n| code_ext         | N        | Varchar (255)   |\n| debtor_number    | Y        | Varchar (255)   |\n| status           | Y        | Varchar (255)   |\n| name             | Y        | Varchar (255)   |\n| description      | N        | Text            |\n| progress         | N        | Integer         |\n| date_start       | Y        | Varchar (255)   |\n| date_end         | N        | Varchar (255)   |\n| active           | N        | Integer (1 or 0)|",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Gettasks.in.json",
                "out": "./lib/schemas/Gettasks.out.json"
            }
        },
        "GetNextNumber": {
            "main": "./lib/triggers/GetNextNumber.js",
            "title": "Get Next Number",
            "description": "This api is used to sync external projects with WorkorderApp.\nEach project record can contain the following data:\n\n| Parameter        | Required | Type (size)     |\n|------------------|----------|-----------------|\n| code             | Y        | Varchar (255)   |\n| code_ext         | N        | Varchar (255)   |\n| debtor_number    | Y        | Varchar (255)   |\n| status           | Y        | Varchar (255)   |\n| name             | Y        | Varchar (255)   |\n| description      | N        | Text            |\n| progress         | N        | Integer         |\n| date_start       | Y        | Varchar (255)   |\n| date_end         | N        | Varchar (255)   |\n| active           | N        | Integer (1 or 0)|",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetNextNumber.in.json",
                "out": "./lib/schemas/GetNextNumber.out.json"
            }
        },
        "Getcategories": {
            "main": "./lib/triggers/Getcategories.js",
            "title": "Get categories",
            "description": "This api is used to categories with WorkorderApp.\nEach category record can contain the following data:\n\n| Parameter                 | Description                                   | Required | Type (size)   |\n|---------------------------|-----------------------------------------------|----------|---------------|\n| cat_code                  | Category code                                 | Y        | Varchar (255) |\n| cat_cat_code              | Parent category code part                     | N        | Varchar (255) |\n| cat_name                  | Category name                                 | Y        | Varchar (255) |\n| cat_image                 | Url of the image. POST: An external url should be provided.  GET: You will receive a workorderapp url.     | N        | Varchar (255)      |\n| cat_display               | Indication if the category should be displayed| Y        | Int (10)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getcategories.in.json",
                "out": "./lib/schemas/Getcategories.out.json"
            }
        },
        "Getcategoriesbyfilter": {
            "main": "./lib/triggers/Getcategoriesbyfilter.js",
            "title": "Get categories by filter",
            "description": "This api is used to fetch category based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getcategoriesbyfilter.in.json",
                "out": "./lib/schemas/Getcategoriesbyfilter.out.json"
            }
        },
        "Gethourtypes": {
            "main": "./lib/triggers/Gethourtypes.js",
            "title": "Get hourtypes",
            "description": "This api is used to sync external hourtypes with WorkorderApp.\nEach hourtype record can contain the following data:\n\n| Parameter        | Required | Type (size)         |\n|------------------|----------|---------------------|\n| code             | Y        | Varchar (255)       |\n| name             | Y        | Varchar (255)       |\n| cost_booking     | Y        | Integer (1 or 0)    |\n| sale_booking     | Y        | Integer (1 or 0)    |\n| sale_price       | Y        | Decimal (> 0)       |\n| cost_price       | N        | Decimal (> 0)       | \n| active           | N        | Integer (1 or 0)    |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Gethourtypes.in.json",
                "out": "./lib/schemas/Gethourtypes.out.json"
            }
        },
        "Getmaterialcategories": {
            "main": "./lib/triggers/Getmaterialcategories.js",
            "title": "Get material categories",
            "description": "This api is used to sync material categories with WorkorderApp.\nEach material_categories record can contain the following data:\n\n| Parameter                 | Description                                   | Required | Type (size)   |\n|---------------------------|-----------------------------------------------|----------|---------------|\n| mct_mat_code              | Material code                                 | Y        | Varchar (255) |\n| mct_cat_code              | Category code                                 | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getmaterialcategories.in.json",
                "out": "./lib/schemas/Getmaterialcategories.out.json"
            }
        },
        "Getrelations": {
            "main": "./lib/triggers/Getrelations.js",
            "title": "Get relations",
            "description": "This api is used to sync external contacts with WorkorderApp.\nEach relation record can contain the following data:\n\n| Parameter        | Required | Type (size)   |\n|------------------|----------|---------------|\n| name             | Y        | Varchar (255) |\n| debtor_number    | Y        | Varchar (255) |\n| contact          | N        | Varchar (255) |\n| phone_number     | N        | Varchar (255) |\n| email            | N        | Varchar (255) |\n| email_workorder  | N        | Varchar (255) |\n| street           | Y        | Varchar (255) |\n| house_number     | N        | Varchar (255) |\n| postal_code      | Y        | Varchar (255) |\n| city             | Y        | Varchar (255) |\n| remark           | N        | Text (64kb)   |\n| latitude         | N        | Float (10,6)  |\n| longitude        | N        | Float (10,6)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getrelations.in.json",
                "out": "./lib/schemas/Getrelations.out.json"
            }
        },
        "Getmaterials": {
            "main": "./lib/triggers/Getmaterials.js",
            "title": "Get materials",
            "description": "This api is used to sync materials with WorkorderApp.\nEach material record can contain the following data:\n\n| Parameter    | Required | Type (size)   |\n|--------------|----------|---------------|\n| code         | Y        | Varchar (255) |\n| description  | Y        | Text (64kb)   |\n| price        | Y        | Decimal       |\n| unit         | Y        | Varchar (255) |\n| eancode      | N        | Varchar (55)  |\n| barcode      | N        | Varchar (55)  |\n| freefield1   | N        | Varchar (255) |\n| freefield2   | N        | Varchar (255) |\n| freefield3   | N        | Varchar (255) |\n| freefield4   | N        | Varchar (255) |\n| freefield5   | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getmaterials.in.json",
                "out": "./lib/schemas/Getmaterials.out.json"
            }
        },
        "Getvalues": {
            "main": "./lib/triggers/Getvalues.js",
            "title": "Get values",
            "description": "This api is used to sync materials with WorkorderApp.\nEach material record can contain the following data:\n\n| Parameter    | Required | Type (size)   |\n|--------------|----------|---------------|\n| code         | Y        | Varchar (255) |\n| description  | Y        | Text (64kb)   |\n| price        | Y        | Decimal       |\n| unit         | Y        | Varchar (255) |\n| eancode      | N        | Varchar (55)  |\n| barcode      | N        | Varchar (55)  |\n| freefield1   | N        | Varchar (255) |\n| freefield2   | N        | Varchar (255) |\n| freefield3   | N        | Varchar (255) |\n| freefield4   | N        | Varchar (255) |\n| freefield5   | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getvalues.in.json",
                "out": "./lib/schemas/Getvalues.out.json"
            }
        },
        "Getforms": {
            "main": "./lib/triggers/Getforms.js",
            "title": "Get forms",
            "description": "This api is used to sync external forms with WorkorderApp.\nEach form record can contain the following data:\n\n| Parameter | Description | Required | Type (size) |\n|-----------|--------------------------------------|----------|---------------|\n| name | Name of the form | Y | Varchar (255) |\n| data | JSON data of the form | N | Text (64kb) |\n| template | HTML template to display data in PDF | N | Text (64kb) |\n\nThe `data` parameters contains a JSON encoded representation of the form. The main element is called `fields` and contains an array of JSON objects representing a `field`.\nEach field contains the following data:\n\n| Parameter | Description |\n|-----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| --------------- | ----------------------------------------------------------- |\n| label | The label of the field. |\n| field_type | The Type of the field. Can be `text`, `checkboxes`, `radio` , `dropdown` or `signature`. |\n| required | This field indicates if the field is required to complete. Text: Field is valid a value is filled. Checkboxes: Field is valid when all the boxes are checked. Radio: Field is valid when a option is checked. Dropdown: Field is valid when a option is selected. Signature: Field is valid when a signature is set |\n| cid | Unique indentification of the field. |\n| field_options | Array containing field options. See description below. |\n\nEach field_options contains the following data:\n\n| Parameter | Description |\n|-----------------|-------------------------------------------------------------------------------------------------|\n| --------------- | ----------------------------------------------------------------------------------------------- |\n| options | The options of the field. Used in `checkboxes`, `radio` , `dropdown`. See decription below |\n| value | Value added in `text` field or base64 encoded image in `signature` field. |\n\nEach options contains the following data:\n\n| Parameter     | Description                                                                       |\n|---------------|-----------------------------------------------------------------------------------| \n| checked       | Indicated if options is selected. Used in `checkboxes`, `radio` , `dropdown`.     | \n| label         | Label for the option                                                              |\n\n+ Sample JSON\n    + Text:` {\n      \"label\": \"Serienummer\",\n      \"field_type\": \"text\",\n      \"required\": true,\n      \"field_options\": {\n        \"size\": \"small\",\n        \"value\": \"\"\n      },\n      \"cid\": \"c6\"\n    }` \n    + Radio: ` {\n      \"label\": \"Type pomp\",\n      \"field_type\": \"radio\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"type A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type B\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type C\",\n            \"checked\": false\n          }\n        ]\n      },\n      \"cid\": \"c2\"\n    }`\n    + Checkboxes: ` {\n      \"label\": \"Type pomp\",\n      \"field_type\": \"checkboxes\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"type A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type B\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type C\",\n            \"checked\": false\n          }\n        ]\n      },\n      \"cid\": \"c2\"\n    }`\n    + Dropdown: ` {\n      \"label\": \"Dropdown\",\n      \"field_type\": \"dropdown\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"B\",\n            \"checked\": false\n          }\n        ],\n        \"include_blank_option\": false\n      },\n      \"cid\": \"c10\"\n    }`\n    + Signature: `{\n      \"cid\": \"c5\",\n      \"field_options\": {\n        \"value\": \"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\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW9D/A4B7ViPrMDeYAAAAAElF\\nTkSuQmCC\\n\"\n      },\n      \"field_type\": \"signature\",\n      \"label\": \"Naamloos\",\n      \"required\": true\n    }`",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getforms.in.json",
                "out": "./lib/schemas/Getforms.out.json"
            }
        },
        "TimeSheet_Expenses_Deleteanentity": {
            "main": "./lib/triggers/TimeSheet_Expenses_Deleteanentity.js",
            "title": "TimeSheet - Expenses -  Delete an entity",
            "description": "object will contain the amount of affected rows.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeSheet_Expenses_Deleteanentity.in.json",
                "out": "./lib/schemas/TimeSheet_Expenses_Deleteanentity.out.json"
            }
        },
        "TimeSheet_Expenses_Getexpenses": {
            "main": "./lib/triggers/TimeSheet_Expenses_Getexpenses.js",
            "title": "TimeSheet - Expenses -  Get expenses",
            "description": "This api is used to fetch expenses based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeSheet_Expenses_Getexpenses.in.json",
                "out": "./lib/schemas/TimeSheet_Expenses_Getexpenses.out.json"
            }
        },
        "TimeSheet_Travel_Gettravel": {
            "main": "./lib/triggers/TimeSheet_Travel_Gettravel.js",
            "title": "TimeSheet - Travel - Get travel",
            "description": "This api is used to fetch travel rows based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeSheet_Travel_Gettravel.in.json",
                "out": "./lib/schemas/TimeSheet_Travel_Gettravel.out.json"
            }
        },
        "TimeSheet_Hours_Gethours": {
            "main": "./lib/triggers/TimeSheet_Hours_Gethours.js",
            "title": "TimeSheet - Hours - Get hours",
            "description": "This api is used to fetch hours based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2\n\n\n| Kolom                   | Voorbeeld waarde    | Omschrijving                          |\n|-------------------------|---------------------|---------------------------------------|\n| hrs_id                  | 9                   | Uniek regel ID                        |\n| hrs_cus_id              | 78                  | Klant id niet relevant                |\n| hrs_emp_nr              | 13                  | Medewerkers                           |\n| hrs_order_nr            | null                | Ordernummer van gekoppelde werkbon    |\n| hrs_order_description   | null                | Order omschrijving                    |\n| hrs_period_id           | null                | Uren regel ID                         |\n| hrs_hrt_hour_type       | C                   | Uursoort code                         |\n| hrs_debtor_nr           | null                | Debiteurnummer                        |\n| hrs_project_nr          | null                | Projectnummer                         |\n| hrs_project_activity_nr | null                | Activiteit                            |\n| hrs_date                | 2020-03-03          | Datum                                 |\n| hrs_start               | 09:00:00            | Starttijd                             |\n| hrs_end                 | 17:00:00            | Eindtijd                              |\n| hrs_break               | null                | Pauzetijd in minuten                  |\n| hrs_amount              | 8.00                | Decimaal aantal (Eind - start -pauze) |\n| hrs_billable            | 0                   | Indicatie Facturabel ja of nee        |\n| hrs_status              | 0                   | Status in urenstaat, zie statussen    |\n| hrs_status_project      | 0                   | Status in project, zie statussen      |\n| hrs_description         |                     | Uren omschrijving                     |\n| hrs_date_created        | 2020-02-24 15:31:50 | Datum aangemaakt                      |\n| hrs_date_modified       | null                | Datum aangepast                       |\n| hrs_date_approved       | null                | Datum goedgekeurd                     |\n| hrs_date_rejected       | null                | Datum afgekeurd                       |\n| hrs_created_by          | Administrator             | Aangemaakt door                       |\n| hrs_modified_by         | null                | Aangepast door                        |\n| hrs_approved_by         | null                | Goedgekeurd door                      |\n| hrs_rejected_by         | null                | Afgekeurd door                        |\n| hrs_rejected_reason     | null                | Reden afgekeurd                       |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeSheet_Hours_Gethours.in.json",
                "out": "./lib/schemas/TimeSheet_Hours_Gethours.out.json"
            }
        },
        "Notes_Getnotes": {
            "main": "./lib/triggers/Notes_Getnotes.js",
            "title": "Notes - Get notes",
            "description": "This api is used to fetch notes based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Notes_Getnotes.in.json",
                "out": "./lib/schemas/Notes_Getnotes.out.json"
            }
        },
        "Getlocation": {
            "main": "./lib/triggers/Getlocation.js",
            "title": "Get location",
            "description": "This api is used to get the locations of connected devices from WorkorderApp or post locations for certain identifiers. An identifier can be anything, for example employee nr or license plate. When posting a location the type should be specified.\nPost data should contain an array with objects containing the following parameters:\n\n| Parameter                 | Description                                                       | \n|---------------------------|-------------------------------------------------------------------|  \n| lat                       | Latitude                                                          |  \n| long                      | Longitude                                                         |  \n| identifier                | Unique identifier, for example employee number or license plate.  |  \n| type                      | 0 for employee, 1 for car                                         |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getlocation.in.json",
                "out": "./lib/schemas/Getlocation.out.json"
            }
        },
        "Expensecategories_Get": {
            "main": "./lib/triggers/Expensecategories_Get.js",
            "title": "Expense categories  - Get",
            "description": "This api is used to fetch addresses based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Expensecategories_Get.in.json",
                "out": "./lib/schemas/Expensecategories_Get.out.json"
            }
        },
        "Getworktypes": {
            "main": "./lib/triggers/Getworktypes.js",
            "title": "Get worktypes",
            "description": "This api is used to sync  worktypes with WorkorderApp.\nEach worktype record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| wrt_name                  | Name                              | Y        | Varchar (255) |\n| wrt_description           | Description                       | Y        | Varchar (255) |\n| wrt_default_minutes       | Default minutes used for planning | Y        | Int (10) |\n| wrt_active                | Indicates if worktype is active   | Y        | Int (10)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getworktypes.in.json",
                "out": "./lib/schemas/Getworktypes.out.json"
            }
        },
        "Getpriorities": {
            "main": "./lib/triggers/Getpriorities.js",
            "title": "Get priorities",
            "description": "This api is used to sync priorities with WorkorderApp.\nEach priority record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the priority. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the priority should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getpriorities.in.json",
                "out": "./lib/schemas/Getpriorities.out.json"
            }
        },
        "Geterrors": {
            "main": "./lib/triggers/Geterrors.js",
            "title": "Get errors",
            "description": "This api is used to sync errors with WorkorderApp.\nEach error record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the error. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the error should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Geterrors.in.json",
                "out": "./lib/schemas/Geterrors.out.json"
            }
        },
        "Getsolutions": {
            "main": "./lib/triggers/Getsolutions.js",
            "title": "Get solutions",
            "description": "This api is used to sync solutions with WorkorderApp.\nEach solution record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the solution. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the solution should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getsolutions.in.json",
                "out": "./lib/schemas/Getsolutions.out.json"
            }
        },
        "Getpaymentmethods": {
            "main": "./lib/triggers/Getpaymentmethods.js",
            "title": "Get paymentmethods",
            "description": "This api is used to sync paymentmethods with WorkorderApp.\nEach paymentmethods record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| pmd_description           | Description                       | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getpaymentmethods.in.json",
                "out": "./lib/schemas/Getpaymentmethods.out.json"
            }
        },
        "Getregions": {
            "main": "./lib/triggers/Getregions.js",
            "title": "Get regions",
            "description": "This api is used to sync regions with WorkorderApp.\nEach region record can contain the following data:\n\n| Parameter                 | Description               | Required | Type (size)   |\n|---------------------------|---------------------------|----------|---------------|\n| reg_code                  | Unique code               | Y        | Varchar (255) | \n| reg_name                  | Name of the region.       | Y        | Varchar (255) | \n| reg_zip_start             | Zip start of the region.  | N        | Integer (11) | \n| reg_zip_end               | Zip end of the region.    | N        | Integer (11) | \n| reg_city                  | City of the region.       | N        | Varchar (255) | \n| reg_country               | Country of the region.    | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getregions.in.json",
                "out": "./lib/schemas/Getregions.out.json"
            }
        },
        "Getvehicles": {
            "main": "./lib/triggers/Getvehicles.js",
            "title": "Get vehicles",
            "description": "This api is used to sync vehicles with WorkorderApp.\nEach vehicle record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| veh_license_plate         | Unique  license plate                                                                 | Y        | Varchar (255) | \n| veh_title               | Title of the vehicle | Y        | Varchar (255) | \n| veh_brand               | Brand of the vehicle  | N        | Varchar (255) | \n| veh_model               |  Model of the vehicle| N        | Varchar (255) | \n| veh_type               | Type of the vehicle. | N        | Varchar (255) | \n| veh_image               | Url of the image . POST: An external url should be provided.  GET: You will receive a workorderapp url.    | Y        |   | \n| veh_driver               | Driver of the vehicle. This us a reference to the employee number | N        | Varchar (255) | \n| veh_driving               | Indication if the vehicle is driving. When the value is set to 1 it will be shown in the planbord. | N        | Integer (11) | \n| veh_active               | Indication if the vehicle is active                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getvehicles.in.json",
                "out": "./lib/schemas/Getvehicles.out.json"
            }
        },
        "Getwarehouses": {
            "main": "./lib/triggers/Getwarehouses.js",
            "title": "Get warehouses",
            "description": "This api is used to sync vehicles with WorkorderApp.\nEach vehicle record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| veh_license_plate         | Unique  license plate                                                                 | Y        | Varchar (255) | \n| veh_title               | Title of the vehicle | Y        | Varchar (255) | \n| veh_brand               | Brand of the vehicle  | N        | Varchar (255) | \n| veh_model               |  Model of the vehicle| N        | Varchar (255) | \n| veh_type               | Type of the vehicle. | N        | Varchar (255) | \n| veh_image               | Url of the image . POST: An external url should be provided.  GET: You will receive a workorderapp url.    | Y        |   | \n| veh_driver               | Driver of the vehicle. This us a reference to the employee number | N        | Varchar (255) | \n| veh_driving               | Indication if the vehicle is driving. When the value is set to 1 it will be shown in the planbord. | N        | Integer (11) | \n| veh_active               | Indication if the vehicle is active                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getwarehouses.in.json",
                "out": "./lib/schemas/Getwarehouses.out.json"
            }
        },
        "Getmaterial_types": {
            "main": "./lib/triggers/Getmaterial_types.js",
            "title": "Get material_types",
            "description": "This api is used to sync material types with WorkorderApp.\nEach material type record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the material type.  | Y        | Varchar (255) | \n| app_enabled               | Indication if the material type should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getmaterial_types.in.json",
                "out": "./lib/schemas/Getmaterial_types.out.json"
            }
        },
        "Getworkstatusses": {
            "main": "./lib/triggers/Getworkstatusses.js",
            "title": "Get workstatusses",
            "description": "This api is used to sync workstatusses with WorkorderApp.\nEach workstatusses record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| sta_code                  | Code                              | Y        | Varchar (255) | \n| sta_name                  | Name                              | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getworkstatusses.in.json",
                "out": "./lib/schemas/Getworkstatusses.out.json"
            }
        },
        "Getaddresses": {
            "main": "./lib/triggers/Getaddresses.js",
            "title": "Get addresses",
            "description": "This api is used to sync addresses with WorkorderApp. An address should always be related to a certain client and can have a main contact person associated with it.\n`adr_code` is used as a unique reference to either insert or update the address.\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| adr_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| adr_code                  | Unique code of the address. Used as reference in the workorder.             | Y        | Varchar (255) |\n| adr_cpn_code              | Contact person code of the address                                          | N        | Varchar (255) |\n| adr_line_1                | Address line. Usually street and number.                                    | Y        | Varchar (255) |\n| adr_zip                   | Zipcode of the address                                                      | Y        | Varchar (255) |\n| adr_city                  | City of the adress                                                          | Y        | Varchar (255) |\n| adr_country               | Country of the address                                                      | N        | Varchar (255) |\n| adr_remark                | Remark of the address                                                       | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getaddresses.in.json",
                "out": "./lib/schemas/Getaddresses.out.json"
            }
        },
        "Getaddressesbyfilter": {
            "main": "./lib/triggers/Getaddressesbyfilter.js",
            "title": "Get addresses by filter",
            "description": "This api is used to fetch addresses based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getaddressesbyfilter.in.json",
                "out": "./lib/schemas/Getaddressesbyfilter.out.json"
            }
        },
        "Getparts": {
            "main": "./lib/triggers/Getparts.js",
            "title": "Get parts",
            "description": "This api is now deprecated. Use materials to register the parts of certain objects.\nThis api is used to sync parts with WorkorderApp.\nEach part record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| prt_code                  | Unique code of the parts. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| prt_name                  | Part name/description name                                                                                                             | Y        | Varchar (255) |\n| prt_sup_code              | Supplier code                                                                                                             | Y        | Varchar (255) |\n| prt_value                 | Value of a parts                                                                                                             | Y        | Varchar (255) |\n| prt_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.     | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getparts.in.json",
                "out": "./lib/schemas/Getparts.out.json"
            }
        },
        "Getobjectparts": {
            "main": "./lib/triggers/Getobjectparts.js",
            "title": "Get object parts",
            "description": "This api is used to sync object parts with WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section. Allowed columns: `opr_obj_code` `opr_prt_code` `opr_serial_number`\nEach object_part record can contain the following data:\n\n| Parameter                         | Description                                           | Required | Type (size)   |\n|-----------------------------------|-------------------------------------------------------|----------|---------------|\n| opr_obj_code                      | Object code                                           | Y        | Varchar (255) |\n| opr_prt_code                      | Object part (Artikelcode from items in materials)     | Y        | Varchar (255) |\n| opr_serial_number                 | Serial number of parts used in object                 | N        | Varchar (255) |\n| opr_amount                        | Amount of parts used in object                        | Y        | Int (10)      |\n| opr_timestamp_installation        | Date of installing (Y-m-d)                            | N        | Date       |\n| opr_warranty_months               | Amount of months, used to calculate expiration date.  | N        | Int (10)      |\n| opr_timestamp_warranty_expires    | Warranty expiration date, automatically calculated based on installation date and the warranty months    | N        | Varchar (255)      |\n| val_value_1                       | Freefield value 1                                     | N        | Varchar (255)      |\n| val_value_2  - val_value_20       | Freefield value 2  till 20                            | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getobjectparts.in.json",
                "out": "./lib/schemas/Getobjectparts.out.json"
            }
        },
        "Updateanexistingworkorder": {
            "main": "./lib/triggers/Updateanexistingworkorder.js",
            "title": "Update an existing workorder",
            "description": "This API is used to update an existing workorder. The row_id of workorder_no can be used to identify the specific workorder.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Updateanexistingworkorder.in.json",
                "out": "./lib/schemas/Updateanexistingworkorder.out.json"
            }
        },
        "Getworkorder": {
            "main": "./lib/triggers/Getworkorder.js",
            "title": "Get workorder",
            "description": "A workorder contains the following data:\n\n| Parameter                    | Detail                                                                                                    |\n|------------------------------|-----------------------------------------------------------------------------------------------------------|\n| Id                           | WBA database unique row number                                                                            |\n| WorkorderNo                  | Unique number originated from ERP/CRM                                                                     |\n| Order Nr                     | Unique Workorder number created in tablet app                                                             |\n| WorkDate                     | Scheduled date for work (d-m-Y)                                                                      |\n| WorkTime                     | Scheduled time for work (H:i)                                                                           |\n| WorkEndDate                  | Scheduled end date for work (d-m-Y)                                                                  |\n| WorkEndTime                  | Scheduled end time for work (H:i)                                                                       |\n| ProjectNr                    | Internal Project number                                                                                   |\n| ExternProjectNr              | External Project number                                                                                   |\n| CustomerName                 | Customer name                                                                                             |\n| CustomerDebtorNr             | Customer debtor number                                                                                    |\n| CustomerStreet               | Customer street                                                                                           |\n| CustomerStreetNo             | Customer street number                                                                                    |\n| CustomerEmail                | Customer Email                                                                                            |\n| CustomerZIP                  | Customer zip code                                                                                         |\n| CustomerCity                 | Customer city                                                                                             |\n| CustomerContactPerson        | Customer contact person                                                                                   |\n| CustomerPhone                | Customer phone number                                                                                     |\n| CustomerRemark               | Customer remark                                                                                           |\n| CustomerNameInvoice          | Invoice customer name                                                                                     |\n| CustomerDebtorNrInvoice      | Invoice customer debtor number                                                                            |\n| CustomerStreetInvoice        | Invoice customer street name                                                                              |\n| CustomerStreetNoInvoice      | Invoice customer street number                                                                            |\n| CustomerEmailInvoice         | Invoice customer email                                                                                    |\n| CustomerZIPInvoice           | Invoice customer zip code                                                                                 |\n| CustomerCityInvoice          | Invoice customer city                                                                                     |\n| CustomerContactPersonInvoice | Invoice customer contact person                                                                           |\n| CustomerPhoneInvoice         | Invoice customer phone number                                                                             |\n| CustomerRemarkInvoice        | Invoice customer remark                                                                                   |\n| TypeOfWork                   | Installatie, Garantie, Levering, Onderhoud, Project, Regie, Reparatie,Service, Storing, Verkoop, Verhuur  |\n| WorkDescription              | Work description of executed work                                                                         |\n| WorkInstruction              | Work instructions from ERP / CRM (future use)                                                             |\n| PaymentMethod                | niet van toepassing, op rekening, contact voldaan, pin betaling, conform offerte                          |\n| CreationDate                 | Date time of creation of workorder in WBA backoffice                                                      |\n| EmployeeNr                   | Employee Number                                                                                           |\n| Signature                    | Signature file name                                                                                       |\n| SignatureUrl                 | Url to download/open signature image                                                                      |\n| PdfUrl                       | Url to download/open PDF                                                                                  |\n| WordUrl                      | Url to download/open Word document                                                                        |\n| WorksheetCode                | Unique code to use when retrieving a document                                                             |\n| Status                       | Status of the workorder                                                                                   |\n| WorkFinished                 | Indication if the work is finished. When the value is 1 the employee marked the work ready in the tablet. |\n| Archived                     | Indication if the workorder is archived                                                                   |\n| Photos                       | Array of photo objects (URL's)                                                                            |\n| Workperiods                  | Array of Workperiods                                                                                      |\n| Materials                    | Array of used materials (MaterialNr is amount of materials)                                               |\n| Documents                    | Array of file names                                                                                       |\n| Forms                        | Array of forms. Each row contains Name, Data and ObjectCode                                               |\n| Employees                    | Array of employee numbers.                                                                                |\n| WorkObjects                  | Array of objects codes.                                                                                          |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getworkorder.in.json",
                "out": "./lib/schemas/Getworkorder.out.json"
            }
        },
        "Getworkorders": {
            "main": "./lib/triggers/Getworkorders.js",
            "title": "Get workorders",
            "description": "This api is used to get a list of workorders from WorkorderApp.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getworkorders.in.json",
                "out": "./lib/schemas/Getworkorders.out.json"
            }
        },
        "Getobjectsbyfilter": {
            "main": "./lib/triggers/Getobjectsbyfilter.js",
            "title": "Get objects by filter",
            "description": "This api is used to fetch objects based on a filter. Filters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getobjectsbyfilter.in.json",
                "out": "./lib/schemas/Getobjectsbyfilter.out.json"
            }
        },
        "Getobjects": {
            "main": "./lib/triggers/Getobjects.js",
            "title": "Get objects",
            "description": "This api is used to sync objects with WorkorderApp.\nEach object record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| obj_code                  | Unique code of the object. Used as reference for other entities                                                           | Y        | Varchar (255) |\n| obj_sup_code              | Supplier code. Used as reference to supplier entity                                                                       | N        | Varchar (255) |\n| obj_debiteur_nummer       | Debtor number. Used as reference to customer clients.                                                                     | Y        | Varchar (255) |\n| obj_adr_code              | Address code. Used as a reference to the addres of a customer client.                                                     | N        | Varchar (255) |\n| obj_obj_code              | Parent object code.                                                                                                       | N        | Varchar (255) |\n| obj_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255) |\n| obj_description           | Description of the object                                                                                                 | Y        | Varchar (255) |\n| obj_price                 | Price of the object                                                                                                       | N        | Decimal (7,2) |\n| obj_floor_level           | Floor level of the object                                                                                                 | N        | Int (10)      |\n| obj_location              | Textual description of the location of the object                                                                         | N        | Varchar (255) |\n| obj_latitude              | Latitude of the location of the object                                                                                    | N        | Float (10,6)  |\n| obj_longitude             | Longitude of the location of the object                                                                                   | N        | Float (10,6)  |\n| obj_type                  | Type                                                                                                                      | N        | Varchar (255) |\n| obj_model                 | Model                                                                                                                     | N        | Varchar (255) |\n| obj_brand                 | Brand                                                                                                                     | N        | Varchar (255) |\n| obj_date_warranty_expires | Expiration date of the warranty                                                                                           | N        | Varchar (255) |\n| obj_serialnumber          | Serialnumber of the object                                                                                                | N        | Varchar (255) |\n| obj_date_last_inspection  | Date of last inspection                                                                                                   | N        | Varchar (255) |\n| obj_date_installation     | Date of installation                                                                                                      | N        | Varchar (255) |\n| obj_freefield_1           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_2           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_3           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_4           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_5           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_6           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_7           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_8           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_9           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_10          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_11          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_12          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_13          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_14          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_15          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_16          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_17          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_18          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_19          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_20          |                                                                                                                           | N        | Varchar (255) |\n| obj_order                 | Sort order of an object                                                                                                   | N        | Int (10)      |\n| obj_created               | Timestamp of creating                                                                                                     | N        | DateTime      |\n| obj_modified              | Timestamp of modifying                                                                                                    | N        | DateTime      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getobjects.in.json",
                "out": "./lib/schemas/Getobjects.out.json"
            }
        },
        "Getchangedobjects": {
            "main": "./lib/triggers/Getchangedobjects.js",
            "title": "Get changed objects",
            "description": "This api is used to fetch changed objects. A change can be made from the app. Once the information is processed the api can be called with the obj_code parameter. The changed indicator will be set to 0 so the record won't be shown again.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getchangedobjects.in.json",
                "out": "./lib/schemas/Getchangedobjects.out.json"
            }
        },
        "Getchangedobjects1": {
            "main": "./lib/triggers/Getchangedobjects1.js",
            "title": "Get changed objects",
            "description": "This api is used to fetch changed object_parts. A change can be made from the app. Use the object_parts to pass a timestamp Y-m-d H:i:s to only show records mutated after that timestamp.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getchangedobjects1.in.json",
                "out": "./lib/schemas/Getchangedobjects1.out.json"
            }
        },
        "Getsuppliers": {
            "main": "./lib/triggers/Getsuppliers.js",
            "title": "Get suppliers",
            "description": "This api is used to sync suppliers with WorkorderApp.\nEach supplier record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| sup_code                  | Unique code of the supplier. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| sup_name                  | Supplier name                                                                                                             | Y        | Varchar (255) |\n| sup_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getsuppliers.in.json",
                "out": "./lib/schemas/Getsuppliers.out.json"
            }
        },
        "Getfreefields": {
            "main": "./lib/triggers/Getfreefields.js",
            "title": "Get freefields",
            "description": "This api is used to sync suppliers with WorkorderApp.\nEach supplier record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| sup_code                  | Unique code of the supplier. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| sup_name                  | Supplier name                                                                                                             | Y        | Varchar (255) |\n| sup_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getfreefields.in.json",
                "out": "./lib/schemas/Getfreefields.out.json"
            }
        },
        "Getquotation": {
            "main": "./lib/triggers/Getquotation.js",
            "title": "Get quotation",
            "description": "This api is used to fetch generated quotations from WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getquotation.in.json",
                "out": "./lib/schemas/Getquotation.out.json"
            }
        },
        "GetPrices": {
            "main": "./lib/triggers/GetPrices.js",
            "title": "Get Prices",
            "description": "This api is used to fetch generated quotations from WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPrices.in.json",
                "out": "./lib/schemas/GetPrices.out.json"
            }
        },
        "Getinvoice": {
            "main": "./lib/triggers/Getinvoice.js",
            "title": "Get invoice",
            "description": "This api is used to fetch generated invoices from WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section.\n\n| Parameter                 | Description                                                                                           |\n|---------------------------|-------------------------------------------------------------------------------------------------------|\n| inv_id                    | Unique invoice ID  number of the invoice                                                              |\n| inv_worksheet_id          | Worksheet ID that is used to generate this invoice                                                    |\n| inv_quo_id                | Quotation ID that is used to generate this invoice                                                    |\n| inv_inv_id                | Parent invoice ID. Used when creating a credit invoice.                                               |\n| inv_type                  | Invoice type, can be DEBIT, CREDIT, CONCEPT_DEBIT or CONCEPT_CREDIT                                   |\n| inv_currency_code         | ISO 4217 currency code                                                                                |\n| inv_currency_symbol       | Currency symbol shown in the UI                                                                       |\n| inv_description           | Description of the invoice                                                                            |\n| inv_invoice_debtor_nr     | Debtor number of the assigned relation                                                                |\n| inv_invoice_debtor_name   | Debtor name of the assigned relation                                                                  |\n| inv_invoice_debtor_email  | Debtor e-mail of the assigned relation                                                                |\n| inv_number_numeric        | Invoice number numeric value                                                                          |\n| inv_number_formatted      | Pretty formatted invoice number                                                                       |\n| inv_status                | Invoice status, can be OPEN, PAYED, OVERDUE, REMINDER_1, REMINDER_2, REMINDER_3 or ...                |\n| inv_reference             | Reference, example purchase order number workorder number                                             |\n| inv_date                  | Invoice date                                                                                          |\n| inv_due_date              | Invoice due date                                                                                      |\n| inv_due_days              | Amount of due days. This days are added to the inv_date to calculate the inv_due_date.                |\n| inv_terms                 | Terms shown in the footer of the PDF.                                                                 |\n| inv_header                | Header shown on top of the PDF.                                                                       |\n| inv_amount                | Total amount including VAT.                                                                           |\n| inv_amount_excl           | Total amount excluding VAT.                                                                           |\n| inv_balance               | Total amounts of the transactions registered to this invoice.                                         |\n| inv_user_create           | User who created this invoice                                                                         |\n| inv_user_mutate           | User who mutated this invoice                                                                         |\n| inv_user_send             | User who marked this invoice as send.                                                                 |\n| inv_timestamp_create      | Timestamp of creation                                                                                 |\n| inv_timestamp_mutate      | Timestamp of mutating                                                                                 |\n| inv_timestamp_payed       | Timestamp when the invoice was marked as payed (inv_amount equal to inv_balance)                      |\n| inv_timestamp_send        | Timestamp of marking the invoice as send.                                                             |\n| iln_lines                 | Array of invoice lines.                                                                               |\n| invoice_debtor            | Invoice debtor.                                                                                       |\n| pdf                       | Temporary PDF url.                                                                                    |\n| ubl                       | Temporary ubl 2.0 url.                                                                                |\n\nInvoice line parameters\n\n| Parameter             | Description                                      |\n|-----------------------|--------------------------------------------------|\n| iln_id                | Line ID                                          |\n| iln_inv_id            | Invoice Id                                       |\n| iln_order             | Position of the line                             |\n| iln_material_code     | Material code                                    |\n| iln_material_hourtype | Hourtype code                                    |\n| iln_description       | Line description                                 |\n| iln_amount            | Line amount                                      |\n| iln_price             | Item price                                       |\n| iln_vat_percentage    | Vat percentage                                   |\n| iln_discount          | Discount percentage                              |\n| iln_total             | Total price excluding vat and discount           |\n| iln_total_discount    | Calculated discount amount                       |\n| iln_total_vat         | Calculated vat amount                            |\n| iln_total_excl        | Total price excluding vat and including discount |\n| iln_total_incl        | Total price including vat and including discount |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getinvoice.in.json",
                "out": "./lib/schemas/Getinvoice.out.json"
            }
        },
        "Gettransactions": {
            "main": "./lib/triggers/Gettransactions.js",
            "title": "Get transactions",
            "description": "This api is used to fetch a single generated invoice from WorkorderApp.\nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1&operator=gt\nAdding multiple filters: &key[]=key1&value[]=value1&operator[]=eq&key[]=key2&value[]=value2&operator[]=gt\n\nFollowing operators are allowed:\n\n| Operator | Description                 |\n|----------|-----------------------------|\n| li       | Like (%)                    |\n| eq       | Equal (=)                   |\n| ne       | Not equal (!=)              |\n| gt       | Greather than (>)           |\n| ge       | Greather than or equal (>=) |\n| lt       | Less than  (<)              |\n| le       | Less than or equal (<=)     |\nTransaction parameters. The invoice id of a transaction transaction can be empty if a transaction is not assigned to an invoice. Once it is assigned the balance of the invoice will be adjusted.\n\n| Parameter                    | Description                                | Type         |\n|-----------------------------|--------------------------------------------|--------------|\n| int_inv_id                  | Invoice ID                                 | int(11)      |\n| int_transaction_id          | Transaction ID                             | varchar(255) |\n| int_external_transaction_id | External Transaction ID                    | varchar(255) |\n| int_description             | Transaction Description                    | varchar(255) |\n| int_amount                  | Transaction amount                         | decimal(7,2) |\n| int_type                    | Transaction type                           | varchar(255) |\n| int_type_description        | Transaction type description               | varchar(255) |\n| int_status                  | Transaction status,NEW or PROCESSED        | varchar(55)  |\n| int_user                    | User/entity who registered the transaction | varchar(255) |\n| int_timestamp               | Timestamp registered                       | timestamp    |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Gettransactions.in.json",
                "out": "./lib/schemas/Gettransactions.out.json"
            }
        },
        "Getcontactpersons": {
            "main": "./lib/triggers/Getcontactpersons.js",
            "title": "Get contact persons",
            "description": "This api is used to sync contact persons with WorkorderApp. A contact person should always be related to a certain client.\n`cpn_code` is used as a unique reference to either insert or update the address.\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| cpn_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| cpn_code                  | Unique code of the contact person. Used as reference in the workorder.      | Y        | Varchar (255) |\n| cpn_name                  | Name of the contact person.                                                 | Y        | Varchar (255) |\n| cpn_phone                 | Phone of the contact person.                                                | N        | Varchar (255) |\n| cpn_email                 | Email of the contact person.                                                | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getcontactpersons.in.json",
                "out": "./lib/schemas/Getcontactpersons.out.json"
            }
        },
        "Getcontactbyfilter": {
            "main": "./lib/triggers/Getcontactbyfilter.js",
            "title": "Get contact by filter",
            "description": "This api is used to fetch contactpersons based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getcontactbyfilter.in.json",
                "out": "./lib/schemas/Getcontactbyfilter.out.json"
            }
        },
        "Getgeneric_notes": {
            "main": "./lib/triggers/Getgeneric_notes.js",
            "title": "Get generic_notes",
            "description": "This api is used to sync contact persons with WorkorderApp. A contact person should always be related to a certain client.\n`cpn_code` is used as a unique reference to either insert or update the address.\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| cpn_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| cpn_code                  | Unique code of the contact person. Used as reference in the workorder.      | Y        | Varchar (255) |\n| cpn_name                  | Name of the contact person.                                                 | Y        | Varchar (255) |\n| cpn_phone                 | Phone of the contact person.                                                | N        | Varchar (255) |\n| cpn_email                 | Email of the contact person.                                                | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Getgeneric_notes.in.json",
                "out": "./lib/schemas/Getgeneric_notes.out.json"
            }
        }
    },
    "actions": {
        "Addemployees": {
            "main": "./lib/actions/Addemployees.js",
            "title": "Add employees",
            "description": "This api is used to get or edit employees in WorkorderApp.\nEach employee record can contain the following data:\n\n| Parameter  | Required | Type (size)   |\n|------------|----------|---------------|\n| firstname  | Y        | Varchar (255) |\n| lastname   | Y        | Varchar (255) |\n| number     | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addemployees.in.json",
                "out": "./lib/schemas/Addemployees.out.json"
            }
        },
        "Addprojects": {
            "main": "./lib/actions/Addprojects.js",
            "title": "Add projects",
            "description": "This api is used to sync external projects with WorkorderApp.\nEach project record can contain the following data:\n\n| Parameter        | Required | Type (size)     |\n|------------------|----------|-----------------|\n| code             | Y        | Varchar (255)   |\n| code_ext         | N        | Varchar (255)   |\n| debtor_number    | Y        | Varchar (255)   |\n| status           | Y        | Varchar (255)   |\n| name             | Y        | Varchar (255)   |\n| description      | N        | Text            |\n| progress         | N        | Integer         |\n| date_start       | Y        | Varchar (255)   |\n| date_end         | N        | Varchar (255)   |\n| active           | N        | Integer (1 or 0)|",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addprojects.in.json",
                "out": "./lib/schemas/Addprojects.out.json"
            }
        },
        "PostAddprojects": {
            "main": "./lib/actions/PostAddprojects.js",
            "title": "Add projects",
            "description": "This api is used to sync external projects with WorkorderApp.\nEach project record can contain the following data:\n\n| Parameter        | Required | Type (size)     |\n|------------------|----------|-----------------|\n| code             | Y        | Varchar (255)   |\n| code_ext         | N        | Varchar (255)   |\n| debtor_number    | Y        | Varchar (255)   |\n| status           | Y        | Varchar (255)   |\n| name             | Y        | Varchar (255)   |\n| description      | N        | Text            |\n| progress         | N        | Integer         |\n| date_start       | Y        | Varchar (255)   |\n| date_end         | N        | Varchar (255)   |\n| active           | N        | Integer (1 or 0)|",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAddprojects.in.json",
                "out": "./lib/schemas/PostAddprojects.out.json"
            }
        },
        "Addtasks": {
            "main": "./lib/actions/Addtasks.js",
            "title": "Add tasks",
            "description": "This api is used to sync tasks with OutSmart.\nEach task record can contain the following data:\n\n| Parameter               | Required | Description                                                |\n|-------------------------|----------|------------------------------------------------------------|\n| tsk_tsk_id              | N        | Parent tasks ID                                            |\n| tsk_type                | Y        | Type should be `TASK`                                      |\n| tsk_name                | Y        | Name description of the task                               |\n| tsk_description         | N        | Long description, can contain HTML format                  |\n| tsk_reference           | Y        | External reference used to update same task in the future  |\n| tsk_category            | Y        | Category used to group in OutSmart in general CALL or MAIL |\n| tsk_icon                | N        | Icon used phone-square and envelope-o                      |\n| tsk_owner               | N        | Employee number of the owner                               |\n| tsk_assigned_to         | N        | Employee number of the assignee                            |\n| tsk_priority            | Y        | LOW, NORMAL, HIGH                                          |\n| tsk_status              | Y        | YET_TO_START,IN_PROGRESS,COMPLETED,EXPIRED,CLOSED          |\n| tsk_debtor_nr           | N        | Connected customer debtor number                           |\n| tsk_address_nr          | N        | Connected address code                                     |\n| tsk_contact_nr          | N        | Connected contactperson code                               |\n| tsk_timestamp_due       | N        | Timestamp due                                              |\n| tsk_timestamp_create    | N        | Timestamp created                                          |\n| tsk_timestamp_mutate    | N        | Timestamp mutated                                          |\n| tsk_timestamp_started   | N        | Timestamp started                                          |\n| tsk_timestamp_completed | N        | Timestamp completed                                        |\n| tsk_timestamp_start     | N        | Timestamp start                                            |\n| tsk_link                | N        | Link(href) to be rendered in the UI                        |\n| tsk_project_nr          | N        | Connected project number                                   |\n| tsk_project_activity_nr | N        | Connected project activity number                          |\n| tsk_order_nr            | N        | Connected work order number                                |\n| tsk_invoice_number      | N        | Connected invoice number                                   |\n| tsk_quotation_number    | N        | Connected quotation number                                 |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addtasks.in.json",
                "out": "./lib/schemas/Addtasks.out.json"
            }
        },
        "Addcategories": {
            "main": "./lib/actions/Addcategories.js",
            "title": "Add categories",
            "description": "This api is used to categories with WorkorderApp.\nEach category record can contain the following data:\n\n| Parameter                 | Description                                   | Required | Type (size)   |\n|---------------------------|-----------------------------------------------|----------|---------------|\n| cat_code                  | Category code                                 | Y        | Varchar (255) |\n| cat_cat_code              | Parent category code part                     | N        | Varchar (255) |\n| cat_name                  | Category name                                 | Y        | Varchar (255) |\n| cat_image                 | Url of the image. POST: An external url should be provided.  GET: You will receive a workorderapp url.     | N        | Varchar (255)      |\n| cat_display               | Indication if the category should be displayed| Y        | Int (10)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addcategories.in.json",
                "out": "./lib/schemas/Addcategories.out.json"
            }
        },
        "Addhourtypes": {
            "main": "./lib/actions/Addhourtypes.js",
            "title": "Add hourtypes",
            "description": "This api is used to sync external hourtypes with WorkorderApp.\nEach hourtype record can contain the following data:\n\n| Parameter        | Required | Type (size)         |\n|------------------|----------|---------------------|\n| code             | Y        | Varchar (255)       |\n| name             | Y        | Varchar (255)       |\n| cost_booking     | Y        | Integer (1 or 0)    |\n| sale_booking     | Y        | Integer (1 or 0)    |\n| sale_price       | Y        | Decimal (> 0)       |\n| cost_price       | N        | Decimal (> 0)       | \n| active           | N        | Integer (1 or 0)    |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addhourtypes.in.json",
                "out": "./lib/schemas/Addhourtypes.out.json"
            }
        },
        "Addmaterialcategories": {
            "main": "./lib/actions/Addmaterialcategories.js",
            "title": "Add material categories",
            "description": "This api is used to sync material categories with WorkorderApp.\nEach material_categories record can contain the following data:\n\n| Parameter                 | Description                                   | Required | Type (size)   |\n|---------------------------|-----------------------------------------------|----------|---------------|\n| mct_mat_code              | Material code                                 | Y        | Varchar (255) |\n| mct_cat_code              | Category code                                 | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addmaterialcategories.in.json",
                "out": "./lib/schemas/Addmaterialcategories.out.json"
            }
        },
        "Addrelations": {
            "main": "./lib/actions/Addrelations.js",
            "title": "Add relations",
            "description": "This api is used to sync external contacts with WorkorderApp.\nEach relation record can contain the following data:\n\n| Parameter        | Required | Type (size)   |\n|------------------|----------|---------------|\n| name             | Y        | Varchar (255) |\n| debtor_number    | Y        | Varchar (255) |\n| contact          | N        | Varchar (255) |\n| phone_number     | N        | Varchar (255) |\n| email            | N        | Varchar (255) |\n| email_workorder  | N        | Varchar (255) |\n| street           | Y        | Varchar (255) |\n| house_number     | N        | Varchar (255) |\n| postal_code      | Y        | Varchar (255) |\n| city             | Y        | Varchar (255) |\n| remark           | N        | Text (64kb)   |\n| latitude         | N        | Float (10,6)  |\n| longitude        | N        | Float (10,6)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addrelations.in.json",
                "out": "./lib/schemas/Addrelations.out.json"
            }
        },
        "Addmaterials": {
            "main": "./lib/actions/Addmaterials.js",
            "title": "Add materials",
            "description": "This api is used to sync materials with WorkorderApp.\nEach material record can contain the following data:\n\n| Parameter    | Required | Type (size)   |\n|--------------|----------|---------------|\n| code         | Y        | Varchar (255) |\n| description  | Y        | Text (64kb)   |\n| price        | Y        | Decimal       |\n| unit         | Y        | Varchar (255) |\n| eancode      | N        | Varchar (55)  |\n| barcode      | N        | Varchar (55)  |\n| freefield1   | N        | Varchar (255) |\n| freefield2   | N        | Varchar (255) |\n| freefield3   | N        | Varchar (255) |\n| freefield4   | N        | Varchar (255) |\n| freefield5   | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addmaterials.in.json",
                "out": "./lib/schemas/Addmaterials.out.json"
            }
        },
        "Addvalues": {
            "main": "./lib/actions/Addvalues.js",
            "title": "Add values",
            "description": "This api is used to sync materials with WorkorderApp.\nEach material record can contain the following data:\n\n| Parameter    | Required | Type (size)   |\n|--------------|----------|---------------|\n| code         | Y        | Varchar (255) |\n| description  | Y        | Text (64kb)   |\n| price        | Y        | Decimal       |\n| unit         | Y        | Varchar (255) |\n| eancode      | N        | Varchar (55)  |\n| barcode      | N        | Varchar (55)  |\n| freefield1   | N        | Varchar (255) |\n| freefield2   | N        | Varchar (255) |\n| freefield3   | N        | Varchar (255) |\n| freefield4   | N        | Varchar (255) |\n| freefield5   | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addvalues.in.json",
                "out": "./lib/schemas/Addvalues.out.json"
            }
        },
        "Addforms": {
            "main": "./lib/actions/Addforms.js",
            "title": "Add forms",
            "description": "This api is used to sync external forms with WorkorderApp.\nEach form record can contain the following data:\n\n| Parameter | Description                          | Required | Type (size)   |\n|-----------|--------------------------------------|----------|---------------|\n| name      | Name of the form                     | Y        | Varchar (255) |\n| data      | JSON data of the form                | N        | Text (64kb)   |\n| template  | HTML template to display data in PDF | N        | Text (64kb)   |\n\n\nThe `data` parameters contains a JSON encoded representation of the form. The main element is called `fields` and contains an array of JSON objects representing a `field`.\nEach field contains the following data:\n\n| Parameter | Description |\n|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| label | The label of the field. |\n| field_type | The Type of the field. Can be `text`, `checkboxes`, `radio` , `dropdown` or `signature`. |\n| required | This field indicates if the field is required to complete. Text: Field is valid a value is filled. Checkboxes: Field is valid when all the boxes are checked. Radio: Field is valid when a option is checked. Dropdown: Field is valid when a option is selected. Signature: Field is valid when a signature is set |\n| cid | Unique indentification of the field. |\n| field_options | Array containing field options. See description below. |\n\nEach field_options contains the following data:\n\n|Parameter | Description |\n|-----------------|-------------------------------------------------------------------------------------------------|\n|--------------- | ----------------------------------------------------------------------------------------------- |\n|options | The options of the field. Used in `checkboxes`, `radio` , `dropdown`. See decription below |\n|value | Value added in `text` field or base64 encoded image in `signature` field. |\n\nEach options contains the following data\n\n| Parameter | Description |\n|-----------------|-------------------------------------------------------------------------------------|\n| --------------- | ----------------------------------------------------------------------------------- |\n| checked | Indicated if options is selected. Used in `checkboxes`, `radio` , `dropdown`. |\n| label | Label for the option |\n\n+ Sample JSON\n    + Text:` {\n      \"label\": \"Serienummer\",\n      \"field_type\": \"text\",\n      \"required\": true,\n      \"field_options\": {\n        \"size\": \"small\",\n        \"value\": \"\"\n      },\n      \"cid\": \"c6\"\n    }` \n    + Radio: ` {\n      \"label\": \"Type pomp\",\n      \"field_type\": \"radio\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"type A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type B\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type C\",\n            \"checked\": false\n          }\n        ]\n      },\n      \"cid\": \"c2\"\n    }`\n    + Checkboxes: ` {\n      \"label\": \"Type pomp\",\n      \"field_type\": \"checkboxes\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"type A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type B\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"type C\",\n            \"checked\": false\n          }\n        ]\n      },\n      \"cid\": \"c2\"\n    }`\n    + Dropdown: ` {\n      \"label\": \"Dropdown\",\n      \"field_type\": \"dropdown\",\n      \"required\": true,\n      \"field_options\": {\n        \"options\": [\n          {\n            \"label\": \"A\",\n            \"checked\": false\n          },\n          {\n            \"label\": \"B\",\n            \"checked\": false\n          }\n        ],\n        \"include_blank_option\": false\n      },\n      \"cid\": \"c10\"\n    }`\n    + Signature: `{\n      \"cid\": \"c5\",\n      \"field_options\": {\n        \"value\": \"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\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW9D/A4B7ViPrMDeYAAAAAElF\\nTkSuQmCC\\n\"\n      },\n      \"field_type\": \"signature\",\n      \"label\": \"Naamloos\",\n      \"required\": true\n    }`",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addforms.in.json",
                "out": "./lib/schemas/Addforms.out.json"
            }
        },
        "TimeSheet_Expenses_Addexpenses": {
            "main": "./lib/actions/TimeSheet_Expenses_Addexpenses.js",
            "title": "TimeSheet - Expenses  - Add expenses",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeSheet_Expenses_Addexpenses.in.json",
                "out": "./lib/schemas/TimeSheet_Expenses_Addexpenses.out.json"
            }
        },
        "TimeSheet_Travel_Addtravel": {
            "main": "./lib/actions/TimeSheet_Travel_Addtravel.js",
            "title": "TimeSheet - Travel - Add travel",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeSheet_Travel_Addtravel.in.json",
                "out": "./lib/schemas/TimeSheet_Travel_Addtravel.out.json"
            }
        },
        "TimeSheet_Hours_Addhours": {
            "main": "./lib/actions/TimeSheet_Hours_Addhours.js",
            "title": "TimeSheet - Hours - Add hours",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TimeSheet_Hours_Addhours.in.json",
                "out": "./lib/schemas/TimeSheet_Hours_Addhours.out.json"
            }
        },
        "Notes_Addnote": {
            "main": "./lib/actions/Notes_Addnote.js",
            "title": "Notes - Add note",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Notes_Addnote.in.json",
                "out": "./lib/schemas/Notes_Addnote.out.json"
            }
        },
        "Postlocations": {
            "main": "./lib/actions/Postlocations.js",
            "title": "Post locations",
            "description": "This api is used to get the locations of connected devices from WorkorderApp or post locations for certain identifiers. An identifier can be anything, for example employee nr or license plate. When posting a location the type should be specified.\nPost data should contain an array with objects containing the following parameters:\n\n| Parameter                 | Description                                                       | \n|---------------------------|-------------------------------------------------------------------|  \n| lat                       | Latitude                                                          |  \n| long                      | Longitude                                                         |  \n| identifier                | Unique identifier, for example employee number or license plate.  |  \n| type                      | 0 for employee, 1 for car                                         |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Postlocations.in.json",
                "out": "./lib/schemas/Postlocations.out.json"
            }
        },
        "Expensecategories_Add": {
            "main": "./lib/actions/Expensecategories_Add.js",
            "title": "Expense categories - Add",
            "description": "This api is used to fetch addresses based on a filter. \nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1\nAdding multiple filters: &key[]=key1&value[]=value1&key[]=key2&value[]=value2",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Expensecategories_Add.in.json",
                "out": "./lib/schemas/Expensecategories_Add.out.json"
            }
        },
        "Addworktypes": {
            "main": "./lib/actions/Addworktypes.js",
            "title": "Add worktypes",
            "description": "This api is used to sync  worktypes with WorkorderApp.\nEach worktype record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| wrt_name                  | Name                              | Y        | Varchar (255) |\n| wrt_description           | Description                       | Y        | Varchar (255) |\n| wrt_default_minutes       | Default minutes used for planning | Y        | Int (10) |\n| wrt_active                | Indicates if worktype is active   | Y        | Int (10)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addworktypes.in.json",
                "out": "./lib/schemas/Addworktypes.out.json"
            }
        },
        "Addpriorities": {
            "main": "./lib/actions/Addpriorities.js",
            "title": "Add priorities",
            "description": "This api is used to sync priorities with WorkorderApp.\nEach priority record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the priority. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the priority should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addpriorities.in.json",
                "out": "./lib/schemas/Addpriorities.out.json"
            }
        },
        "Adderrors": {
            "main": "./lib/actions/Adderrors.js",
            "title": "Add errors",
            "description": "This api is used to sync errors with WorkorderApp.\nEach error record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the error. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the error should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Adderrors.in.json",
                "out": "./lib/schemas/Adderrors.out.json"
            }
        },
        "Addsolutions": {
            "main": "./lib/actions/Addsolutions.js",
            "title": "Add solutions",
            "description": "This api is used to sync solutions with WorkorderApp.\nEach solution record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the solution. The employee can edit this when added to a work order. | Y        | Varchar (255) | \n| app_enabled               | Indication if the solution should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addsolutions.in.json",
                "out": "./lib/schemas/Addsolutions.out.json"
            }
        },
        "Addpaymentmethods": {
            "main": "./lib/actions/Addpaymentmethods.js",
            "title": "Add paymentmethods",
            "description": "This api is used to sync paymentmethods with WorkorderApp.\nEach paymentmethods record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| pmd_description           | Description                       | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addpaymentmethods.in.json",
                "out": "./lib/schemas/Addpaymentmethods.out.json"
            }
        },
        "Addregions": {
            "main": "./lib/actions/Addregions.js",
            "title": "Add regions",
            "description": "This api is used to sync regions with WorkorderApp.\nEach region record can contain the following data:\n\n| Parameter                 | Description               | Required | Type (size)   |\n|---------------------------|---------------------------|----------|---------------|\n| reg_code                  | Unique code               | Y        | Varchar (255) | \n| reg_name                  | Name of the region.       | Y        | Varchar (255) | \n| reg_zip_start             | Zip start of the region.  | N        | Integer (11) | \n| reg_zip_end               | Zip end of the region.    | N        | Integer (11) | \n| reg_city                  | City of the region.       | N        | Varchar (255) | \n| reg_country               | Country of the region.    | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addregions.in.json",
                "out": "./lib/schemas/Addregions.out.json"
            }
        },
        "Addvehicles": {
            "main": "./lib/actions/Addvehicles.js",
            "title": "Add vehicles",
            "description": "This api is used to sync vehicles with WorkorderApp.\nEach vehicle record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| veh_license_plate         | Unique  license plate                                                                 | Y        | Varchar (255) | \n| veh_title               | Title of the vehicle | Y        | Varchar (255) | \n| veh_brand               | Brand of the vehicle  | N        | Varchar (255) | \n| veh_model               |  Model of the vehicle| N        | Varchar (255) | \n| veh_type               | Type of the vehicle. | N        | Varchar (255) | \n| veh_image               | Url of the image . POST: An external url should be provided.  GET: You will receive a workorderapp url.    | Y        |   | \n| veh_driver               | Driver of the vehicle. This us a reference to the employee number | N        | Varchar (255) | \n| veh_driving               | Indication if the vehicle is driving. When the value is set to 1 it will be shown in the planbord. | N        | Integer (11) | \n| veh_active               | Indication if the vehicle is active                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addvehicles.in.json",
                "out": "./lib/schemas/Addvehicles.out.json"
            }
        },
        "Addwarehouses": {
            "main": "./lib/actions/Addwarehouses.js",
            "title": "Add warehouses",
            "description": "This api is used to sync vehicles with WorkorderApp.\nEach vehicle record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| veh_license_plate         | Unique  license plate                                                                 | Y        | Varchar (255) | \n| veh_title               | Title of the vehicle | Y        | Varchar (255) | \n| veh_brand               | Brand of the vehicle  | N        | Varchar (255) | \n| veh_model               |  Model of the vehicle| N        | Varchar (255) | \n| veh_type               | Type of the vehicle. | N        | Varchar (255) | \n| veh_image               | Url of the image . POST: An external url should be provided.  GET: You will receive a workorderapp url.    | Y        |   | \n| veh_driver               | Driver of the vehicle. This us a reference to the employee number | N        | Varchar (255) | \n| veh_driving               | Indication if the vehicle is driving. When the value is set to 1 it will be shown in the planbord. | N        | Integer (11) | \n| veh_active               | Indication if the vehicle is active                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addwarehouses.in.json",
                "out": "./lib/schemas/Addwarehouses.out.json"
            }
        },
        "Addmaterial_types": {
            "main": "./lib/actions/Addmaterial_types.js",
            "title": "Add material_types",
            "description": "This api is used to sync material types with WorkorderApp.\nEach material type record can contain the following data:\n\n| Parameter                 | Description                                                                         | Required | Type (size)   |\n|---------------------------|-------------------------------------------------------------------------------------|----------|---------------|\n| code                      | Unique code                                                                         | Y        | Varchar (255) | \n| description               | Description of the material type.  | Y        | Varchar (255) | \n| app_enabled               | Indication if the material type should be visible in the app                             | N        | Integer (11)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addmaterial_types.in.json",
                "out": "./lib/schemas/Addmaterial_types.out.json"
            }
        },
        "Addworkstatusses": {
            "main": "./lib/actions/Addworkstatusses.js",
            "title": "Add workstatusses",
            "description": "This api is used to sync workstatusses with WorkorderApp.\nEach workstatusses record can contain the following data:\n\n| Parameter                 | Description                       | Required | Type (size)   |\n|---------------------------|-----------------------------------|----------|---------------|\n| sta_code                  | Code                              | Y        | Varchar (255) | \n| sta_name                  | Name                              | Y        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addworkstatusses.in.json",
                "out": "./lib/schemas/Addworkstatusses.out.json"
            }
        },
        "Addaddresses": {
            "main": "./lib/actions/Addaddresses.js",
            "title": "Add addresses",
            "description": "This api is used to sync addresses with WorkorderApp. An address should always be related to a certain client and can have a main contact person associated with it.\n`adr_code` is used as a unique reference to either insert or update the address.\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| adr_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| adr_code                  | Unique code of the address. Used as reference in the workorder.             | Y        | Varchar (255) |\n| adr_cpn_code              | Contact person code of the address                                          | N        | Varchar (255) |\n| adr_line_1                | Address line. Usually street and number.                                    | Y        | Varchar (255) |\n| adr_zip                   | Zipcode of the address                                                      | Y        | Varchar (255) |\n| adr_city                  | City of the adress                                                          | Y        | Varchar (255) |\n| adr_country               | Country of the address                                                      | N        | Varchar (255) |\n| adr_remark                | Remark of the address                                                       | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addaddresses.in.json",
                "out": "./lib/schemas/Addaddresses.out.json"
            }
        },
        "Addparts": {
            "main": "./lib/actions/Addparts.js",
            "title": "Add parts",
            "description": "This api is now deprecated. Use materials to register the parts of certain objects.\nThis api is used to sync parts with WorkorderApp.\nEach part record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| prt_code                  | Unique code of the parts. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| prt_name                  | Part name/description name                                                                                                             | Y        | Varchar (255) |\n| prt_sup_code              | Supplier code                                                                                                             | Y        | Varchar (255) |\n| prt_value                 | Value of a parts                                                                                                             | Y        | Varchar (255) |\n| prt_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.     | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addparts.in.json",
                "out": "./lib/schemas/Addparts.out.json"
            }
        },
        "Addobjectparts": {
            "main": "./lib/actions/Addobjectparts.js",
            "title": "Add object parts",
            "description": "This api is used to sync object parts with WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section. Allowed columns: `opr_obj_code` `opr_prt_code` `opr_serial_number`\nEach object_part record can contain the following data:\n\n| Parameter                         | Description                                           | Required | Type (size)   |\n|-----------------------------------|-------------------------------------------------------|----------|---------------|\n| opr_obj_code                      | Object code                                           | Y        | Varchar (255) |\n| opr_prt_code                      | Object part (Artikelcode from items in materials)     | Y        | Varchar (255) |\n| opr_serial_number                 | Serial number of parts used in object                 | N        | Varchar (255) |\n| opr_amount                        | Amount of parts used in object                        | Y        | Int (10)      |\n| opr_timestamp_installation        | Date of installing (Y-m-d)                            | N        | Date       |\n| opr_warranty_months               | Amount of months, used to calculate expiration date.  | N        | Int (10)      |\n| opr_timestamp_warranty_expires    | Warranty expiration date, automatically calculated based on installation date and the warranty months    | N        | Varchar (255)      |\n| val_value_1                       | Freefield value 1                                     | N        | Varchar (255)      |\n| val_value_2  - val_value_20       | Freefield value 2  till 20                            | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addobjectparts.in.json",
                "out": "./lib/schemas/Addobjectparts.out.json"
            }
        },
        "Postworkorders": {
            "main": "./lib/actions/Postworkorders.js",
            "title": "Post workorders",
            "description": "This api is used to post one or more workorders to WorkorderApp.\nA workorder can contain the following data:\n\n| Parameter                    | Detail                                                                                                     | Required | Type (size)   |\n|------------------------------|------------------------------------------------------------------------------------------------------------|----------|---------------|\n| WorkorderNo                  | Unique number from ERP/CRM                                                                                 | Yes      | Varchar (255) |\n| ProjectNr                    | Internal Project number                                                                                    | No       | Varchar (255) |\n| ExternProjectNr              | External Project number                                                                                    | No       | Varchar (255) |\n| CustomerName                 | Customer name                                                                                              | Yes      | Varchar (255) |\n| CustomerDebtorNr             | Customer Debtor number                                                                                     | Yes      | Varchar (255) |\n| CustomerStreet               | Customer street                                                                                            | Yes      | Varchar (255) |\n| CustomerStreetNo             | Customer street number                                                                                     | No       | Varchar (255) |\n| CustomerEmail                | Customer Email                                                                                             | No       | Varchar (255) |\n| CustomerZIP                  | Customer zip code                                                                                          | Yes      | Varchar (255) |\n| CustomerCity                 | Customer city                                                                                              | Yes      | Varchar (255) |\n| CustomerContactPerson        | Customer contact person                                                                                    | Yes      | Varchar (255) |\n| CustomerPhone                | Customer phone number                                                                                      | No       | Varchar (255) |\n| CustomerRemark               | Customer remark                                                                                            | No       | Text (64kb)   |\n| CustomerLatitude             | Latitude of work location, used for navigation and to display on maps.                                     | No       | Float(10,6)   |\n| CustomerLongitude            | Longitude of work location, used for navigation and to display on maps.                                    | No       | Float(10,6)   |\n| CustomerNameInvoice          | Invoice customer name                                                                                      | Yes      | Varchar (255) |\n| CustomerDebtorNrInvoice      | Invoice customer debtor number                                                                             | Yes      | Varchar (255) |\n| CustomerStreetInvoice        | Invoice customer street name                                                                               | Yes      | Varchar (255) |\n| CustomerStreetNoInvoice      | Invoice customer street number                                                                             | No       | Varchar (255) |\n| CustomerEmailInvoice         | Invoice customer email                                                                                     | No       | Varchar (255) |\n| CustomerZIPInvoice           | Invoice customer zip code                                                                                  | Yes      | Varchar (255) |\n| CustomerCityInvoice          | Invoice customer city                                                                                      | Yes      | Varchar (255) |\n| CustomerContactPersonInvoice | Invoice customer contact person                                                                            | Yes      | Varchar (255) |\n| CustomerPhoneInvoice         | Invoice customer phone number                                                                              | No       | Varchar (255) |\n| CustomerRemarkInvoice        | Invoice customer remark                                                                                    | No       | Text (64kb)   |\n| TypeOfWork                   | Installatie, Garantie, Levering, Onderhoud, Project, Regie, Reparatie,  Service, Storing, Verkoop, Verhuur | Yes      | Varchar (255) |\n| WorkDescription              | Work description of the workorder. Visible for customer when signing and when receiving the PDF.           | No       | Text (64kb)   |\n| InternalWorkDescription      | Internal work description of the workorder. Only visible for the employee                                  | No       | Text (64kb)   |\n| PaymentMethod                | niet van toepassing, op rekening, contact voldaan, pin betaling, conform offerte                           | Yes      | Varchar (255) |\n| EmployeeNr                   | Employee Number                                                                                            | No       | Varchar (255) |\n| WorkDate                     | Scheduled date for work (d-m-Y)                                                                            | No       | Varchar (255) |\n| WorkTime                     | Scheduled time for work (H:i)                                                                              | No       | Varchar (255) |\n| WorkEndDate                  | Scheduled end date for work (d-m-Y)                                                                        | No       | Varchar (255) |\n| WorkEndTime                  | Scheduled end time for work (H:i)                                                                          | No       | Varchar (255) |\n| WorkDeadline                 | Scheduled deadline for the workorder.                                                                      | No       | Varchar (255) |\n| WorkDuration                 | Duration of the workorder (in minutes). Used to fill WorkEndDate and WorkEndTime based on WorkDate and WorkTime.        | No       | Integer   |\n| WorkStatus                   | Internal work status code. Can be added through status API.                                                | No       | Varchar (255) |\n| PickupPlanning               | Indication if the work order should be added to batch to be picked up. Value should be 0 or 1.             | No       | Integer       |\n| WebPlanning                  | Indication if webplanning is enabled for this order.                                                       | No       | Integer       |\n| CpnCode                      | Contact person code                                                                                        | No       | Varchar (255) |\n| AdrCode                      | Address code                                                                                               | No       | Varchar (255) |\n| ShortWorkDescription         | Short work description. For example 1 line to show in an overview                                          | No       | Varchar (255) |\n| Comment                      | Additional field for the employee to leave their comment                                                   | No       | Varchar (255) |\n| ErrorCode                    | Selected code as added in the errors API                                                                   | No       | Varchar (255) |\n| ErrorMessage                 | Message corresponding to the selected Error, can be changed by the employee                                | No       | Varchar (255) |\n| SolutionCode                 | Selected code as added in the solutions API                                                                | No       | Varchar (255) |\n| SolutionMessage              | Message corresponding to the selected Solution, can be changed by the employee                             | No       | Varchar (255) |\n| PriorityCode                 | Selected code as added in the priorities API                                                               | No       | Varchar (255) |\n| PriorityMessage              | Message corresponding to the selected Priority, can be changed by the employee                             | No       | Varchar (255) |\n| MinimumHours                 | Minimum amount of hours that the customer should sign for. For example: The customer should always sign for 2 hours. If the employee only registers 25 minutes the customer still gets to see 2 hours.                | No       | Decimal (7,2) |\n| RoundingAmount               | Amount of minutes that the total time should be rounded to. For exammple: Your company only works with amounts of 30 minutes. If the user only registers 40 minutes the customer will have to sign for 60 minutes.                | No       | Varchar (255) |\n| Attachments                  | An array containing multiple files. See specification below.                                               | No       | Array         |\n| Materials                    | An array containing material rows. See specification below.                                                | No       | Array         |\n| Workperiods                  | An array containing workperiod rows. See specification below.                                              | No       | Array         |\n| Forms                        | Array of forms. Each row contains Name, Data and ObjectCode                                                | No       | Array         |\n| Employees                    | Array of employee numbers.                                                                                 | No       | Array         |\n| WorkObjects                  | Array of objects codes.                                                                                    | No       | Array         |\n\nAttachments specification\n\n| Parameter | Detail                                                                                        | Required | Type (size)   |\n|-----------|-----------------------------------------------------------------------------------------------|----------|---------------|\n| File      | URL of the attachment file. This has to be an existing file. The file is saved on our server. | No       | Varchar (255) |\n| Data      | Base64 encoded file data.                                                                     | No       | Base64        |\n| FileName  | Filename of the Base64 encoded data.                                                          | No       | Varchar (255) |\n\nAn attachment can be added by providing a valid URL or by providing Base64 encoded data and filename.\nMaterial specification\n\n| Parameter     | Detail                                                             | Required | Type          |\n|---------------|--------------------------------------------------------------------|----------|---------------|\n| MaterialCode  | Article number, code or barcode of this material. Example: A786878 | Yes      | Varchar (255) |\n| MaterialNr    | Amount of this material used. Example: 1                           | Yes      | Decimal       |\n| MaterialPrice | Price of this material. Example: 0,00                              | Yes      | Decimal       |\n| MaterialName  | Material name and/or description. Example: Kleinmateriaal          | Yes      | Varchar (255) |\n| MaterialUnit  | Unit of this material. Example: M2                                 | No       | Varchar (255) |\n| MaterialType  | User defined material type                                         | No       | Varchar (255) |\n| MaterialFreeField1  | User defined field 1                                         | No       | Varchar (255) |\n| MaterialFreeField2  | User defined field 2                                         | No       | Varchar (255) |\n| MaterialFreeField3  | User defined field 3                                         | No       | Varchar (255) |\n| MaterialFreeField4  | User defined field 4                                         | No       | Varchar (255) |\n| MaterialFreeField5  | User defined field 5                                         | No       | Varchar (255) |\n\nWorkperiod specification\n\n| Parameter     | Detail                                                    | Required  | Type          |\n|---------------|-----------------------------------------------------------|-----------|---------------|\n| WorkDate      | Date specified in d-m-Y                                   | Yes       | Varchar (255) |\n| BeginTime     | Time specified in H:i                                     | Yes       | Varchar (255) |\n| EndTime       | Time specified in H:i                                     | Yes       | Varchar (255) |\n| Break         | Break time in minutes                                     | No        | Int (11)      |\n| TotalTime     | Sum of EndTime - BeginTime - Break formatted in H:i       | Yes       | Varchar (255) |\n| Travel        | Travel distance                                           | No        | Int (11)      |\n| WorkRemark    | Work remark                                               | No        | Text          |\n| HourType      | Hour type code                                            | No        | Varchar (55)  |\n| EmployeeNr    | Employee nunber                                           | No        | Varchar (55)  |\n\nExample array:\n``` json\n\"Workperiods\": [\n    {\n        \"BeginTime\": \"08:30\",\n        \"TotalTime\": \"03:45\",\n        \"WorkRemark\": \"\",\n        \"WorkDate\": \"26-09-2013\",\n        \"EndTime\": \"12:15\",\n        \"Travel\": \"1\",\n        \"EmployeeNr\":\"11\",\n        \"HourType\":\"001\"\n    }\n] \n```\nForms specification\n\n| Parameter     | Detail                                                                                                                                | Required | Type          |\n|---------------|---------------------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| Name          | Name of the form. Will be visible to employee and used to search for data.                                                            | Yes      | Varchar (255) |\n| Data          | JSON data of the Form elements. See forms API for description. When this is empty we will use the name to lookup a predefined form.   | No      | Text (64kb)    |\n| ObjectCode    | Object connected to the form. We will search our list of object for the corresponding object.                                         | No      | Varchar (255)  |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Postworkorders.in.json",
                "out": "./lib/schemas/Postworkorders.out.json"
            }
        },
        "UpdateWorkorder_Materials_": {
            "main": "./lib/actions/UpdateWorkorder_Materials_.js",
            "title": "UpdateWorkorder (Materials)",
            "description": "This API is used to update an existing workorder. The row_id of workorder_no can be used to identify the specific workorder.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateWorkorder_Materials_.in.json",
                "out": "./lib/schemas/UpdateWorkorder_Materials_.out.json"
            }
        },
        "Addobject": {
            "main": "./lib/actions/Addobject.js",
            "title": "Add object",
            "description": "This api is used to sync objects with WorkorderApp.\nEach object record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| obj_code                  | Unique code of the object. Used as reference for other entities                                                           | Y        | Varchar (255) |\n| obj_sup_code              | Supplier code. Used as reference to supplier entity                                                                       | N        | Varchar (255) |\n| obj_debiteur_nummer       | Debtor number. Used as reference to customer clients.                                                                     | Y        | Varchar (255) |\n| obj_adr_code              | Address code. Used as a reference to the addres of a customer client.                                                     | N        | Varchar (255) |\n| obj_obj_code              | Parent object code.                                                                                                       | N        | Varchar (255) |\n| obj_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255) |\n| obj_description           | Description of the object                                                                                                 | Y        | Varchar (255) |\n| obj_price                 | Price of the object                                                                                                       | N        | Decimal (7,2) |\n| obj_floor_level           | Floor level of the object                                                                                                 | N        | Int (10)      |\n| obj_location              | Textual description of the location of the object                                                                         | N        | Varchar (255) |\n| obj_latitude              | Latitude of the location of the object                                                                                    | N        | Float (10,6)  |\n| obj_longitude             | Longitude of the location of the object                                                                                   | N        | Float (10,6)  |\n| obj_type                  | Type                                                                                                                      | N        | Varchar (255) |\n| obj_model                 | Model                                                                                                                     | N        | Varchar (255) |\n| obj_brand                 | Brand                                                                                                                     | N        | Varchar (255) |\n| obj_date_warranty_expires | Expiration date of the warranty                                                                                           | N        | Varchar (255) |\n| obj_serialnumber          | Serialnumber of the object                                                                                                | N        | Varchar (255) |\n| obj_date_last_inspection  | Date of last inspection                                                                                                   | N        | Varchar (255) |\n| obj_date_installation     | Date of installation                                                                                                      | N        | Varchar (255) |\n| obj_freefield_1           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_2           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_3           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_4           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_5           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_6           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_7           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_8           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_9           |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_10          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_11          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_12          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_13          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_14          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_15          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_16          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_17          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_18          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_19          |                                                                                                                           | N        | Varchar (255) |\n| obj_freefield_20          |                                                                                                                           | N        | Varchar (255) |\n| obj_order                 | Sort order of an object                                                                                                   | N        | Int (10)      |\n| obj_created               | Timestamp of creating                                                                                                     | N        | DateTime      |\n| obj_modified              | Timestamp of modifying                                                                                                    | N        | DateTime      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addobject.in.json",
                "out": "./lib/schemas/Addobject.out.json"
            }
        },
        "Addsuppliers": {
            "main": "./lib/actions/Addsuppliers.js",
            "title": "Add suppliers",
            "description": "This api is used to sync suppliers with WorkorderApp.\nEach supplier record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| sup_code                  | Unique code of the supplier. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| sup_name                  | Supplier name                                                                                                             | Y        | Varchar (255) |\n| sup_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addsuppliers.in.json",
                "out": "./lib/schemas/Addsuppliers.out.json"
            }
        },
        "Addfreefields": {
            "main": "./lib/actions/Addfreefields.js",
            "title": "Add freefields",
            "description": "This api is used to sync suppliers with WorkorderApp.\nEach supplier record can contain the following data:\n\n| Parameter                 | Description                                                                                                               | Required | Type (size)   |\n|---------------------------|---------------------------------------------------------------------------------------------------------------------------|----------|---------------|\n| sup_code                  | Unique code of the supplier. Used as reference for other entities                                                         | Y        | Varchar (255) |\n| sup_name                  | Supplier name                                                                                                             | Y        | Varchar (255) |\n| sup_image                 | Url of the image name. POST: An external url should be provided.  GET: You will receive a workorderapp url.               | N        | Varchar (255)      |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addfreefields.in.json",
                "out": "./lib/schemas/Addfreefields.out.json"
            }
        },
        "Updatequotation": {
            "main": "./lib/actions/Updatequotation.js",
            "title": "Update quotation",
            "description": "This api is used to fetch generated invoices from WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section.\n\n| Parameter                 | Description                                                                                           |\n|---------------------------|-------------------------------------------------------------------------------------------------------|\n| inv_id                    | Unique invoice ID  number of the invoice                                                              |\n| inv_worksheet_id          | Worksheet ID that is used to generate this invoice                                                    |\n| inv_quo_id                | Quotation ID that is used to generate this invoice                                                    |\n| inv_inv_id                | Parent invoice ID. Used when creating a credit invoice.                                               |\n| inv_type                  | Invoice type, can be DEBIT, CREDIT, CONCEPT_DEBIT or CONCEPT_CREDIT                                   |\n| inv_currency_code         | ISO 4217 currency code                                                                                |\n| inv_currency_symbol       | Currency symbol shown in the UI                                                                       |\n| inv_description           | Description of the invoice                                                                            |\n| inv_invoice_debtor_nr     | Debtor number of the assigned relation                                                                |\n| inv_invoice_debtor_name   | Debtor name of the assigned relation                                                                  |\n| inv_invoice_debtor_email  | Debtor e-mail of the assigned relation                                                                |\n| inv_number_numeric        | Invoice number numeric value                                                                          |\n| inv_number_formatted      | Pretty formatted invoice number                                                                       |\n| inv_status                | Invoice status, can be OPEN, PAYED, OVERDUE, REMINDER_1, REMINDER_2, REMINDER_3 or ...                |\n| inv_reference             | Reference, example purchase order number workorder number                                             |\n| inv_date                  | Invoice date                                                                                          |\n| inv_due_date              | Invoice due date                                                                                      |\n| inv_due_days              | Amount of due days. This days are added to the inv_date to calculate the inv_due_date.                |\n| inv_terms                 | Terms shown in the footer of the PDF.                                                                 |\n| inv_header                | Header shown on top of the PDF.                                                                       |\n| inv_amount                | Total amount including VAT.                                                                           |\n| inv_amount_excl           | Total amount excluding VAT.                                                                           |\n| inv_balance               | Total amounts of the transactions registered to this invoice.                                         |\n| inv_user_create           | User who created this invoice                                                                         |\n| inv_user_mutate           | User who mutated this invoice                                                                         |\n| inv_user_send             | User who marked this invoice as send.                                                                 |\n| inv_timestamp_create      | Timestamp of creation                                                                                 |\n| inv_timestamp_mutate      | Timestamp of mutating                                                                                 |\n| inv_timestamp_payed       | Timestamp when the invoice was marked as payed (inv_amount equal to inv_balance)                      |\n| inv_timestamp_send        | Timestamp of marking the invoice as send.                                                             |\n| iln_lines                 | Array of invoice lines.                                                                               |\n| invoice_debtor            | Invoice debtor.                                                                                       |\n| pdf                       | Temporary PDF url.                                                                                    |\n| ubl                       | Temporary ubl 2.0 url.                                                                                |\n\nInvoice line parameters\n\n| Parameter             | Description                                      |\n|-----------------------|--------------------------------------------------|\n| iln_id                | Line ID                                          |\n| iln_inv_id            | Invoice Id                                       |\n| iln_order             | Position of the line                             |\n| iln_material_code     | Material code                                    |\n| iln_material_hourtype | Hourtype code                                    |\n| iln_description       | Line description                                 |\n| iln_amount            | Line amount                                      |\n| iln_price             | Item price                                       |\n| iln_vat_percentage    | Vat percentage                                   |\n| iln_discount          | Discount percentage                              |\n| iln_total             | Total price excluding vat and discount           |\n| iln_total_discount    | Calculated discount amount                       |\n| iln_total_vat         | Calculated vat amount                            |\n| iln_total_excl        | Total price excluding vat and including discount |\n| iln_total_incl        | Total price including vat and including discount |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Updatequotation.in.json",
                "out": "./lib/schemas/Updatequotation.out.json"
            }
        },
        "PostPrices": {
            "main": "./lib/actions/PostPrices.js",
            "title": "Post Prices",
            "description": "This api is used to fetch generated quotations from WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPrices.in.json",
                "out": "./lib/schemas/PostPrices.out.json"
            }
        },
        "Updateinvoice": {
            "main": "./lib/actions/Updateinvoice.js",
            "title": "Update invoice",
            "description": "This api is used to fetch generated invoices from WorkorderApp.\nThe result can be filtered by using the advanced filter. As described in the introduction section.\n\n| Parameter                 | Description                                                                                           |\n|---------------------------|-------------------------------------------------------------------------------------------------------|\n| inv_id                    | Unique invoice ID  number of the invoice                                                              |\n| inv_worksheet_id          | Worksheet ID that is used to generate this invoice                                                    |\n| inv_quo_id                | Quotation ID that is used to generate this invoice                                                    |\n| inv_inv_id                | Parent invoice ID. Used when creating a credit invoice.                                               |\n| inv_type                  | Invoice type, can be DEBIT, CREDIT, CONCEPT_DEBIT or CONCEPT_CREDIT                                   |\n| inv_currency_code         | ISO 4217 currency code                                                                                |\n| inv_currency_symbol       | Currency symbol shown in the UI                                                                       |\n| inv_description           | Description of the invoice                                                                            |\n| inv_invoice_debtor_nr     | Debtor number of the assigned relation                                                                |\n| inv_invoice_debtor_name   | Debtor name of the assigned relation                                                                  |\n| inv_invoice_debtor_email  | Debtor e-mail of the assigned relation                                                                |\n| inv_number_numeric        | Invoice number numeric value                                                                          |\n| inv_number_formatted      | Pretty formatted invoice number                                                                       |\n| inv_status                | Invoice status, can be OPEN, PAYED, OVERDUE, REMINDER_1, REMINDER_2, REMINDER_3 or ...                |\n| inv_reference             | Reference, example purchase order number workorder number                                             |\n| inv_date                  | Invoice date                                                                                          |\n| inv_due_date              | Invoice due date                                                                                      |\n| inv_due_days              | Amount of due days. This days are added to the inv_date to calculate the inv_due_date.                |\n| inv_terms                 | Terms shown in the footer of the PDF.                                                                 |\n| inv_header                | Header shown on top of the PDF.                                                                       |\n| inv_amount                | Total amount including VAT.                                                                           |\n| inv_amount_excl           | Total amount excluding VAT.                                                                           |\n| inv_balance               | Total amounts of the transactions registered to this invoice.                                         |\n| inv_user_create           | User who created this invoice                                                                         |\n| inv_user_mutate           | User who mutated this invoice                                                                         |\n| inv_user_send             | User who marked this invoice as send.                                                                 |\n| inv_timestamp_create      | Timestamp of creation                                                                                 |\n| inv_timestamp_mutate      | Timestamp of mutating                                                                                 |\n| inv_timestamp_payed       | Timestamp when the invoice was marked as payed (inv_amount equal to inv_balance)                      |\n| inv_timestamp_send        | Timestamp of marking the invoice as send.                                                             |\n| iln_lines                 | Array of invoice lines.                                                                               |\n| invoice_debtor            | Invoice debtor.                                                                                       |\n| pdf                       | Temporary PDF url.                                                                                    |\n| ubl                       | Temporary ubl 2.0 url.                                                                                |\n\nInvoice line parameters\n\n| Parameter             | Description                                      |\n|-----------------------|--------------------------------------------------|\n| iln_id                | Line ID                                          |\n| iln_inv_id            | Invoice Id                                       |\n| iln_order             | Position of the line                             |\n| iln_material_code     | Material code                                    |\n| iln_material_hourtype | Hourtype code                                    |\n| iln_description       | Line description                                 |\n| iln_amount            | Line amount                                      |\n| iln_price             | Item price                                       |\n| iln_vat_percentage    | Vat percentage                                   |\n| iln_discount          | Discount percentage                              |\n| iln_total             | Total price excluding vat and discount           |\n| iln_total_discount    | Calculated discount amount                       |\n| iln_total_vat         | Calculated vat amount                            |\n| iln_total_excl        | Total price excluding vat and including discount |\n| iln_total_incl        | Total price including vat and including discount |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Updateinvoice.in.json",
                "out": "./lib/schemas/Updateinvoice.out.json"
            }
        },
        "Addtransactions": {
            "main": "./lib/actions/Addtransactions.js",
            "title": "Add transactions",
            "description": "This api is used to fetch a single generated invoice from WorkorderApp.\nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1&operator=gt\nAdding multiple filters: &key[]=key1&value[]=value1&operator[]=eq&key[]=key2&value[]=value2&operator[]=gt\n\nFollowing operators are allowed:\n\n| Operator | Description                 |\n|----------|-----------------------------|\n| li       | Like (%)                    |\n| eq       | Equal (=)                   |\n| ne       | Not equal (!=)              |\n| gt       | Greather than (>)           |\n| ge       | Greather than or equal (>=) |\n| lt       | Less than  (<)              |\n| le       | Less than or equal (<=)     |\nTransaction parameters. The invoice id of a transaction transaction can be empty if a transaction is not assigned to an invoice. Once it is assigned the balance of the invoice will be adjusted.\n\n| Paramter                    | Description                                | Type         |\n|-----------------------------|--------------------------------------------|--------------|\n| int_inv_id                  | Invoice ID                                 | int(11)      |\n| int_transaction_id          | Transaction ID                             | varchar(255) |\n| int_external_transaction_id | External Transaction ID                    | varchar(255) |\n| int_description             | Transaction Description                    | varchar(255) |\n| int_amount                  | Transaction amount                         | decimal(7,2) |\n| int_type                    | Transaction type                           | varchar(255) |\n| int_type_description        | Transaction type description               | varchar(255) |\n| int_status                  | Transaction status,NEW or PROCESSED        | varchar(55)  |\n| int_user                    | User/entity who registered the transaction | varchar(255) |\n| int_timestamp               | Timestamp registered                       | timestamp    |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addtransactions.in.json",
                "out": "./lib/schemas/Addtransactions.out.json"
            }
        },
        "Updatetransactions": {
            "main": "./lib/actions/Updatetransactions.js",
            "title": "Update transactions",
            "description": "This api is used to fetch a single generated invoice from WorkorderApp.\nFilters can be given by adding a key and values array to the URL.\nAdding a single filter: &key=key1&value=value1&operator=gt\nAdding multiple filters: &key[]=key1&value[]=value1&operator[]=eq&key[]=key2&value[]=value2&operator[]=gt\n\nFollowing operators are allowed:\n\n| Operator | Description                 |\n|----------|-----------------------------|\n| li       | Like (%)                    |\n| eq       | Equal (=)                   |\n| ne       | Not equal (!=)              |\n| gt       | Greather than (>)           |\n| ge       | Greather than or equal (>=) |\n| lt       | Less than  (<)              |\n| le       | Less than or equal (<=)     |\nTransaction parameters. The invoice id of a transaction transaction can be empty if a transaction is not assigned to an invoice. Once it is assigned the balance of the invoice will be adjusted.\n\n| Parameter                    | Description                                | Type         |\n|-----------------------------|--------------------------------------------|--------------|\n| int_inv_id                  | Invoice ID                                 | int(11)      |\n| int_transaction_id          | Transaction ID                             | varchar(255) |\n| int_external_transaction_id | External Transaction ID                    | varchar(255) |\n| int_description             | Transaction Description                    | varchar(255) |\n| int_amount                  | Transaction amount                         | decimal(7,2) |\n| int_type                    | Transaction type                           | varchar(255) |\n| int_type_description        | Transaction type description               | varchar(255) |\n| int_status                  | Transaction status,NEW or PROCESSED        | varchar(55)  |\n| int_user                    | User/entity who registered the transaction | varchar(255) |\n| int_timestamp               | Timestamp registered                       | timestamp    |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Updatetransactions.in.json",
                "out": "./lib/schemas/Updatetransactions.out.json"
            }
        },
        "Addcontactpersons": {
            "main": "./lib/actions/Addcontactpersons.js",
            "title": "Add contact persons",
            "description": "This api is used to sync contact persons with WorkorderApp. A contact person should always be related to a certain client.\n`cpn_code` is used as a unique reference to either insert or update the address.\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| cpn_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| cpn_code                  | Unique code of the contact person. Used as reference in the workorder.      | Y        | Varchar (255) |\n| cpn_name                  | Name of the contact person.                                                 | Y        | Varchar (255) |\n| cpn_phone                 | Phone of the contact person.                                                | N        | Varchar (255) |\n| cpn_email                 | Email of the contact person.                                                | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addcontactpersons.in.json",
                "out": "./lib/schemas/Addcontactpersons.out.json"
            }
        },
        "Addgeneric_notes": {
            "main": "./lib/actions/Addgeneric_notes.js",
            "title": "Add generic_notes",
            "description": "This api is used to sync contact persons with WorkorderApp. A contact person should always be related to a certain client.\n`cpn_code` is used as a unique reference to either insert or update the address.\nEach address record can contain the following data:\n\n| Parameter                 | Description                                                                 | Required | Type (size)   |\n|---------------------------|-----------------------------------------------------------------------------|----------|---------------|\n| cpn_debtor_nr             | Debtor number of the relation                                               | Y        | Varchar (255) |\n| cpn_code                  | Unique code of the contact person. Used as reference in the workorder.      | Y        | Varchar (255) |\n| cpn_name                  | Name of the contact person.                                                 | Y        | Varchar (255) |\n| cpn_phone                 | Phone of the contact person.                                                | N        | Varchar (255) |\n| cpn_email                 | Email of the contact person.                                                | N        | Varchar (255) |",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Addgeneric_notes.in.json",
                "out": "./lib/schemas/Addgeneric_notes.out.json"
            }
        }
    }
}